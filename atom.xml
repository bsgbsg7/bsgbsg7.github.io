<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bsgbsg7&#39;s World</title>
  
  <subtitle>[object Object]</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-06-09T14:27:36.652Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Bsgbsg7</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ROS</title>
    <link href="http://example.com/2023/06/05/ros/"/>
    <id>http://example.com/2023/06/05/ros/</id>
    <published>2023-06-05T06:37:45.907Z</published>
    <updated>2023-06-09T14:27:36.652Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ROS"><a href="#ROS" class="headerlink" title="ROS"></a>ROS</h2><p><strong>参考资料</strong></p><p><a href="http://wiki.ros.org/roslaunch/XML/rosparam">roslaunch&#x2F;XML&#x2F;rosparam - ROS Wiki</a></p><p><a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/416-launchwen-jian-biao-qian-zhi-rosparam.html">4.2.6 launch文件标签之rosparam · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程</a></p><h3 id="group"><a href="#group" class="headerlink" title="group"></a>group</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 启动两对乌龟GUI --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">&quot;first&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtlesim_node&quot;</span> <span class="attr">name</span>=<span class="string">&quot;my_turtle&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_teleop_key&quot;</span> <span class="attr">name</span>=<span class="string">&quot;my_key&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">&quot;second&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtlesim_node&quot;</span> <span class="attr">name</span>=<span class="string">&quot;my_turtle&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;turtlesim&quot;</span> <span class="attr">type</span>=<span class="string">&quot;turtle_teleop_key&quot;</span> <span class="attr">name</span>=<span class="string">&quot;my_key&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="arg"><a href="#arg" class="headerlink" title="arg"></a>arg</h3><p><a href="http://wiki.ros.org/roslaunch/XML/arg">roslaunch&#x2F;XML&#x2F;arg - ROS Wiki</a></p><p><img src="/2023/06/05/ros/image-20230605150215637.png" alt="image-20230605150215637"></p><p><img src="/2023/06/05/ros/image-20230605150243779.png" alt="image-20230605150243779"></p><p><strong>可以通过 include 以及 命令行 传递参数</strong></p><p><img src="/2023/06/05/ros/image-20230605150409582.png" alt="image-20230605150409582"></p><p><img src="/2023/06/05/ros/image-20230605151741944.png" alt="image-20230605151741944"></p><p>先运行 included.launch 可以看到是默认值 “done”，再运行 args.launch，可以看到参数 “weaweawe” 传递给了 A 和 B</p><p><img src="/2023/06/05/ros/image-20230605152443028.png" alt="image-20230605152443028"></p><h3 id="Timer"><a href="#Timer" class="headerlink" title="Timer"></a>Timer</h3><p><a href="https://blog.csdn.net/jiu_liu/article/details/119044571">(56条消息) ros timer(定时器）_九柳的博客-CSDN博客</a></p><p><img src="/2023/06/05/ros/image-20230605211216749.png" alt="image-20230605211216749"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timer_ = nh_private.<span class="built_in">createTimer</span>(ros::<span class="built_in">Duration</span>(<span class="number">1.0</span>/<span class="built_in">max</span>(freq,<span class="number">1.0</span>)),&amp;OdomEstimationNode::spin, <span class="keyword">this</span>);</span><br></pre></td></tr></table></figure><p>&amp;OdomEstimationNode::spin 获取对象的函数指针，调用入口，this指针说明这是哪个对象<br>因为cpp类中所有成员共享全部函数，所以入口只有一个，通过类名::函数名获取，区分对象用this指针（构造器中构造时使用），或者对象名</p><h3 id="subscribe函数用于订阅topic并添加回调函数"><a href="#subscribe函数用于订阅topic并添加回调函数" class="headerlink" title="subscribe函数用于订阅topic并添加回调函数"></a><code>subscribe</code>函数用于订阅<code>topic</code>并添加<a href="https://so.csdn.net/so/search?q=%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0&spm=1001.2101.3001.7020">回调函数</a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloud_subs_= nh_.<span class="built_in">subscribe</span>&lt;sensor_msgs::PointCloud2&gt;(<span class="string">&quot;segmentation_result&quot;</span>, <span class="number">1</span>,&amp;RecognitionClass::cloudCallBack, <span class="keyword">this</span>);</span><br></pre></td></tr></table></figure><ul><li><code>PointCloud2</code>为订阅的消息类型</li><li><code>&quot;segmentation_result&quot;</code>为<code>topic</code>名，之后会重映射为真实的名称</li><li><code>1</code>为处理队列大小</li><li><code>&amp;RecognitionClass::cloudCallBack</code>是回调函数地址</li><li><code>this</code>为回调函数所处的类，即当前类</li></ul><p><img src="/2023/06/05/ros/image-20230605213906693.png" alt="image-20230605213906693"></p><h3 id="advertise"><a href="#advertise" class="headerlink" title="advertise"></a>advertise</h3><p>就是正常的发布话题</p><p>[roscpp&#x2F;Overview&#x2F;Publishers and Subscribers - ROS Wiki](<a href="https://wiki.ros.org/roscpp/Overview/Publishers">https://wiki.ros.org/roscpp/Overview/Publishers</a> and Subscribers)</p><p><a href="https://blog.csdn.net/xzs520xzs/article/details/120878681">(58条消息) 在ros中函数advertise()的作用_n.advertise_@晓凡的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/Fourier_Legend/article/details/82109817">(58条消息) ROS 之 advertise 详解_ros中advertise_Dr. Qing的博客-CSDN博客</a></p><p><img src="/2023/06/05/ros/image-20230605215922473.png" alt="image-20230605215922473"></p><p><img src="/2023/06/05/ros/image-20230605215907910.png" alt="image-20230605215907910"></p><h3 id="push-back-函数"><a href="#push-back-函数" class="headerlink" title="push_back 函数"></a>push_back 函数</h3><p>函数将一个新的元素加到<a href="https://so.csdn.net/so/search?q=vector&spm=1001.2101.3001.7020">vector</a>的最后面，位置为当前最后一个元素的下一个元素</p><h3 id="Quaternion-四元数"><a href="#Quaternion-四元数" class="headerlink" title="Quaternion 四元数"></a>Quaternion 四元数</h3><p>[tf2&#x2F;Tutorials&#x2F;Quaternions - ROS Wiki](<a href="http://wiki.ros.org/tf2/Tutorials/Quaternions#:~:text=ROS">http://wiki.ros.org/tf2/Tutorials/Quaternions#:~:text=ROS</a> uses quaternions to track and apply rotations.,like Eigen put w as the first number!).)</p><p><a href="https://zhuanlan.zhihu.com/p/27541307">四元数——旋转 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/s12k39/article/details/110200406">(57条消息) ROS 四元数和RPY欧拉角转换_c++四元数转欧拉角_ZiTian_Shi的博客-CSDN博客</a></p><p><img src="/2023/06/05/ros/image-20230607204138476.png" alt="image-20230607204138476"></p><h3 id="cmd-vel"><a href="#cmd-vel" class="headerlink" title="cmd_vel"></a>cmd_vel</h3><p><img src="/2023/06/05/ros/image-20230607205248458.png" alt="image-20230607205248458"></p><h3 id="src文件内多个main函数编译报错"><a href="#src文件内多个main函数编译报错" class="headerlink" title="src文件内多个main函数编译报错"></a>src文件内多个main函数编译报错</h3><p>单独添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add_excutable;</span><br><span class="line">add_depenpencies;</span><br><span class="line">target_link_libraries;</span><br></pre></td></tr></table></figure><h3 id="雷达数据处理"><a href="#雷达数据处理" class="headerlink" title="雷达数据处理"></a>雷达数据处理</h3><p><a href="https://blog.csdn.net/wang073081/article/details/105945218">(58条消息) ROS中激光雷达数据类型传递转换及自定义点云数据类型介绍_ros 自定义雷达消息_四海五湖百夜月的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_45947476/article/details/127527339">(58条消息) ROS小车——雷达的使用与SLAM建图（4）_robot_navigation_running snail szj的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/ultimate1212/article/details/80995545">(58条消息) ros中激光雷达的消息类型（sensor_msgs&#x2F;LaserScan Message）说明_ultimate1212的博客-CSDN博客</a></p><p><a href="https://docs.ros.org/en/noetic/api/sensor_msgs/html/msg/LaserScan.html">sensor_msgs&#x2F;LaserScan Documentation (ros.org)</a></p><p><a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/131-helloworldc724829.html">1.3.2 HelloWorld实现A(C++) · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程</a></p><h3 id="ros下python文件的使用"><a href="#ros下python文件的使用" class="headerlink" title="ros下python文件的使用"></a>ros下python文件的使用</h3><p><a href="http://wiki.ros.org/ROS/Tutorials/WritingPublisherSubscriber(python)">ROS&#x2F;Tutorials&#x2F;WritingPublisherSubscriber(python) - ROS Wiki</a></p><p><a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/132-helloworldpython724829.html">1.3.3 HelloWorld实现B(Python) · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程</a></p><p><a href="https://blog.csdn.net/qq_58011370/article/details/122319514">(58条消息) ROS使用Python编写的步骤_ros编译python文件_Believe yourself!!!的博客-CSDN博客</a></p><h3 id="雷达滤波"><a href="#雷达滤波" class="headerlink" title="雷达滤波"></a>雷达滤波</h3><p><a href="https://blog.csdn.net/asdli/article/details/91128367">(58条消息) 九、ROS小车闭环控制：使用laser_filters在ROS内对二维（2D）激光雷达数据进行基本滤波_orcasdli的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_37082966/article/details/93098721">(58条消息) ROS简单实现订阅&#x2F;scan激光雷达的距离信息_ros scan_多年以后ls的博客-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ROS&quot;&gt;&lt;a href=&quot;#ROS&quot; class=&quot;headerlink&quot; title=&quot;ROS&quot;&gt;&lt;/a&gt;ROS&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wiki.ros.org/roslaunc</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ESP32 LVGL（6）</title>
    <link href="http://example.com/2023/06/04/cx-lvgl-6/"/>
    <id>http://example.com/2023/06/04/cx-lvgl-6/</id>
    <published>2023-06-04T15:39:18.292Z</published>
    <updated>2023-06-04T16:55:31.328Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><blockquote><p>主界面 UI 设计以及移植</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>郁闷死我了</p><h3 id="霸哥"><a href="#霸哥" class="headerlink" title="霸哥"></a>霸哥</h3><ol><li><p>即使如此严格地分开 client 执行也会报错，人麻了😭😭😭😭😭，这个 bug 改来改去改了三小时，为什么他程序报错但也可以执行啊😭😭😭。</p><p>23:44了，我不管了，等它什么时候影响运行了再改吧。</p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (weather_client.<span class="built_in">connect</span>(<span class="string">&quot;api.seniverse.com&quot;</span>, <span class="number">80</span>))</span><br><span class="line">&#123;</span><br><span class="line">    weather_client.<span class="built_in">print</span>(high_low_https); <span class="comment">// 向服务器发送HTTP请求</span></span><br><span class="line">    <span class="keyword">while</span> (weather_client.<span class="built_in">connected</span>() || weather_client.<span class="built_in">available</span>())</span><br><span class="line">    &#123; <span class="comment">// 服务器保持连接</span></span><br><span class="line">        <span class="keyword">if</span> (weather_client.<span class="built_in">available</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            String line = weather_client.<span class="built_in">readStringUntil</span>(<span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 等待响应并且读取响应信息</span></span><br><span class="line">            Serial.<span class="built_in">println</span>(line);</span><br><span class="line">            <span class="function">DynamicJsonDocument <span class="title">doc</span><span class="params">(capacity)</span></span>;</span><br><span class="line">            <span class="built_in">deserializeJson</span>(doc, line);</span><br><span class="line">            JsonObject results_0_daily_0 = doc[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;daily&quot;</span>][<span class="number">0</span>];</span><br><span class="line">            tem_high = results_0_daily_0[<span class="string">&quot;high&quot;</span>].<span class="built_in">as</span>&lt;<span class="type">int</span>&gt;(); <span class="comment">// &quot;33&quot;</span></span><br><span class="line">            tem_low = results_0_daily_0[<span class="string">&quot;low&quot;</span>].<span class="built_in">as</span>&lt;<span class="type">int</span>&gt;();   <span class="comment">// &quot;21&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    weather_client.<span class="built_in">stop</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (weather_client.<span class="built_in">connect</span>(<span class="string">&quot;api.seniverse.com&quot;</span>, <span class="number">80</span>))</span><br><span class="line">&#123;</span><br><span class="line">    weather_client.<span class="built_in">print</span>(now_https); <span class="comment">// 向服务器发送HTTP请求</span></span><br><span class="line">    <span class="keyword">while</span> (weather_client.<span class="built_in">connected</span>() || weather_client.<span class="built_in">available</span>())</span><br><span class="line">    &#123; <span class="comment">// 服务器保持连接</span></span><br><span class="line">        <span class="keyword">if</span> (weather_client.<span class="built_in">available</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            String line = weather_client.<span class="built_in">readStringUntil</span>(<span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 等待响应并且读取响应信息</span></span><br><span class="line">            Serial.<span class="built_in">println</span>(line);</span><br><span class="line">            <span class="function">DynamicJsonDocument <span class="title">doc</span><span class="params">(capacity)</span></span>;</span><br><span class="line">            <span class="built_in">deserializeJson</span>(doc, line);</span><br><span class="line">            JsonObject now = doc[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;now&quot;</span>];</span><br><span class="line">            tem_now = now[<span class="string">&quot;temperature&quot;</span>].<span class="built_in">as</span>&lt;<span class="type">int</span>&gt;(); <span class="comment">// &quot;33&quot;</span></span><br><span class="line">            update_time = doc[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;last_update&quot;</span>].<span class="built_in">as</span>&lt;String&gt;();</span><br><span class="line">            position = doc[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;location&quot;</span>][<span class="string">&quot;name&quot;</span>].<span class="built_in">as</span>&lt;String&gt;();</span><br><span class="line">            weather_condition = now[<span class="string">&quot;text&quot;</span>].<span class="built_in">as</span>&lt;String&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    weather_client.<span class="built_in">stop</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (weather_client.<span class="built_in">connect</span>(<span class="string">&quot;api.seniverse.com&quot;</span>, <span class="number">80</span>))</span><br><span class="line">&#123;</span><br><span class="line">    weather_client.<span class="built_in">print</span>(air_https); <span class="comment">// 向服务器发送HTTP请求</span></span><br><span class="line">    <span class="keyword">while</span> (weather_client.<span class="built_in">connected</span>() || weather_client.<span class="built_in">available</span>())</span><br><span class="line">    &#123; <span class="comment">// 服务器保持连接</span></span><br><span class="line">        <span class="keyword">if</span> (weather_client.<span class="built_in">available</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            String line = weather_client.<span class="built_in">readStringUntil</span>(<span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 等待响应并且读取响应信息</span></span><br><span class="line">            Serial.<span class="built_in">println</span>(line);</span><br><span class="line">            <span class="function">DynamicJsonDocument <span class="title">doc</span><span class="params">(capacity)</span></span>;</span><br><span class="line">            <span class="built_in">deserializeJson</span>(doc, line);</span><br><span class="line">            JsonObject now = doc[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;air&quot;</span>];</span><br><span class="line">            air = now[<span class="string">&quot;city&quot;</span>][<span class="string">&quot;quality&quot;</span>].<span class="built_in">as</span>&lt;String&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    weather_client.<span class="built_in">stop</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">111494</span>][D][WiFiClient.cpp:<span class="number">546</span>] <span class="built_in">connected</span>(): Disconnected: RES: <span class="number">0</span>, ERR: <span class="number">128</span></span><br><span class="line">Date: Sun, <span class="number">04</span> Jun <span class="number">2023</span> <span class="number">15</span>:<span class="number">29</span>:<span class="number">54</span> GMT</span><br><span class="line">Content-Type: application/json; charset=utf<span class="number">-8</span></span><br><span class="line">Content-Length: <span class="number">388</span></span><br><span class="line">Connection: close</span><br><span class="line">access-control-allow-origin: *</span><br><span class="line">etag: W/<span class="string">&quot;184-c/w+MpyRWp/b7jh48Urdlg39RDs&quot;</span></span><br><span class="line">x-powered-by: Express</span><br><span class="line">x-ratelimit-limit: <span class="number">50</span>;w=<span class="number">60</span></span><br><span class="line">x-ratelimit-remaining: <span class="number">46</span></span><br><span class="line">x-ratelimit-reset: <span class="number">36.851</span></span><br><span class="line">x-request-id: F2V+YfUeIdME4uu51sLD</span><br><span class="line">x-tenant-id: <span class="number">1</span>db8c05a<span class="number">-9790</span><span class="number">-4035</span><span class="number">-83b</span>a-d63344b95702</span><br></pre></td></tr></table></figure><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="/2023/06/04/cx-lvgl-6/IMG_20230605_004558.jpg" alt="IMG_20230605_004558"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;主界面 UI 设计以及移植&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ESP32 LVGL（5）</title>
    <link href="http://example.com/2023/06/01/cx-lvgl-5/"/>
    <id>http://example.com/2023/06/01/cx-lvgl-5/</id>
    <published>2023-06-01T14:46:56.002Z</published>
    <updated>2023-06-01T15:46:35.683Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><blockquote><ol><li>sk6812 彩灯测试。</li><li>jq8900 测试。</li></ol></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>参考了<a href="https://blog.csdn.net/qq_53092944?type=blog">棉花糖永远滴神</a>博主的文章<a href="https://blog.csdn.net/qq_53092944/article/details/130182708">ESP32驱动JQ8900语音模块</a>。</p><p>刚开始测试 JQ8900 由单片机单线通信的时候全是噪音，声音几乎听不见……睡了一觉起来就什么都正常了😢😢😢……</p><h3 id="SK6812"><a href="#SK6812" class="headerlink" title="SK6812"></a>SK6812</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;FastLED.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_PIN     13</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM_LEDS    1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BRIGHTNESS  50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_TYPE    SK6812</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COLOR_ORDER GRB</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UPDATES_PER_SECOND 100</span></span><br><span class="line"></span><br><span class="line">CRGB leds[NUM_LEDS];<span class="comment">// 建立光带leds</span></span><br><span class="line">CRGBPalette16 currentPalette;</span><br><span class="line">TBlendType    currentBlending;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> CRGBPalette16 myRedWhiteBluePalette;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">const</span> TProgmemPalette16 myRedWhiteBluePalette_p PROGMEM;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This function fills the palette with totally random colors.</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SetupTotallyRandomPalette</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">        currentPalette[i] = <span class="built_in">CHSV</span>( <span class="built_in">random8</span>(), <span class="number">255</span>, <span class="built_in">random8</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This function sets up a palette of black and white stripes,</span></span><br><span class="line"><span class="comment">// using code.  Since the palette is effectively an array of</span></span><br><span class="line"><span class="comment">// sixteen CRGB colors, the various fill_* functions can be used</span></span><br><span class="line"><span class="comment">// to set them up.</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SetupBlackAndWhiteStripedPalette</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// &#x27;black out&#x27; all 16 palette entries...</span></span><br><span class="line">    <span class="built_in">fill_solid</span>( currentPalette, <span class="number">16</span>, CRGB::Black);</span><br><span class="line">    <span class="comment">// and set every fourth one to white.</span></span><br><span class="line">    currentPalette[<span class="number">0</span>] = CRGB::White;</span><br><span class="line">    currentPalette[<span class="number">4</span>] = CRGB::White;</span><br><span class="line">    currentPalette[<span class="number">8</span>] = CRGB::White;</span><br><span class="line">    currentPalette[<span class="number">12</span>] = CRGB::White;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This function sets up a palette of purple and green stripes.</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SetupPurpleAndGreenPalette</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CRGB purple = <span class="built_in">CHSV</span>( HUE_PURPLE, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    CRGB green  = <span class="built_in">CHSV</span>( HUE_GREEN, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    CRGB black  = CRGB::Black;</span><br><span class="line">    </span><br><span class="line">    currentPalette = <span class="built_in">CRGBPalette16</span>(</span><br><span class="line">                                   green,  green,  black,  black,</span><br><span class="line">                                   purple, purple, black,  black,</span><br><span class="line">                                   green,  green,  black,  black,</span><br><span class="line">                                   purple, purple, black,  black );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// This example shows how to set up a static color palette</span></span><br><span class="line"><span class="comment">// which is stored in PROGMEM (flash), which is almost always more</span></span><br><span class="line"><span class="comment">// plentiful than RAM.  A static PROGMEM palette like this</span></span><br><span class="line"><span class="comment">// takes up 64 bytes of flash.</span></span><br><span class="line"><span class="type">const</span> TProgmemPalette16 myRedWhiteBluePalette_p PROGMEM =</span><br><span class="line">&#123;</span><br><span class="line">    CRGB::Red,</span><br><span class="line">    CRGB::Gray, <span class="comment">// &#x27;white&#x27; is too bright compared to red and blue</span></span><br><span class="line">    CRGB::Blue,</span><br><span class="line">    CRGB::Black,</span><br><span class="line">    </span><br><span class="line">    CRGB::Red,</span><br><span class="line">    CRGB::Gray,</span><br><span class="line">    CRGB::Blue,</span><br><span class="line">    CRGB::Black,</span><br><span class="line">    </span><br><span class="line">    CRGB::Red,</span><br><span class="line">    CRGB::Red,</span><br><span class="line">    CRGB::Gray,</span><br><span class="line">    CRGB::Gray,</span><br><span class="line">    CRGB::Blue,</span><br><span class="line">    CRGB::Blue,</span><br><span class="line">    CRGB::Black,</span><br><span class="line">    CRGB::Black</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">FillLEDsFromPaletteColors</span><span class="params">( <span class="type">uint8_t</span> colorIndex)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">uint8_t</span> brightness = <span class="number">255</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM_LEDS; i++) &#123;</span><br><span class="line">        leds[i] = <span class="built_in">ColorFromPalette</span>( currentPalette, colorIndex, brightness, currentBlending);</span><br><span class="line">        colorIndex += <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// There are several different palettes of colors demonstrated here.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// FastLED provides several &#x27;preset&#x27; palettes: RainbowColors_p, RainbowStripeColors_p,</span></span><br><span class="line"><span class="comment">// OceanColors_p, CloudColors_p, LavaColors_p, ForestColors_p, and PartyColors_p.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Additionally, you can manually define your own color palettes, or you can write</span></span><br><span class="line"><span class="comment">// code that creates color palettes on the fly.  All are shown here.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ChangePalettePeriodically</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">uint8_t</span> secondHand = (<span class="built_in">millis</span>() / <span class="number">1000</span>) % <span class="number">60</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">uint8_t</span> lastSecond = <span class="number">99</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( lastSecond != secondHand) &#123;</span><br><span class="line">        lastSecond = secondHand;</span><br><span class="line">        <span class="keyword">if</span>( secondHand ==  <span class="number">0</span>)  &#123; currentPalette = RainbowColors_p;         currentBlending = LINEARBLEND; &#125;</span><br><span class="line">        <span class="keyword">if</span>( secondHand == <span class="number">10</span>)  &#123; currentPalette = RainbowStripeColors_p;   currentBlending = NOBLEND;  &#125;</span><br><span class="line">        <span class="keyword">if</span>( secondHand == <span class="number">15</span>)  &#123; currentPalette = RainbowStripeColors_p;   currentBlending = LINEARBLEND; &#125;</span><br><span class="line">        <span class="keyword">if</span>( secondHand == <span class="number">20</span>)  &#123; <span class="built_in">SetupPurpleAndGreenPalette</span>();             currentBlending = LINEARBLEND; &#125;</span><br><span class="line">        <span class="keyword">if</span>( secondHand == <span class="number">25</span>)  &#123; <span class="built_in">SetupTotallyRandomPalette</span>();              currentBlending = LINEARBLEND; &#125;</span><br><span class="line">        <span class="keyword">if</span>( secondHand == <span class="number">30</span>)  &#123; <span class="built_in">SetupBlackAndWhiteStripedPalette</span>();       currentBlending = NOBLEND; &#125;</span><br><span class="line">        <span class="keyword">if</span>( secondHand == <span class="number">35</span>)  &#123; <span class="built_in">SetupBlackAndWhiteStripedPalette</span>();       currentBlending = LINEARBLEND; &#125;</span><br><span class="line">        <span class="keyword">if</span>( secondHand == <span class="number">40</span>)  &#123; currentPalette = CloudColors_p;           currentBlending = LINEARBLEND; &#125;</span><br><span class="line">        <span class="keyword">if</span>( secondHand == <span class="number">45</span>)  &#123; currentPalette = PartyColors_p;           currentBlending = LINEARBLEND; &#125;</span><br><span class="line">        <span class="keyword">if</span>( secondHand == <span class="number">50</span>)  &#123; currentPalette = myRedWhiteBluePalette_p; currentBlending = NOBLEND;  &#125;</span><br><span class="line">        <span class="keyword">if</span>( secondHand == <span class="number">55</span>)  &#123; currentPalette = myRedWhiteBluePalette_p; currentBlending = LINEARBLEND; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">delay</span>( <span class="number">1000</span> ); <span class="comment">// power-up safety delay</span></span><br><span class="line">    <span class="comment">// Serial.begin(115200);</span></span><br><span class="line">    FastLED.<span class="built_in">addLeds</span>&lt;LED_TYPE, LED_PIN, COLOR_ORDER&gt;(leds, NUM_LEDS).<span class="built_in">setCorrection</span>( TypicalLEDStrip );</span><br><span class="line">    FastLED.<span class="built_in">setBrightness</span>(  BRIGHTNESS );</span><br><span class="line">    </span><br><span class="line">    currentPalette = RainbowColors_p;</span><br><span class="line">    currentBlending = LINEARBLEND;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">ChangePalettePeriodically</span>();</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="number">123</span>);</span><br><span class="line">    <span class="type">static</span> <span class="type">uint8_t</span> startIndex = <span class="number">0</span>;</span><br><span class="line">    startIndex = startIndex + <span class="number">1</span>; <span class="comment">/* motion speed */</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">FillLEDsFromPaletteColors</span>( startIndex);</span><br><span class="line">    </span><br><span class="line">    FastLED.<span class="built_in">show</span>();</span><br><span class="line">    FastLED.<span class="built_in">delay</span>(<span class="number">1000</span> / UPDATES_PER_SECOND);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JQ8900"><a href="#JQ8900" class="headerlink" title="JQ8900"></a>JQ8900</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">demo10_my_timer</span><span class="params">(<span class="type">lv_timer_t</span> *timer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    I2C_BM8563_TimeTypeDef timeStruct;</span><br><span class="line">    I2C_BM8563_DateTypeDef dateStruct;</span><br><span class="line">    rtc.<span class="built_in">getTime</span>(&amp;timeStruct);</span><br><span class="line">    rtc.<span class="built_in">getDate</span>(&amp;dateStruct);</span><br><span class="line"> </span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">char</span> *week_day[<span class="number">7</span>] = &#123;<span class="string">&quot;Sunday&quot;</span>, <span class="string">&quot;Monday&quot;</span>, <span class="string">&quot;Tuesday&quot;</span>, <span class="string">&quot;Wednesday&quot;</span>, <span class="string">&quot;Thursday&quot;</span>, <span class="string">&quot;Friday&quot;</span>, <span class="string">&quot;Saturday&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> year = dateStruct.year;</span><br><span class="line">    <span class="type">int</span> month = dateStruct.month;</span><br><span class="line">    <span class="type">int</span> day = dateStruct.date;</span><br><span class="line">    <span class="type">int</span> weekday = dateStruct.weekDay;</span><br><span class="line">    <span class="type">int</span> hour = timeStruct.hours;</span><br><span class="line">    <span class="type">int</span> minutes = timeStruct.minutes;</span><br><span class="line">    <span class="type">int</span> second = timeStruct.seconds;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (timer != <span class="literal">NULL</span> &amp;&amp; timer-&gt;user_data != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">lv_clock_t</span> *clock = (<span class="type">lv_clock_t</span> *)(timer-&gt;user_data);</span><br><span class="line">        <span class="keyword">if</span> (clock-&gt;time_label != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">lv_label_set_text_fmt</span>(clock-&gt;time_label, <span class="string">&quot;%02d:%02d:%02d&quot;</span>, hour, minutes, second);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(clock-&gt;time_label, <span class="built_in">lv_obj_get_parent</span>(clock-&gt;time_label), LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (clock-&gt;date_label != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">lv_label_set_text_fmt</span>(clock-&gt;date_label, <span class="string">&quot;%d-%02d-%02d&quot;</span>, year, month, day);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(clock-&gt;date_label, <span class="built_in">lv_obj_get_parent</span>(clock-&gt;date_label), LV_ALIGN_TOP_MID, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (clock-&gt;weekday_label != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">lv_label_set_text_fmt</span>(clock-&gt;weekday_label, <span class="string">&quot;%s&quot;</span>, week_day[weekday]);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(clock-&gt;weekday_label, <span class="built_in">lv_obj_get_parent</span>(clock-&gt;weekday_label), LV_ALIGN_BOTTOM_MID, <span class="number">-2</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="/2023/06/01/cx-lvgl-5/image-20230601234606013.png" alt="image-20230601234606013"></p><p><img src="/2023/06/01/cx-lvgl-5/image-20230601234614757.png" alt="image-20230601234614757"></p><p><img src="/2023/06/01/cx-lvgl-5/image-20230601234625808.png" alt="image-20230601234625808"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;sk6812 彩灯测试。&lt;/li&gt;
&lt;li&gt;jq8900 测试。&lt;/li&gt;
&lt;/ol&gt;
&lt;/block</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ESP32 LVGL（0）</title>
    <link href="http://example.com/2023/06/01/cx-lvgl-0/"/>
    <id>http://example.com/2023/06/01/cx-lvgl-0/</id>
    <published>2023-06-01T14:43:20.768Z</published>
    <updated>2023-06-01T15:21:17.753Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><blockquote><p>万年历硬件部分。</p></blockquote><p>路途坎坷😭😭😭😭😭😭😭😭😭😭😭😭😭😭</p><h2 id="初版"><a href="#初版" class="headerlink" title="初版"></a>初版</h2><p><img src="/2023/06/01/cx-lvgl-0/image-20230601231421226.png" alt="image-20230601231421226"></p><p><strong>之前未考虑到的问题</strong></p><blockquote><ol><li>FPC排座太难焊了🥲🥲🥲，稍微多一点锡就会连锡，并且<strong>怎么刮不下来啊</strong>😭😭😭，怎么刮都刮不下来</li><li>LVGL 框架确实不难学，但是为什么现有移植好的驱动是<strong>基于 IDF</strong> 的啊😭😭😭，对于只会 Arduino 框架的菜🐶代码完全看不懂啊😭😭😭</li><li>从零开始移植这个老驱动到 Arduino 框架难度太大了哇😭😭😭</li></ol></blockquote><p>最终选择去掉屏幕部分，选择使用现有的屏幕模块，并且也有配置好的基于 Arduino 框架的 LVGL 代码</p><h2 id="V3-0版本"><a href="#V3-0版本" class="headerlink" title="V3.0版本"></a>V3.0版本</h2><p><img src="/2023/06/01/cx-lvgl-0/IMG_20230601_225105.jpg" alt="IMG_20230601_225105"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;万年历硬件部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;路途坎坷😭😭😭😭😭😭😭😭😭😭😭�</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ESP32 LVGL（4）</title>
    <link href="http://example.com/2023/05/31/cx-lvgl-4/"/>
    <id>http://example.com/2023/05/31/cx-lvgl-4/</id>
    <published>2023-05-31T07:49:07.109Z</published>
    <updated>2023-06-03T04:37:12.397Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><blockquote><ol><li>恩智浦 Gui Guider + Platformio + ESP32S3 移植测试</li><li>以及 LVGL 优化</li></ol></blockquote><h2 id="UI-移植"><a href="#UI-移植" class="headerlink" title="UI 移植"></a>UI 移植</h2><h3 id="1-设计-UI-并导出代码"><a href="#1-设计-UI-并导出代码" class="headerlink" title="1.设计 UI 并导出代码"></a>1.设计 UI 并导出代码</h3><p><img src="/2023/05/31/cx-lvgl-4/image-20230531155148205.png" alt="image-20230531155148205"></p><p><img src="/2023/05/31/cx-lvgl-4/image-20230531155421144.png" alt="image-20230531155421144"></p><p><img src="/2023/05/31/cx-lvgl-4/image-20230531155508332.png" alt="image-20230531155508332"></p><h3 id="2-移植"><a href="#2-移植" class="headerlink" title="2.移植"></a>2.移植</h3><p>1.在json文件里添加头文件路径，注意 path 和 includePath 都要添加</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;$&#123;workspaceFolder&#125;/**&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;E:/Files/Projects/CXCollege/hardware/Firmware/ESP32-S3-LVGL/ESP32-S3-LVGL-PIO-PROJECT-TFT3.5-ST7796U-CPT/lib/MyUI/custom&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;E:/Files/Projects/CXCollege/hardware/Firmware/ESP32-S3-LVGL/ESP32-S3-LVGL-PIO-PROJECT-TFT3.5-ST7796U-CPT/lib/MyUI/generated&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;E:/Files/Projects/CXCollege/hardware/Firmware/ESP32-S3-LVGL/ESP32-S3-LVGL-PIO-PROJECT-TFT3.5-ST7796U-CPT/lib/MyUI/generated/guider_fonts&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>2.MYUI 文件下添加 library.json </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MYUI&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="string">&quot;myui&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;myui des&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;authors&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bsgbsg7&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;licence&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MIT&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;frameworks&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arduino&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;platforms&quot;</span><span class="punctuation">:</span> <span class="string">&quot;espressif32&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;unflags&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-std=gnu++11&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;flags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">         <span class="string">&quot;-std=c99&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-I custom&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-I generated&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-I generated/guider_customer_fonts&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-I generated/guider_fonts&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-I generated/images&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;srcFilter&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;+&lt;*.c&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;+&lt;custom/*.c&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;+&lt;generated/*.c&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;+&lt;generated/guider_customer_fonts/*.c&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;+&lt;generated/guider_fonts/*.c&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;+&lt;generated/images/*.c&gt;&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>3.将 LV_VER_RES_MAX 替换为 LV_VER_RES，LV_HOR_RES_MAX 替换为 LV_HOR_RES</p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>参考博主<a href="https://space.bilibili.com/8175771">重回桃花源</a>的《<a href="https://www.bilibili.com/read/cv17894963/">LVGL显示优化—基本优化</a>》</p><h3 id="1-修改帧率"><a href="#1-修改帧率" class="headerlink" title="1.修改帧率"></a>1.修改帧率</h3><p>LVGL是有一个帧率刷新周期的宏定义，在lv_conf.h里。LVGL会通过LVGL内部的tick，定时去刷屏幕，也就是说该宏定义限定了LVGL刷屏帧率的上限，默认满帧33帧。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> LV_DISP_DEF_REFR_PERIOD 30 /[ms]/</span></span><br></pre></td></tr></table></figure><p>改成10ms刷新一次，满帧100帧。顺手再把输入设备读取周期也改成10ms。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Default display refresh period. LVG will redraw changed areas with this period time*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LV_DISP_DEF_REFR_PERIOD 10      <span class="comment">/*[ms]*/</span></span></span><br><span class="line"><span class="comment">/*Input device read period in milliseconds*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LV_INDEV_DEF_READ_PERIOD 10     <span class="comment">/*[ms]*/</span></span></span><br></pre></td></tr></table></figure><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="/2023/05/31/cx-lvgl-4/image-20230603123110696.png" alt="image-20230603123110696"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;恩智浦 Gui Guider + Platformio + ESP32S3 移植测试&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ESP32 LVGL（3）</title>
    <link href="http://example.com/2023/05/31/cx-lvgl-3/"/>
    <id>http://example.com/2023/05/31/cx-lvgl-3/</id>
    <published>2023-05-30T16:19:13.579Z</published>
    <updated>2023-06-01T14:43:54.701Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><blockquote><ol><li>mq2 模块测试</li><li>esp32s3 获取 mq2 模块数据，并且使用 LVGL显示。</li></ol></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>使用最基础的 digitalRead() 以及 analogRead() 就可以读取数据。</p><h3 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> smokePin 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> analogPin 12</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_lv_mq2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">lv_obj_t</span> *digitalNum; <span class="comment">// 时间标签</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *analogNum;    <span class="comment">// 日期标签</span></span><br><span class="line">&#125; <span class="type">lv_mq2_t</span>;</span><br></pre></td></tr></table></figure><h3 id="UI设计"><a href="#UI设计" class="headerlink" title="UI设计"></a>UI设计</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">demo12</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> date_time_clock_style;                         <span class="comment">// 最外层对象的样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;date_time_clock_style);                          <span class="comment">// 重置样式</span></span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;date_time_clock_style);                           <span class="comment">// 初始化样式</span></span><br><span class="line">    <span class="built_in">lv_style_set_radius</span>(&amp;date_time_clock_style, <span class="number">5</span>);                  <span class="comment">// 设置样式圆角</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;date_time_clock_style, LV_OPA_20);          <span class="comment">// 设置样式背景透明度</span></span><br><span class="line">    <span class="built_in">lv_style_set_border_width</span>(&amp;date_time_clock_style, <span class="number">0</span>);            <span class="comment">// 设置样式边框宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;date_time_clock_style, <span class="built_in">lv_color_white</span>()); <span class="comment">// 设置样式背景颜色，白色</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_left</span>(&amp;date_time_clock_style, <span class="number">1</span>);                <span class="comment">// 设置样式左边padding填充宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_right</span>(&amp;date_time_clock_style, <span class="number">1</span>);               <span class="comment">// 设置样式右边padding填充宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_top</span>(&amp;date_time_clock_style, <span class="number">0</span>);                 <span class="comment">// 设置样式顶部padding填充宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_bottom</span>(&amp;date_time_clock_style, <span class="number">0</span>);              <span class="comment">// 设置样式底部padding填充宽度</span></span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> time_style; <span class="comment">// 时间对象样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;time_style);</span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;time_style);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;time_style, LV_OPA_COVER);</span><br><span class="line">    <span class="built_in">lv_style_set_border_width</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_radius</span>(&amp;time_style, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;time_style, <span class="built_in">lv_palette_main</span>(LV_PALETTE_BLUE));</span><br><span class="line">    <span class="built_in">lv_style_set_pad_left</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_right</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_top</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_bottom</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> time_label_style;                                <span class="comment">// 时间标签样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;time_label_style);                                 <span class="comment">// 重置样式</span></span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;time_label_style);                                  <span class="comment">// 初始化样式</span></span><br><span class="line">    <span class="built_in">lv_style_set_text_color</span>(&amp;time_label_style, <span class="built_in">lv_color_white</span>());      <span class="comment">// 设置标签样式文本颜色</span></span><br><span class="line">    <span class="built_in">lv_style_set_text_font</span>(&amp;time_label_style, &amp;lv_font_montserrat_32); <span class="comment">// 设置字体风格</span></span><br><span class="line">    <span class="built_in">lv_style_set_text_opa</span>(&amp;time_label_style, LV_OPA_COVER);            <span class="comment">// 设置字体透明度</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;time_label_style, LV_OPA_0);                  <span class="comment">// 设置样式背景透明度</span></span><br><span class="line"></span><br><span class="line">    <span class="type">lv_obj_t</span> *src = <span class="built_in">lv_obj_create</span>(<span class="built_in">lv_scr_act</span>()); <span class="comment">// 基于屏幕创建时间日期对象</span></span><br><span class="line">    <span class="built_in">lv_obj_set_size</span>(src, <span class="number">320</span>, <span class="number">150</span>);</span><br><span class="line">    <span class="built_in">lv_obj_center</span>(src);</span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(src, &amp;time_style, LV_STATE_DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_obj_t</span> *lv_mq2_label = <span class="built_in">lv_label_create</span>(src);                         </span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(lv_mq2_label, &amp;time_label_style, LV_STATE_DEFAULT); <span class="comment">// 给date_obj对象添加样式</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">lv_obj_align_to</span>(lv_mq2_label, <span class="built_in">lv_obj_get_parent</span>(lv_mq2_label), LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">lv_timer_t</span> *task_timer = <span class="built_in">lv_timer_create</span>(demo12_my_timer, <span class="number">2000</span>, (<span class="type">void</span> *)&amp;lv_mq2_label);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定时更新"><a href="#定时更新" class="headerlink" title="定时更新"></a>定时更新</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">demo12_my_timer</span><span class="params">(<span class="type">lv_timer_t</span> *timer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> mq2Value = <span class="built_in">digitalRead</span>(smokePin);</span><br><span class="line">    <span class="type">int</span> anaValue = <span class="built_in">analogRead</span>(analogPin);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;D0&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(mq2Value);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;ANA&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(anaValue);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (timer != <span class="literal">NULL</span> &amp;&amp; timer-&gt;user_data != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">lv_obj_t</span> *mq2_label = (<span class="type">lv_obj_t</span> *)(timer-&gt;user_data);</span><br><span class="line">        <span class="keyword">if</span> (mq2_label != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">lv_label_set_text_fmt</span>(mq2_label, <span class="string">&quot;digitalRead: %01d&quot;</span>, mq2Value);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(mq2_label, <span class="built_in">lv_obj_get_parent</span>(mq2_label), LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修bug"><a href="#修bug" class="headerlink" title="修bug"></a>修bug</h2><h3 id="1-主控不断重启"><a href="#1-主控不断重启" class="headerlink" title="1.主控不断重启"></a>1.主控不断重启</h3><p>设计 UI 时发现屏幕闪烁，查看串口输出发现是触发看门狗不断重启。</p><p>此种错误基本上都是<strong>指针使用错误</strong>。</p><p>以下为错误示例❌❌❌，lv_mq2_label 已经是一个 obj 基本对象的<strong>指针</strong>，传递时不需要再取地址。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">lv_obj_t</span> *lv_mq2_label = <span class="built_in">lv_label_create</span>(src);</span><br><span class="line"><span class="type">lv_timer_t</span> *task_timer = <span class="built_in">lv_timer_create</span>(demo12_my_timer, <span class="number">2000</span>, &amp;lv_mq2_label);</span><br></pre></td></tr></table></figure><p>去掉取地址即可正确运行。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">lv_obj_t</span> *lv_mq2_label = <span class="built_in">lv_label_create</span>(src);</span><br><span class="line"><span class="type">lv_timer_t</span> *task_timer = <span class="built_in">lv_timer_create</span>(demo12_my_timer, <span class="number">2000</span>, lv_mq2_label);</span><br></pre></td></tr></table></figure><p><strong>对比</strong></p><p>此处取地址是因为 lv_dht11 在定义的时候就是一个<strong>结构体</strong>，为了方便定时器修改数据，避免占用过多内存，因此传递用户数据时应该<strong>传递指针</strong> (void *)&amp;lv_dht11 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">lv_dht11_t</span> lv_dht11 = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">lv_timer_t</span> *task_timer = <span class="built_in">lv_timer_create</span>(demo11_my_timer, <span class="number">2000</span>, (<span class="type">void</span> *)&amp;lv_dht11);</span><br></pre></td></tr></table></figure><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="/2023/05/31/cx-lvgl-3/image-20230531005443438.png" alt="image-20230531005443438"></p><p><img src="/2023/05/31/cx-lvgl-3/image-20230531005453640.png" alt="image-20230531005453640"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;mq2 模块测试&lt;/li&gt;
&lt;li&gt;esp32s3 获取 mq2 模块数据，并且使用 LVGL显示。&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ESP32 LVGL（2）</title>
    <link href="http://example.com/2023/05/30/cx-lvgl-2/"/>
    <id>http://example.com/2023/05/30/cx-lvgl-2/</id>
    <published>2023-05-30T12:31:58.356Z</published>
    <updated>2023-06-01T14:44:00.913Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><blockquote><ol><li>dht11 模块测试</li><li>esp32s3 获取 dht11模块数据，并且使用 LVGL显示。</li></ol></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>获取数据参考了<a href="https://blog.csdn.net/m0_52152690">莫跖</a>博主的文章《<a href="https://blog.csdn.net/m0_52152690/article/details/126125455">ESP32+dht11&#x2F;sht30测温湿度(arduino编程)</a>》。</p><p>改bug参考了<a href="https://blog.csdn.net/weixin_44684950">田园牧师</a>博主的文章《<a href="https://blog.csdn.net/weixin_44684950/article/details/124426341">LVGL lv_label_set_text_fmt 显示只有f</a>》。</p><p>总体来说思路简单清晰，但是改 bug 尝试了很久😭😭😭。</p><p>UI界面后续仍然需要优化。</p><h3 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DHT.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DHT_U.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHTPIN 11</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHTTYPE DHT11</span></span><br><span class="line"><span class="function">DHT <span class="title">dht</span><span class="params">(DHTPIN, DHTTYPE)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_lv_dht11</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">lv_obj_t</span> *temperature_label; <span class="comment">// 时间标签</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *humidity_label;    <span class="comment">// 日期标签</span></span><br><span class="line">&#125; <span class="type">lv_dht11_t</span>;</span><br></pre></td></tr></table></figure><h3 id="UI设计"><a href="#UI设计" class="headerlink" title="UI设计"></a>UI设计</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">demo11</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dht.<span class="built_in">begin</span>();</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> date_time_clock_style;                         <span class="comment">// 最外层对象的样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;date_time_clock_style);                          <span class="comment">// 重置样式</span></span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;date_time_clock_style);                           <span class="comment">// 初始化样式</span></span><br><span class="line">    <span class="built_in">lv_style_set_radius</span>(&amp;date_time_clock_style, <span class="number">5</span>);                  <span class="comment">// 设置样式圆角</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;date_time_clock_style, LV_OPA_20);          <span class="comment">// 设置样式背景透明度</span></span><br><span class="line">    <span class="built_in">lv_style_set_border_width</span>(&amp;date_time_clock_style, <span class="number">0</span>);            <span class="comment">// 设置样式边框宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;date_time_clock_style, <span class="built_in">lv_color_white</span>()); <span class="comment">// 设置样式背景颜色，白色</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_left</span>(&amp;date_time_clock_style, <span class="number">1</span>);                <span class="comment">// 设置样式左边padding填充宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_right</span>(&amp;date_time_clock_style, <span class="number">1</span>);               <span class="comment">// 设置样式右边padding填充宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_top</span>(&amp;date_time_clock_style, <span class="number">0</span>);                 <span class="comment">// 设置样式顶部padding填充宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_bottom</span>(&amp;date_time_clock_style, <span class="number">0</span>);              <span class="comment">// 设置样式底部padding填充宽度</span></span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> time_style; <span class="comment">// 时间对象样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;time_style);</span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;time_style);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;time_style, LV_OPA_COVER);</span><br><span class="line">    <span class="built_in">lv_style_set_border_width</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_radius</span>(&amp;time_style, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;time_style, <span class="built_in">lv_palette_main</span>(LV_PALETTE_BLUE));</span><br><span class="line">    <span class="built_in">lv_style_set_pad_left</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_right</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_top</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_bottom</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> time_label_style;                                <span class="comment">// 时间标签样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;time_label_style);                                 <span class="comment">// 重置样式</span></span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;time_label_style);                                  <span class="comment">// 初始化样式</span></span><br><span class="line">    <span class="built_in">lv_style_set_text_color</span>(&amp;time_label_style, <span class="built_in">lv_color_white</span>());      <span class="comment">// 设置标签样式文本颜色</span></span><br><span class="line">    <span class="built_in">lv_style_set_text_font</span>(&amp;time_label_style, &amp;lv_font_montserrat_32); <span class="comment">// 设置字体风格</span></span><br><span class="line">    <span class="built_in">lv_style_set_text_opa</span>(&amp;time_label_style, LV_OPA_COVER);            <span class="comment">// 设置字体透明度</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;time_label_style, LV_OPA_0);                  <span class="comment">// 设置样式背景透明度</span></span><br><span class="line"></span><br><span class="line">    <span class="type">lv_obj_t</span> *dht11_obj = <span class="built_in">lv_obj_create</span>(<span class="built_in">lv_scr_act</span>()); <span class="comment">// 基于屏幕创建时间日期对象</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">lv_obj_set_size</span>(dht11_obj, <span class="number">320</span>, <span class="number">150</span>);</span><br><span class="line">    <span class="built_in">lv_obj_center</span>(dht11_obj);</span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(dht11_obj, &amp;time_style, LV_STATE_DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_dht11_t</span> lv_dht11 = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    lv_dht11.temperature_label = <span class="built_in">lv_label_create</span>(dht11_obj);                           <span class="comment">// 基于time_obj对象创建时间显示标签对象 lv_clock.time_label</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(lv_dht11.temperature_label, &amp;time_label_style, LV_STATE_DEFAULT); <span class="comment">// 给对象 lv_clock.time_label添加样式</span></span><br><span class="line"></span><br><span class="line">    lv_dht11.humidity_label = <span class="built_in">lv_label_create</span>(dht11_obj);                            </span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(lv_dht11.humidity_label, &amp;time_label_style, LV_STATE_DEFAULT); <span class="comment">// 给date_obj对象添加样式</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">lv_obj_align_to</span>(lv_dht11.temperature_label, <span class="built_in">lv_obj_get_parent</span>(lv_dht11.temperature_label), LV_ALIGN_TOP_MID, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_obj_align_to</span>(lv_dht11.humidity_label, <span class="built_in">lv_obj_get_parent</span>(lv_dht11.humidity_label), LV_ALIGN_BOTTOM_MID, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">lv_timer_t</span> *task_timer = <span class="built_in">lv_timer_create</span>(demo11_my_timer, <span class="number">2000</span>, (<span class="type">void</span> *)&amp;lv_dht11);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定时更新"><a href="#定时更新" class="headerlink" title="定时更新"></a>定时更新</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">demo11_my_timer</span><span class="params">(<span class="type">lv_timer_t</span> *timer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> humidity = dht.<span class="built_in">readHumidity</span>();</span><br><span class="line">    <span class="type">float</span> temperature = dht.<span class="built_in">readTemperature</span>();</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;humidity&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(humidity);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;temperature&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(temperature);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (timer != <span class="literal">NULL</span> &amp;&amp; timer-&gt;user_data != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">lv_dht11_t</span> *dht11 = (<span class="type">lv_dht11_t</span> *)(timer-&gt;user_data);</span><br><span class="line">        <span class="keyword">if</span> (dht11-&gt;temperature_label != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">lv_label_set_text_fmt</span>(dht11-&gt;temperature_label, <span class="string">&quot;%.2f %RH&quot;</span>, humidity);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(dht11-&gt;temperature_label, <span class="built_in">lv_obj_get_parent</span>(dht11-&gt;temperature_label), LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dht11-&gt;humidity_label != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">lv_label_set_text_fmt</span>(dht11-&gt;humidity_label, <span class="string">&quot;%.2f °C&quot;</span>, temperature);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(dht11-&gt;humidity_label, <span class="built_in">lv_obj_get_parent</span>(dht11-&gt;humidity_label), LV_ALIGN_TOP_MID, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修bug"><a href="#修bug" class="headerlink" title="修bug"></a>修bug</h2><h3 id="1-主控不断重启"><a href="#1-主控不断重启" class="headerlink" title="1.主控不断重启"></a>1.主控不断重启</h3><p>设计 UI 时发现屏幕闪烁，查看串口输出发现是触发看门狗不断重启。发现是错用了 lv_obj_create() 。此处是 label 标签，修改为 lv_label_create() 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lv_dht11.humidity_label = lv_obj_create(dht11_obj); </span></span><br><span class="line">lv_dht11.humidity_label = <span class="built_in">lv_label_create</span>(dht11_obj); </span><br></pre></td></tr></table></figure><p><img src="/2023/05/30/cx-lvgl-2/image-20230530213215032.png" alt="image-20230530213215032"></p><h3 id="2-LVGL-lv-label-set-text-fmt-显示只有f"><a href="#2-LVGL-lv-label-set-text-fmt-显示只有f" class="headerlink" title="2.LVGL lv_label_set_text_fmt 显示只有f"></a>2.LVGL lv_label_set_text_fmt 显示只有f</h3><p>用 LVGL 显示带浮点数的句子，结果出现只显示 f 但是没有数字的现象。需要在 lv_conf.h 中启用 LV_SPRINTF_CUSTOM。</p><p><img src="/2023/05/30/cx-lvgl-2/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA55Sw5Zut54mn5biI,size_20,color_FFFFFF,t_70,g_se,x_16.png" alt="img"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> LV_SPRINTF_CUSTOM 1</span></span><br></pre></td></tr></table></figure><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="/2023/05/30/cx-lvgl-2/image-20230530213424374.png" alt="image-20230530213424374"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;dht11 模块测试&lt;/li&gt;
&lt;li&gt;esp32s3 获取 dht11模块数据，并且使用 LVGL显</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ESP32 LVGL（1）</title>
    <link href="http://example.com/2023/05/30/cx-lvgl-1/"/>
    <id>http://example.com/2023/05/30/cx-lvgl-1/</id>
    <published>2023-05-30T04:47:38.704Z</published>
    <updated>2023-06-01T14:43:42.693Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><blockquote><ol><li>pcf8563模块测试。</li><li>esp32s3联网授时，自动校准pcf8563时钟模块，并使用LVGL显示。</li></ol></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>参考了<a href="https://blog.csdn.net/qq981378640">Bob_1993</a>博主的文章<a href="https://blog.csdn.net/qq981378640/article/details/119950998">LVGL8制作简易时钟</a>。</p><p>总体来说比较顺利，除了遇到几个小bug之外🤣🤣🤣。</p><h3 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;I2C_BM8563.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// RTC BM8563 I2C port</span></span><br><span class="line"><span class="comment">// I2C pin definition for M5Stick &amp; M5Stick Plus &amp; M5Stack Core2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BM8563_I2C_SDA 47</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BM8563_I2C_SCL 48</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_lv_clock</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">lv_obj_t</span> *time_label;    <span class="comment">// 时间标签</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *date_label;    <span class="comment">// 日期标签</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *weekday_label; <span class="comment">// 星期标签</span></span><br><span class="line">&#125; <span class="type">lv_clock_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">I2C_BM8563 <span class="title">rtc</span><span class="params">(I2C_BM8563_DEFAULT_ADDRESS, Wire1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *ntpServer = <span class="string">&quot;ntp.aliyun.com&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="UI设计"><a href="#UI设计" class="headerlink" title="UI设计"></a>UI设计</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">demo10</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    WiFi.<span class="built_in">begin</span>(<span class="string">&quot;vivoS12&quot;</span>, <span class="string">&quot;7bsgbsg7&quot;</span>); <span class="comment">// Or, Connect to the specified access point</span></span><br><span class="line"></span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;Connecting to Wi-Fi &quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (WiFi.<span class="built_in">status</span>() != WL_CONNECTED)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">        Serial.<span class="built_in">print</span>(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot; CONNECTED&quot;</span>);</span><br><span class="line"></span><br><span class="line">    I2C_BM8563_DateTypeDef dateStruct;</span><br><span class="line">    I2C_BM8563_TimeTypeDef timeStruct;</span><br><span class="line"></span><br><span class="line">    Wire1.<span class="built_in">begin</span>(BM8563_I2C_SDA, BM8563_I2C_SCL);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Init RTC</span></span><br><span class="line">    rtc.<span class="built_in">begin</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">configTime</span>(<span class="number">8</span> * <span class="number">3600</span>, <span class="number">0</span>, ntpServer);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Init I2C</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get local time</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">tm</span> timeInfo;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">getLocalTime</span>(&amp;timeInfo))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Set RTC time</span></span><br><span class="line">        I2C_BM8563_TimeTypeDef timeStruct;</span><br><span class="line">        timeStruct.hours = timeInfo.tm_hour;</span><br><span class="line">        timeStruct.minutes = timeInfo.tm_min;</span><br><span class="line">        timeStruct.seconds = timeInfo.tm_sec;</span><br><span class="line">        rtc.<span class="built_in">setTime</span>(&amp;timeStruct);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set RTC Date</span></span><br><span class="line">        I2C_BM8563_DateTypeDef dateStruct;</span><br><span class="line">        dateStruct.weekDay = timeInfo.tm_wday;</span><br><span class="line">        dateStruct.month = timeInfo.tm_mon + <span class="number">1</span>;</span><br><span class="line">        dateStruct.date = timeInfo.tm_mday;</span><br><span class="line">        dateStruct.year = timeInfo.tm_year + <span class="number">1900</span>;</span><br><span class="line">        rtc.<span class="built_in">setDate</span>(&amp;dateStruct);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> date_time_clock_style;                         <span class="comment">// 最外层对象的样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;date_time_clock_style);                          <span class="comment">// 重置样式</span></span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;date_time_clock_style);                           <span class="comment">// 初始化样式</span></span><br><span class="line">    <span class="built_in">lv_style_set_radius</span>(&amp;date_time_clock_style, <span class="number">5</span>);                  <span class="comment">// 设置样式圆角</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;date_time_clock_style, LV_OPA_20);          <span class="comment">// 设置样式背景透明度</span></span><br><span class="line">    <span class="built_in">lv_style_set_border_width</span>(&amp;date_time_clock_style, <span class="number">0</span>);            <span class="comment">// 设置样式边框宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;date_time_clock_style, <span class="built_in">lv_color_white</span>()); <span class="comment">// 设置样式背景颜色，白色</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_left</span>(&amp;date_time_clock_style, <span class="number">1</span>);                <span class="comment">// 设置样式左边padding填充宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_right</span>(&amp;date_time_clock_style, <span class="number">1</span>);               <span class="comment">// 设置样式右边padding填充宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_top</span>(&amp;date_time_clock_style, <span class="number">0</span>);                 <span class="comment">// 设置样式顶部padding填充宽度</span></span><br><span class="line">    <span class="built_in">lv_style_set_pad_bottom</span>(&amp;date_time_clock_style, <span class="number">0</span>);              <span class="comment">// 设置样式底部padding填充宽度</span></span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> time_style; <span class="comment">// 时间对象样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;time_style);</span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;time_style);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;time_style, LV_OPA_COVER);</span><br><span class="line">    <span class="built_in">lv_style_set_border_width</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_radius</span>(&amp;time_style, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;time_style, <span class="built_in">lv_palette_main</span>(LV_PALETTE_BLUE));</span><br><span class="line">    <span class="built_in">lv_style_set_pad_left</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_right</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_top</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_bottom</span>(&amp;time_style, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> date_style; <span class="comment">// 日期对象样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;date_style);</span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;date_style);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;date_style, LV_OPA_COVER);</span><br><span class="line">    <span class="built_in">lv_style_set_border_width</span>(&amp;date_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_radius</span>(&amp;date_style, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;date_style, <span class="built_in">lv_palette_main</span>(LV_PALETTE_BLUE));</span><br><span class="line">    <span class="built_in">lv_style_set_pad_left</span>(&amp;date_style, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_right</span>(&amp;date_style, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Time font */</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> time_label_style;                                <span class="comment">// 时间标签样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;time_label_style);                                 <span class="comment">// 重置样式</span></span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;time_label_style);                                  <span class="comment">// 初始化样式</span></span><br><span class="line">    <span class="built_in">lv_style_set_text_color</span>(&amp;time_label_style, <span class="built_in">lv_color_white</span>());      <span class="comment">// 设置标签样式文本颜色</span></span><br><span class="line">    <span class="built_in">lv_style_set_text_font</span>(&amp;time_label_style, &amp;lv_font_montserrat_32); <span class="comment">// 设置字体风格</span></span><br><span class="line">    <span class="built_in">lv_style_set_text_opa</span>(&amp;time_label_style, LV_OPA_COVER);            <span class="comment">// 设置字体透明度</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;time_label_style, LV_OPA_0);                  <span class="comment">// 设置样式背景透明度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Date font */</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> date_label_style; <span class="comment">// 日期标签样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;date_label_style);</span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;date_label_style);</span><br><span class="line">    <span class="built_in">lv_style_set_text_opa</span>(&amp;date_label_style, LV_OPA_COVER);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;date_label_style, LV_OPA_0);</span><br><span class="line">    <span class="built_in">lv_style_set_text_color</span>(&amp;date_label_style, <span class="built_in">lv_color_white</span>());</span><br><span class="line">    <span class="built_in">lv_style_set_text_font</span>(&amp;date_label_style, &amp;lv_font_montserrat_16);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Week font */</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> week_lable_style; <span class="comment">// 日期标签样式</span></span><br><span class="line">    <span class="built_in">lv_style_reset</span>(&amp;week_lable_style);</span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;week_lable_style);</span><br><span class="line">    <span class="built_in">lv_style_set_text_opa</span>(&amp;week_lable_style, LV_OPA_COVER);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;week_lable_style, LV_OPA_0);</span><br><span class="line">    <span class="built_in">lv_style_set_text_color</span>(&amp;week_lable_style, <span class="built_in">lv_color_white</span>());</span><br><span class="line">    <span class="built_in">lv_style_set_text_font</span>(&amp;week_lable_style, &amp;lv_font_montserrat_16);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Time &amp; Date */</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *time_date_obj = <span class="built_in">lv_obj_create</span>(<span class="built_in">lv_scr_act</span>()); <span class="comment">// 基于屏幕创建时间日期对象</span></span><br><span class="line">    <span class="keyword">if</span> (time_date_obj == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[%s:%d] time_date_obj create failed\n&quot;</span>, __FUNCTION__, __LINE__);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">lv_obj_set_size</span>(time_date_obj, <span class="number">320</span>, <span class="number">100</span>);                                  <span class="comment">// 设置对象大小</span></span><br><span class="line">    <span class="built_in">lv_obj_center</span>(time_date_obj);                                              <span class="comment">// 对象居屏幕中间显示</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(time_date_obj, &amp;date_time_clock_style, LV_STATE_DEFAULT); <span class="comment">// 给time_date_obj对象添加样式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Time display*/</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *time_obj = <span class="built_in">lv_obj_create</span>(time_date_obj); <span class="comment">// 基于time_date_obj对象创建时间对象</span></span><br><span class="line">    <span class="keyword">if</span> (time_obj == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[%s:%d] time_obj create failed\n&quot;</span>, __FUNCTION__, __LINE__);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">lv_obj_set_size</span>(time_obj, <span class="number">158</span>, <span class="number">100</span>);                               <span class="comment">// 设置对象大小</span></span><br><span class="line">    <span class="built_in">lv_obj_align_to</span>(time_obj, time_date_obj, LV_ALIGN_LEFT_MID, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">// 设置time_obj对象基于time_date_obj对象左边中间对齐</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(time_obj, &amp;time_style, LV_STATE_DEFAULT);         <span class="comment">// 给time_obj对象添加样式</span></span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_clock_t</span> lv_clock = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    lv_clock.time_label = <span class="built_in">lv_label_create</span>(time_obj); <span class="comment">// 基于time_obj对象创建时间显示标签对象 lv_clock.time_label</span></span><br><span class="line">    <span class="keyword">if</span> (lv_clock.time_label == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[%s:%d] time_label create failed\n&quot;</span>, __FUNCTION__, __LINE__);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(lv_clock.time_label, &amp;time_label_style, LV_STATE_DEFAULT); <span class="comment">// 给对象 lv_clock.time_label添加样式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Date display*/</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *date_obj = <span class="built_in">lv_obj_create</span>(time_date_obj); <span class="comment">// 基于time_date_obj对象创建date_obj对象</span></span><br><span class="line">    <span class="keyword">if</span> (date_obj == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[%s:%d] date_obj create failed\n&quot;</span>, __FUNCTION__, __LINE__);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">lv_obj_set_size</span>(date_obj, <span class="number">158</span>, <span class="number">100</span>);                                <span class="comment">// 设置对象大小</span></span><br><span class="line">    <span class="built_in">lv_obj_align_to</span>(date_obj, time_date_obj, LV_ALIGN_RIGHT_MID, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">// 设置date_obj对象基于time_date_obj对象右边中部对齐</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(date_obj, &amp;date_style, LV_STATE_DEFAULT);          <span class="comment">// 给date_obj对象添加样式</span></span><br><span class="line"></span><br><span class="line">    lv_clock.date_label = <span class="built_in">lv_label_create</span>(date_obj); <span class="comment">// 基于date_obj对象创建lv_clock.date_label日期显示对象</span></span><br><span class="line">    <span class="keyword">if</span> (lv_clock.date_label == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[%s:%d] date_label create failed\n&quot;</span>, __FUNCTION__, __LINE__);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(lv_clock.date_label, &amp;date_label_style, LV_STATE_DEFAULT); <span class="comment">// 给lv_clock.date_label对象添加样式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Week display*/</span></span><br><span class="line">    lv_clock.weekday_label = <span class="built_in">lv_label_create</span>(date_obj); <span class="comment">// 基于date_obj对象创建星期显示lv_clock.weekday_label对象</span></span><br><span class="line">    <span class="keyword">if</span> (lv_clock.weekday_label == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[%s:%d] weekday_label create failed\n&quot;</span>, __FUNCTION__, __LINE__);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(lv_clock.weekday_label, &amp;week_lable_style, LV_STATE_DEFAULT); <span class="comment">// 给对象lv_clock.weekday_label添加样式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置时间标签lv_clock.time_label对象基于父对象居中对齐</span></span><br><span class="line">    <span class="built_in">lv_obj_align_to</span>(lv_clock.time_label, <span class="built_in">lv_obj_get_parent</span>(lv_clock.time_label), LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 设置时间标签lv_clock.date_label对象基于父对象顶部中间对齐</span></span><br><span class="line">    <span class="built_in">lv_obj_align_to</span>(lv_clock.date_label, <span class="built_in">lv_obj_get_parent</span>(lv_clock.date_label), LV_ALIGN_TOP_MID, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 设置时间标签lv_clock.weekday_label对象基于父对象底部中间对齐</span></span><br><span class="line">    <span class="built_in">lv_obj_align_to</span>(lv_clock.weekday_label, <span class="built_in">lv_obj_get_parent</span>(lv_clock.weekday_label), LV_ALIGN_BOTTOM_MID, <span class="number">-2</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">lv_timer_t</span> *task_timer = <span class="built_in">lv_timer_create</span>(demo10_my_timer, <span class="number">200</span>, (<span class="type">void</span> *)&amp;lv_clock);</span><br><span class="line">    <span class="keyword">if</span> (task_timer == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[%s:%d] lv_timer_create failed\n&quot;</span>, __FUNCTION__, __LINE__);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定时更新"><a href="#定时更新" class="headerlink" title="定时更新"></a>定时更新</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">demo10_my_timer</span><span class="params">(<span class="type">lv_timer_t</span> *timer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    I2C_BM8563_TimeTypeDef timeStruct;</span><br><span class="line">    I2C_BM8563_DateTypeDef dateStruct;</span><br><span class="line">    rtc.<span class="built_in">getTime</span>(&amp;timeStruct);</span><br><span class="line">    rtc.<span class="built_in">getDate</span>(&amp;dateStruct);</span><br><span class="line"> </span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">char</span> *week_day[<span class="number">7</span>] = &#123;<span class="string">&quot;Sunday&quot;</span>, <span class="string">&quot;Monday&quot;</span>, <span class="string">&quot;Tuesday&quot;</span>, <span class="string">&quot;Wednesday&quot;</span>, <span class="string">&quot;Thursday&quot;</span>, <span class="string">&quot;Friday&quot;</span>, <span class="string">&quot;Saturday&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> year = dateStruct.year;</span><br><span class="line">    <span class="type">int</span> month = dateStruct.month;</span><br><span class="line">    <span class="type">int</span> day = dateStruct.date;</span><br><span class="line">    <span class="type">int</span> weekday = dateStruct.weekDay;</span><br><span class="line">    <span class="type">int</span> hour = timeStruct.hours;</span><br><span class="line">    <span class="type">int</span> minutes = timeStruct.minutes;</span><br><span class="line">    <span class="type">int</span> second = timeStruct.seconds;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (timer != <span class="literal">NULL</span> &amp;&amp; timer-&gt;user_data != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">lv_clock_t</span> *clock = (<span class="type">lv_clock_t</span> *)(timer-&gt;user_data);</span><br><span class="line">        <span class="keyword">if</span> (clock-&gt;time_label != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">lv_label_set_text_fmt</span>(clock-&gt;time_label, <span class="string">&quot;%02d:%02d:%02d&quot;</span>, hour, minutes, second);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(clock-&gt;time_label, <span class="built_in">lv_obj_get_parent</span>(clock-&gt;time_label), LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (clock-&gt;date_label != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">lv_label_set_text_fmt</span>(clock-&gt;date_label, <span class="string">&quot;%d-%02d-%02d&quot;</span>, year, month, day);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(clock-&gt;date_label, <span class="built_in">lv_obj_get_parent</span>(clock-&gt;date_label), LV_ALIGN_TOP_MID, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (clock-&gt;weekday_label != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">lv_label_set_text_fmt</span>(clock-&gt;weekday_label, <span class="string">&quot;%s&quot;</span>, week_day[weekday]);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(clock-&gt;weekday_label, <span class="built_in">lv_obj_get_parent</span>(clock-&gt;weekday_label), LV_ALIGN_BOTTOM_MID, <span class="number">-2</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修bug"><a href="#修bug" class="headerlink" title="修bug"></a>修bug</h2><h3 id="1-字体"><a href="#1-字体" class="headerlink" title="1.字体"></a>1.字体</h3><p>LV_FONT_MONTSERRAT_32 等字体无法使用，需要在 lv_conf.h 中打开开关</p><p><img src="/2023/05/30/cx-lvgl-1/image-20230530173528736.png" alt="image-20230530173528736"></p><h3 id="2-回调函数的传递参数"><a href="#2-回调函数的传递参数" class="headerlink" title="2.回调函数的传递参数"></a>2.回调函数的传递参数</h3><p>用 int 等类型定义的结构体在定时器中无法取出成员，改为使用 lv_obj_t 结构体传递所有需要修改的标签</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_lv_clock</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">lv_obj_t</span> *time_label;    <span class="comment">// 时间标签</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *date_label;    <span class="comment">// 日期标签</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *weekday_label; <span class="comment">// 星期标签</span></span><br><span class="line">&#125; <span class="type">lv_clock_t</span>;</span><br></pre></td></tr></table></figure><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="/2023/05/30/cx-lvgl-1/image-20230530130041919.png" alt="image-20230530130041919"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;pcf8563模块测试。&lt;/li&gt;
&lt;li&gt;esp32s3联网授时，自动校准pcf8563时钟模块，并</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Blog 折腾记录</title>
    <link href="http://example.com/2023/05/23/blog-building/"/>
    <id>http://example.com/2023/05/23/blog-building/</id>
    <published>2023-05-23T10:42:12.173Z</published>
    <updated>2023-05-23T12:51:08.916Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Memos叨叨部署"><a href="#Memos叨叨部署" class="headerlink" title="Memos叨叨部署"></a>Memos叨叨部署</h2><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Memos叨叨部署&quot;&gt;&lt;a href=&quot;#Memos叨叨部署&quot; class=&quot;headerlink&quot; title=&quot;Memos叨叨部署&quot;&gt;&lt;/a&gt;Memos叨叨部署&lt;/h2&gt;&lt;h3 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>LVGL笔记（一）</title>
    <link href="http://example.com/2023/05/12/lvgl-learning/"/>
    <id>http://example.com/2023/05/12/lvgl-learning/</id>
    <published>2023-05-12T15:05:20.633Z</published>
    <updated>2023-05-14T16:03:11.768Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LVGL学习笔记"><a href="#LVGL学习笔记" class="headerlink" title="LVGL学习笔记"></a>LVGL学习笔记</h2><h3 id="1-对象"><a href="#1-对象" class="headerlink" title="1.对象"></a>1.对象</h3><h4 id="屏幕"><a href="#屏幕" class="headerlink" title="屏幕"></a>屏幕</h4><blockquote><p>屏幕是没有父类的基础对象</p><p>LVGL的三层屏幕:</p><ol><li><p>lv_scr_act(void);  &#x2F;&#x2F; 活动屏幕  <strong>disp</strong>-&gt;<strong>act_scr</strong></p></li><li><p>lv_layer_top (void);  &#x2F;&#x2F; 顶层  <strong>disp</strong>-&gt;<strong>top_layer</strong></p></li><li><p>lv_layer_sys (void); &#x2F;&#x2F; 系统层  <strong>disp</strong>-&gt;<strong>sys_layer</strong></p></li></ol></blockquote><h4 id="设置相对于父级的位置-Position"><a href="#设置相对于父级的位置-Position" class="headerlink" title="设置相对于父级的位置(Position)"></a>设置相对于父级的位置(Position)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">设置x轴方向的坐标位置：</span><br><span class="line"><span class="built_in">lv_obj_set_x</span>(obj, new_x);</span><br><span class="line">设置y轴方向的坐标位置：</span><br><span class="line"><span class="built_in">lv_obj_set_y</span>(obj, new_y);</span><br><span class="line">同时设置x、y坐标位置：</span><br><span class="line"><span class="built_in">lv_obj_set_pos</span>(obj, new_x, new_y);  <span class="comment">//position</span></span><br></pre></td></tr></table></figure><h4 id="对齐-Alignment"><a href="#对齐-Alignment" class="headerlink" title="对齐(Alignment)"></a>对齐(Alignment)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">参照父对象对齐：</span><br><span class="line"><span class="built_in">lv_obj_set_align</span>(obj, LV_ALIGN_...);</span><br><span class="line">参照父对象对齐后再设置坐标位置：</span><br><span class="line"><span class="built_in">lv_obj_align</span>(obj, LV_ALIGN_..., x, y);</span><br><span class="line">参照另一个对象(无父子关系)对齐后设置坐标位置：</span><br><span class="line"><span class="built_in">lv_obj_align_to</span>(obj_to_align, obj_referece, LV_ALIGN_..., x, y)</span><br><span class="line">让图片下方的文本参照图片对齐：</span><br><span class="line"><span class="built_in">lv_obj_align_to</span>(text, image, LV_ALIGN_OUT_BOTTOM_MID, <span class="number">0</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure><h4 id="对齐类型-LV-ALIGN-…"><a href="#对齐类型-LV-ALIGN-…" class="headerlink" title="对齐类型(LV_ALIGN_…)"></a>对齐类型(LV_ALIGN_…)</h4><p><img src="/lvgl-learning/1.png" alt="1"></p><h4 id="获取位置-Get-position"><a href="#获取位置-Get-position" class="headerlink" title="获取位置(Get position)"></a>获取位置(Get position)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">获取x轴坐标位置：</span><br><span class="line"><span class="built_in">lv_obj_get_x</span>(obj);</span><br><span class="line">获取y轴坐标位置：</span><br><span class="line"><span class="built_in">lv_obj_get_y</span>(obj);</span><br></pre></td></tr></table></figure><h4 id="父子关系"><a href="#父子关系" class="headerlink" title="父子关系"></a>父子关系</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">为对象设置新的父级</span><br><span class="line"><span class="built_in">lv_obj_set_parent</span>(obj, new_parent);</span><br><span class="line">获取当前父级</span><br><span class="line"><span class="built_in">lv_obj_get_parent</span>(obj);</span><br><span class="line">获取父母的特定孩子</span><br><span class="line"><span class="built_in">lv_obj_get_child</span>(parent, idx);</span><br><span class="line">    <span class="number">0</span> 获取创建的第一个子项</span><br><span class="line">    <span class="number">1</span> 获取创建的第二个子项</span><br><span class="line">   <span class="number">-1</span> 获取最后创建的子项</span><br><span class="line">返回对象在其父对象中的索引</span><br><span class="line"><span class="built_in">lv_obj_get_index</span>(obj);</span><br></pre></td></tr></table></figure><h4 id="LVGL对象的盒子模型"><a href="#LVGL对象的盒子模型" class="headerlink" title="LVGL对象的盒子模型"></a>LVGL对象的盒子模型</h4><p><img src="/2023/05/12/lvgl-learning/2.jpg" alt="2"></p><blockquote><p>LVGL 遵循 CSS 的 border-box 模型。 对象的“盒子”由以下部分构成：<br>边界(bounding)：元素的宽度&#x2F;高度围起来的区域(整个盒子)。<br>边框(border)：边框有大小和颜色等属性(相当于盒子的厚度和它的颜色)。<br>填充(padding)：对象两侧与其子对象之间的空间(盒子的填充物)。<br>内容(content)：如果边界框按边框宽度和填充的大小缩小，则显示其大小的内容区域(盒子实际装东西的区域)。<br>轮廓(outline) ：LVGL中没有外边距(margin)的概念(盒子之间的距离)，确认代之的是轮廓(outline)。它是绘制于元素(盒子)周围的一条线，它不占据空间，位于边框边缘的外围，可起到突出元素(盒子)的作用。在浏览器里，当鼠标点击或使用Tab键让一个选项或者一个图片获得焦点的时候，这个元素就会多了一个轮廓框围绕。轮廓(outline) 。<br>LVGL的盒子模型是我们理解对象(部件)的组成，修改对象的样式，实现对对象的布局、处理对象排列等等的关键。</p></blockquote><h4 id="样式总结"><a href="#样式总结" class="headerlink" title="样式总结"></a>样式总结</h4><blockquote><p>Styles 用于设置对象的外观</p><p>样式是 lv_style_t 变量，它可以保存边框宽度、文本颜色等属性</p><p>将样式(变量)分配给对象就可以改变其外观。</p><p>在赋值过程中，可以指定目标部分和目标状态。</p><p>一个样式可以给多个对象使用（正常样式）。</p><p>样式可以级联，也就是可以将多个样式分配给一个对象。</p><p>LVGL 会优先使用我们定义的样式，如果没有就会使用默认值。</p><p>后来添加的样式具有更高的优先级。</p><p>如果对象中未指定某些属性（例如文本颜色），就会从父级继承。</p><p>上面说的是 “正常” 样式，对象还有本地样式，它比 “正常” 样式具有更高的优先级。</p><p>默认有一个样式主题，我们也可以自己定义样式主题，作为默认的样式主题使用。</p></blockquote><h4 id="初始化样式"><a href="#初始化样式" class="headerlink" title="初始化样式"></a>初始化样式</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">lv_example_slider_2</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/*Create a transition*/</span></span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">lv_style_prop_t</span> props[] = &#123;LV_STYLE_BG_COLOR, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_transition_dsc_t</span> transition_dsc;</span><br><span class="line">    <span class="built_in">lv_style_transition_dsc_init</span>(&amp;transition_dsc, props, lv_anim_path_linear, <span class="number">300</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> style_main;           <span class="comment">// 矩形背景部分</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> style_indicator;      <span class="comment">// 指针部分</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> style_knob;           <span class="comment">// 旋钮部分</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> style_pressed_color;  <span class="comment">// 对象某部分被按下时，该部分样式应用的颜色</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 矩形背景部分</span></span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;style_main);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;style_main, LV_OPA_COVER);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;style_main, <span class="built_in">lv_palette_main</span>(LV_PALETTE_PINK));</span><br><span class="line">    <span class="comment">//lv_style_set_outline_width(&amp;style_main, 5);</span></span><br><span class="line">    <span class="comment">//lv_style_set_border_width(&amp;style_main, 2);</span></span><br><span class="line">    <span class="built_in">lv_style_set_radius</span>(&amp;style_main, LV_RADIUS_CIRCLE);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_ver</span>(&amp;style_main, <span class="number">-2</span>); <span class="comment">/*Makes the indicator larger*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指针部分</span></span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;style_indicator);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;style_indicator, LV_OPA_COVER);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;style_indicator, <span class="built_in">lv_palette_main</span>(LV_PALETTE_LIGHT_BLUE));</span><br><span class="line">    <span class="built_in">lv_style_set_radius</span>(&amp;style_indicator, LV_RADIUS_CIRCLE);</span><br><span class="line">    <span class="built_in">lv_style_set_transition</span>(&amp;style_indicator, &amp;transition_dsc);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 旋钮部分</span></span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;style_knob);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;style_knob, LV_OPA_COVER);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;style_knob, <span class="built_in">lv_palette_main</span>(LV_PALETTE_CYAN));</span><br><span class="line">    <span class="built_in">lv_style_set_border_color</span>(&amp;style_knob, <span class="built_in">lv_palette_darken</span>(LV_PALETTE_CYAN, <span class="number">3</span>));</span><br><span class="line">    <span class="built_in">lv_style_set_border_width</span>(&amp;style_knob, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">lv_style_set_radius</span>(&amp;style_knob, LV_RADIUS_CIRCLE);</span><br><span class="line">    <span class="built_in">lv_style_set_pad_all</span>(&amp;style_knob, <span class="number">8</span>); <span class="comment">/*Makes the knob larger*/</span></span><br><span class="line">    <span class="built_in">lv_style_set_transition</span>(&amp;style_knob, &amp;transition_dsc);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对象某部分被按下时，该部分样式应用的颜色</span></span><br><span class="line">    <span class="built_in">lv_style_init</span>(&amp;style_pressed_color);</span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;style_pressed_color, <span class="built_in">lv_palette_darken</span>(LV_PALETTE_BLUE, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Create a slider and add the style*/</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * slider = <span class="built_in">lv_slider_create</span>(<span class="built_in">lv_scr_act</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//lv_obj_remove_style_all(slider);                                                        // 删除对象的所有样式</span></span><br><span class="line">    <span class="comment">//lv_obj_remove_style(obj, &amp;style_obj, selector);                                         // 删除对象特定样式</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(slider, &amp;style_main, LV_PART_MAIN);                                    <span class="comment">// 矩形背景部分</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(slider, &amp;style_indicator, LV_PART_INDICATOR);                          <span class="comment">// 指针部分</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(slider, &amp;style_pressed_color, LV_PART_INDICATOR | LV_STATE_FOCUSED);   <span class="comment">// 当指针部分被按下的时候，指针部分应用该样式</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(slider, &amp;style_knob, LV_PART_KNOB);                                    <span class="comment">// 旋钮部分，像按钮一样可以抓取调整值</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(slider, &amp;style_pressed_color, LV_PART_KNOB | LV_STATE_FOCUSED);        <span class="comment">// 当旋钮部分被按下的时候，旋钮部分应用该样式</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">lv_obj_center</span>(slider);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">lv_100ask_demo_course_2_2_5</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 1</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">        样式存储在lv_style_t变量中。样式变量应该是静态、全局或动态分配的。</span></span><br><span class="line"><span class="comment">        也就是它们不能是函数中的局部变量,因为当函数结束时它们会被销毁。</span></span><br><span class="line"><span class="comment">        样式初始化示例：</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_style_t</span> style_obj;</span><br><span class="line"><span class="built_in">lv_style_init</span>(&amp;style_obj);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">        设置样式属性:</span></span><br><span class="line"><span class="comment">        lv_style_set_&lt;property_name&gt;(&amp;style, &lt;value&gt;);</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_color</span>(&amp;style_obj, <span class="built_in">lv_palette_main</span>(LV_PALETTE_DEEP_ORANGE));      <span class="comment">// 设置背景色</span></span><br><span class="line">    <span class="built_in">lv_style_set_text_color</span>(&amp;style_obj, <span class="built_in">lv_palette_main</span>(LV_PALETTE_DEEP_ORANGE));    <span class="comment">// 设置文字颜色</span></span><br><span class="line">    <span class="built_in">lv_style_set_bg_opa</span>(&amp;style_obj, LV_OPA_COVER);                  <span class="comment">// 设置透明度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建对象</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * obj = <span class="built_in">lv_obj_create</span>(<span class="built_in">lv_scr_act</span>());</span><br><span class="line">    <span class="type">lv_obj_t</span> * obj2 = <span class="built_in">lv_obj_create</span>(<span class="built_in">lv_scr_act</span>());</span><br><span class="line">    <span class="built_in">lv_obj_align</span>(obj2, LV_ALIGN_CENTER, <span class="number">0</span> ,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 本地样式</span></span><br><span class="line">    <span class="built_in">lv_obj_set_style_bg_color</span>(obj,  <span class="built_in">lv_palette_main</span>(LV_PALETTE_YELLOW), LV_STATE_PRESSED);    <span class="comment">// 设置背景色</span></span><br><span class="line">    <span class="built_in">lv_obj_set_style_bg_color</span>(obj2,  <span class="built_in">lv_palette_main</span>(LV_PALETTE_AMBER), LV_STATE_PRESSED);   <span class="comment">// 设置背景色</span></span><br><span class="line">    <span class="built_in">lv_obj_set_style_bg_opa</span>(obj, LV_OPA_50, LV_STATE_PRESSED);                  <span class="comment">// 设置背景透明度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">        添加样式到对象:</span></span><br><span class="line"><span class="comment">        lv_obj_add_style(obj, &amp;style, &lt;selector&gt;)</span></span><br><span class="line"><span class="comment">        参数“obj”就是要R-ed 值 (不能是互斥，否添加到的对象，</span></span><br><span class="line"><span class="comment">        “style”是指向样式变量的指针，</span></span><br><span class="line"><span class="comment">        &lt;selector&gt;是应添加样式的部分和状态的,O则就是清除标志，没法合并)。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(obj, &amp;style_obj, <span class="number">0</span>);                   <span class="comment">// 默认状态: LV_STATE_DEFAULT</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(obj2, &amp;style_obj, <span class="number">0</span>);                  <span class="comment">// 默认状态: LV_STATE_DEFAULT</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(obj, &amp;style_obj, LV_STATE_PRESSED);  <span class="comment">// 按下状态，当对象被按下的时候应用该样式</span></span><br><span class="line">    <span class="built_in">lv_obj_add_style</span>(obj2, &amp;style_obj, LV_STATE_PRESSED); <span class="comment">// 按下状态，当对象被按下的时候应用该样式</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 滑杆示例(不需要深入研究，体会部件样式的部分和状态即可)，看里面的注释：体验流程</span></span><br><span class="line">    <span class="comment">//lv_example_slider_2();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="获取样式属性"><a href="#获取样式属性" class="headerlink" title="获取样式属性"></a>获取样式属性</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">获取属性的最终值（考虑级联、继承、本地样式和转换）：</span><br><span class="line"><span class="built_in">lv_obj_get_style_</span>&lt;property_name&gt;(obj, &lt;part&gt;);</span><br><span class="line">函数使用对象的当前状态，如果没有更好的候选对象，则返回默认值。 例如</span><br><span class="line"><span class="type">lv_color_t</span> color=<span class="built_in">lv_obj_get_style_bg_color</span>(obj,LV_PART_MAIN);</span><br></pre></td></tr></table></figure><h4 id="删除样式"><a href="#删除样式" class="headerlink" title="删除样式"></a>删除样式</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">删除对象的所有样式： <span class="built_in">lv_obj_remove_style_all</span>(obj);</span><br><span class="line">删除对象的特定样式： <span class="built_in">lv_obj_remove_style</span>(obj, &amp;style_obj, selector);</span><br><span class="line"></span><br><span class="line">只有当 selector 与 lv_obj_add_style 中使用的 selector 匹配时，此函数才会删除 style</span><br><span class="line">    </span><br><span class="line">如果 style 是空，那么会根据给出的 selector 检查并删除所有匹配的样式如果 selector 是 LV_STATE_ANY 或 LV_PART_ANY 就会删除具有任何状态或部分的样式。</span><br><span class="line">    </span><br><span class="line">下面这个效果和lv_obj_remove_style_all 的效果是一样的： </span><br><span class="line"><span class="built_in">lv_obj_remove_style</span>(obj, <span class="literal">NULL</span>, LV_STATE_ANY | LV_PART_ANY );</span><br></pre></td></tr></table></figure><h4 id="背景部分的属性"><a href="#背景部分的属性" class="headerlink" title="背景部分的属性"></a>背景部分的属性</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">背景属性和我们前面学习的盒子模型关系很大，背景属性主要有一下这些：</span><br><span class="line">背景(Background)</span><br><span class="line">边界(Border)</span><br><span class="line">轮廓(Outline)</span><br><span class="line">阴影(Shadow)</span><br><span class="line">填充(Padding)</span><br><span class="line">宽度和高度变换</span><br><span class="line">X和Y变换</span><br></pre></td></tr></table></figure><h4 id="样式的状态和部分"><a href="#样式的状态和部分" class="headerlink" title="样式的状态和部分"></a>样式的状态和部分</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">对象可以处于以下状态的组合：</span><br><span class="line">LV_STATE_DEFAULT (0x0000) 正常，释放状态</span><br><span class="line">LV_STATE_CHECKED (0x0001) 切换或检查状态</span><br><span class="line">LV_STATE_FOCUSED (0x0002) 通过键盘或编码器聚焦或通过触摸板/鼠标点击</span><br><span class="line">LV_STATE_FOCUS_KEY (0x0004) 通过键盘或编码器聚焦，但不通过触摸板/鼠标聚焦</span><br><span class="line">LV_STATE_EDITED (0x0008) 由编码器编辑</span><br><span class="line">LV_STATE_HOVERED (0x0010) 鼠标悬停（现在不支持）</span><br><span class="line">LV_STATE_PRESSED (0x0020) 被按下</span><br><span class="line">LV_STATE_SCROLLED (0x0040) 正在滚动</span><br><span class="line">LV_STATE_DISABLED (0x0080) 禁用状态</span><br><span class="line">LV_STATE_USER_1 (0x1000) 自定义状态</span><br><span class="line">LV_STATE_USER_2 (0x2000) 自定义状态</span><br><span class="line">LV_STATE_USER_3 (0x4000) 自定义状态</span><br><span class="line">LV_STATE_USER_4 (0x8000) 自定义状态</span><br><span class="line">这些可能会随着lvgl的更新而不断增加，同学们可以阅读最新版本的文档获取最新资料。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">对象可以有 部分(parts) ，它们也可以有自己的样式。LVGL 中存在以下预定义部分：</span><br><span class="line">LV_PART_MAIN  类似矩形的背景</span><br><span class="line">LV_PART_SCROLLBAR  滚动条</span><br><span class="line">LV_PART_INDICATOR  指标，例如用于滑块、条、开关或复选框的勾选框</span><br><span class="line">LV_PART_KNOB  像手柄一样可以抓取调整值</span><br><span class="line">LV_PART_SELECTED  表示当前选择的选项或部分</span><br><span class="line">LV_PART_ITEMS  如果小部件具有多个相似元素（例如表格单元格）</span><br><span class="line">LV_PART_TICKS  刻度上的刻度，例如对于图表或仪表</span><br><span class="line">LV_PART_CURSOR  标记一个特定的地方，例如文本区域或图表的光标</span><br><span class="line">LV_PART_CUSTOM_FIRST 可以从这里添加自定义部件。</span><br><span class="line">这些可能会随着lvgl的更新而不断增加，同学们可以阅读最新版本的文档获取最新资料。</span><br></pre></td></tr></table></figure><h4 id="本地样式"><a href="#本地样式" class="headerlink" title="本地样式"></a>本地样式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">除了“普通” 样式外，对象还可以存储 本地样式(私有样式) 。</span><br><span class="line">本地样式与普通样式类似，但是它不能在其他对象之间共享。如果使用本地样式，将自动分配局部样式，并在删除对象时释放。本地样式对于向对象添加本地自定义很有用。</span><br><span class="line">本地样式的接口函数是这样的格式：</span><br><span class="line">lv_obj_set_style_&lt;property_name&gt;(obj, &lt;value&gt;, &lt;selector&gt;);</span><br><span class="line">示例：</span><br><span class="line">lv_obj_set_style_bg_color(obj,  lv_color_hex(0xffffff), 0);   // 设置背景色lv_obj_set_style_bg_opa(obj, LV_OPA_50, 0);              // 设置背景透明度lv_style_set_style_....</span><br><span class="line">删除本地样式的时候我们删除某一个样式：</span><br><span class="line">lv_obj_remove_local_style_prop(obj, LV_STYLE_..., selector);</span><br><span class="line">LV_STYLE_...的取值请看： lvgl/src/misc/lv_style.h 中的 lv_style_prop_t </span><br></pre></td></tr></table></figure><h4 id="样式继承"><a href="#样式继承" class="headerlink" title="样式继承"></a>样式继承</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">某些属性（通常与文本相关）可以从父对象的样式继承。 </span><br><span class="line">只有没有在为对象设置样式属性的时候，才应用继承。 在这种情况下，如果这个属性是可继承的，那这个属性的值会在父类中检索，直到一个对象为该属性指定了一个值。父类将使用自己的状态来确定该值。 因此，如果按下按钮，并且文本颜色来自此处，则将使用按下的文本颜色。</span><br></pre></td></tr></table></figure><h4 id="过渡特效"><a href="#过渡特效" class="headerlink" title="过渡特效"></a>过渡特效</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">默认情况下，当一个对象改变状态（例如它被按下）时，新状态的新属性会立即设置。但是，通过转换，可以在状态更改时播放动画。 例如，按下按钮时，其背景颜色可以在 300 毫秒内动画显示为按下的颜色。</span><br><span class="line">demo体验：</span><br><span class="line">https://docs.lvgl.io/8.1/overview/style.html#transitionhttp://lvgl.100ask.net/8.1/overview/style.html#transition</span><br><span class="line">这部分我们在后面课程再展开讨论</span><br></pre></td></tr></table></figure><h4 id="样式主题"><a href="#样式主题" class="headerlink" title="样式主题"></a>样式主题</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">主题是风格的集合。如果存在活动主题，LVGL将其应用于每个创建的部件(对象)。 这将为UI提供一个默认外观，然后可以通过添加更多样式对其进行修改。</span><br><span class="line">demo体验：</span><br><span class="line">https://docs.lvgl.io/8.1/overview/style.html#extending-the-current-themehttp://lvgl.100ask.net/8.1/overview/style.html#extending-the-current-theme</span><br><span class="line">这部分后面的课程再展开讨论。</span><br></pre></td></tr></table></figure><h4 id="宏开关"><a href="#宏开关" class="headerlink" title="宏开关"></a>宏开关</h4><p>详见官方文档</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_add/<span class="built_in">clear_flag</span>(obj, LV_OBJ_FLAG_...); 启用/禁用</span><br></pre></td></tr></table></figure><h4 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 0</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">my_event_cb</span><span class="params">(<span class="type">lv_event_t</span> * e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">lv_obj_t</span> * obj = <span class="built_in">lv_event_get_target</span>(e);        <span class="comment">// 获取触发事件的部件(对象)</span></span><br><span class="line">    <span class="type">lv_event_code_t</span> code = <span class="built_in">lv_event_get_code</span>(e);    <span class="comment">// 获取当前部件(对象)触发的事件代码</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * label = <span class="built_in">lv_event_get_user_data</span>(e);   <span class="comment">// 获取添加事件时传递的用户数据</span></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">switch</span>(code)&#123;</span><br><span class="line">        <span class="keyword">case</span> LV_EVENT_PRESSED:</span><br><span class="line">            <span class="built_in">lv_label_set_text</span>(label, <span class="string">&quot;LV_EVENT_PRESSED&quot;</span>);</span><br><span class="line">            <span class="built_in">lv_obj_set_style_bg_color</span>(obj, <span class="built_in">lv_color_hex</span>(<span class="number">0xc43e1c</span>), <span class="number">0</span>);  <span class="comment">// 通过本地样式(私有样式)设置背景色</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;LV_EVENT_PRESSED\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LV_EVENT_LONG_PRESSED:</span><br><span class="line">            <span class="built_in">lv_label_set_text</span>(label, <span class="string">&quot;LV_EVENT_LONG_PRESSED&quot;</span>);</span><br><span class="line">            <span class="built_in">lv_obj_set_style_bg_color</span>(obj, <span class="built_in">lv_color_hex</span>(<span class="number">0x4cbe37</span>), <span class="number">0</span>);  <span class="comment">// 通过本地样式(私有样式)设置背景色</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;LV_EVENT_LONG_PRESSED\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="comment">//lv_label_set_text(label,&quot;Bsgbsg7&quot;);</span></span><br><span class="line">            <span class="comment">//lv_obj_set_style_bg_color(obj, lv_color_hex(0xcc33ff), 0);</span></span><br><span class="line">            <span class="comment">//printf(&quot;default\n&quot;);</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">lv_100ask_demo_course_2_2_6</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 创建基础部件(对象) */</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * obj = <span class="built_in">lv_obj_create</span>(<span class="built_in">lv_scr_act</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 创建label部件(对象) */</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * label = <span class="built_in">lv_label_create</span>(<span class="built_in">lv_scr_act</span>());</span><br><span class="line">    <span class="built_in">lv_label_set_text</span>(label, <span class="string">&quot;Bsgbsg7&quot;</span>);   <span class="comment">// 设置label展示的文字</span></span><br><span class="line">    <span class="built_in">lv_obj_center</span>(label);               <span class="comment">// 将对象与其父对象的中心对齐,这里的父对象是屏幕:lv_scr_act()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 为obj1添加事件回调函数,所有的事件类型都能触发该回调函数</span></span><br><span class="line">    <span class="built_in">lv_obj_add_event_cb</span>(obj, my_event_cb, LV_EVENT_ALL, label);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// 0</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 事件冒泡 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 1</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">my_event_cb</span><span class="params">(<span class="type">lv_event_t</span> * e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">lv_obj_t</span> * obj = <span class="built_in">lv_event_get_target</span>(e);            <span class="comment">// 获取触发事件的对象</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * parent = <span class="built_in">lv_event_get_current_target</span>(e); <span class="comment">// 获取触发事件对象的父对象(事件冒泡才有)</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        注意此处的parent获取到了最外层的，即obj1</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="type">lv_event_code_t</span> code = <span class="built_in">lv_event_get_code</span>(e);        <span class="comment">// 获取当前部件触发的事件代码</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * label = <span class="built_in">lv_event_get_user_data</span>(e);       <span class="comment">// 获取添加事件时传递的用户数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span>(code)&#123;</span><br><span class="line">        <span class="keyword">case</span> LV_EVENT_PRESSED:</span><br><span class="line">            <span class="built_in">lv_label_set_text</span>(label, <span class="string">&quot;LV_EVENT_PRESSED&quot;</span>);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(label, obj, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">lv_obj_set_style_bg_color</span>(parent, <span class="built_in">lv_color_hex</span>(<span class="number">0xc43e1c</span>), <span class="number">0</span>);   <span class="comment">// 通过本地样式(私有样式)设置背景色</span></span><br><span class="line">            <span class="built_in">lv_obj_set_style_bg_color</span>(obj, <span class="built_in">lv_color_hex</span>(<span class="number">0xc43e1c</span>), <span class="number">0</span>);      <span class="comment">// 通过本地样式(私有样式)设置背景色</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;LV_EVENT_PRESSED\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LV_EVENT_CLICKED:</span><br><span class="line">            <span class="built_in">lv_obj_remove_local_style_prop</span>(parent, LV_STYLE_BG_COLOR, <span class="number">0</span>);   <span class="comment">// 删除通过本地样式(私有样式)设置的背景色</span></span><br><span class="line">            <span class="built_in">lv_obj_remove_local_style_prop</span>(obj, LV_STYLE_BG_COLOR, <span class="number">0</span>);      <span class="comment">// 删除通过本地样式(私有样式)设置的背景色</span></span><br><span class="line">            <span class="built_in">lv_label_set_text</span>(label, <span class="string">&quot;Bsgbsg7&quot;</span>);</span><br><span class="line">            <span class="built_in">lv_obj_align_to</span>(label, obj, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;LV_EVENT_CLICKED\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="comment">//printf(&quot;NONE\n&quot;);</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">lv_100ask_demo_course_2_2_6</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 创建一个基础对象 obj1 */</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * obj1 = <span class="built_in">lv_obj_create</span>(<span class="built_in">lv_scr_act</span>());</span><br><span class="line">    <span class="built_in">lv_obj_set_size</span>(obj1, <span class="number">450</span>, <span class="number">250</span>);</span><br><span class="line">    <span class="built_in">lv_obj_center</span>(obj1);                                <span class="comment">// 将对象与其父对象的中心对齐，这里的父对象是屏幕：lv_scr_act()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 以 obj1 创建一个基础对象 obj2 */</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * obj2 = <span class="built_in">lv_obj_create</span>(obj1);</span><br><span class="line">    <span class="built_in">lv_obj_set_size</span>(obj2, <span class="number">400</span>, <span class="number">200</span>);</span><br><span class="line">    <span class="built_in">lv_obj_center</span>(obj2);                                <span class="comment">// 将对象与其父对象的中心对齐，这里的父对象是屏幕：obj1</span></span><br><span class="line">    <span class="built_in">lv_obj_add_flag</span>(obj2, LV_OBJ_FLAG_EVENT_BUBBLE);    <span class="comment">// 启用事件冒泡，将接收到的所有事件传播给父级</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 以 obj2 创建一个基础对象 obj3 */</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * obj3 = <span class="built_in">lv_obj_create</span>(obj2);</span><br><span class="line">    <span class="built_in">lv_obj_set_size</span>(obj3, <span class="number">350</span>, <span class="number">150</span>);</span><br><span class="line">    <span class="built_in">lv_obj_center</span>(obj3);                                <span class="comment">// 将对象与其父对象的中心对齐，这里的父对象是屏幕：obj2</span></span><br><span class="line">    <span class="built_in">lv_obj_add_flag</span>(obj3, LV_OBJ_FLAG_EVENT_BUBBLE);    <span class="comment">// 启用事件冒泡，将接收到的所有事件传播给父级</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 以 obj3 创建一个基础对象 obj4 */</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * obj4 = <span class="built_in">lv_obj_create</span>(obj3);</span><br><span class="line">    <span class="built_in">lv_obj_set_size</span>(obj4, <span class="number">300</span>, <span class="number">100</span>);</span><br><span class="line">    <span class="built_in">lv_obj_center</span>(obj4);                                <span class="comment">// 将对象与其父对象的中心对齐，这里的父对象是屏幕：obj3</span></span><br><span class="line">    <span class="built_in">lv_obj_add_flag</span>(obj4, LV_OBJ_FLAG_EVENT_BUBBLE);    <span class="comment">// 启用事件冒泡，将接收到的所有事件传播给父级</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 以屏幕为父类，创建一个label部件(对象) */</span></span><br><span class="line">    <span class="type">lv_obj_t</span> * label = <span class="built_in">lv_label_create</span>(<span class="built_in">lv_scr_act</span>());</span><br><span class="line">    <span class="built_in">lv_label_set_text</span>(label, <span class="string">&quot;Bsgbsg7&quot;</span>);                               <span class="comment">// 设置label展示的文字</span></span><br><span class="line">    <span class="built_in">lv_obj_align_to</span>(label, obj1, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);       <span class="comment">// 将label相对于obj1对齐</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//将给obj1添加事件回调函数，所有的事件类型都能触发该回调函数</span></span><br><span class="line">    <span class="built_in">lv_obj_add_event_cb</span>(obj1, my_event_cb, LV_EVENT_ALL, label);</span><br><span class="line">     <span class="comment">/*</span></span><br><span class="line"><span class="comment">        注意此处应该理解为obj2,3,4被触发之后，会将事件传给父类，直到传到能够处理此事件的父类（即lv_obj_add_event_cb内部的obj）</span></span><br><span class="line"><span class="comment">        如果是obj2，则都会传给obj2处理，obj1无法处理</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// 1</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加事件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">lv_obj_add_event_cb</span>(obj, event_cb, event_code, user_data);</span><br></pre></td></tr></table></figure><p>发送事件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">lv_event_send</span>(obj, event_cb, event_code, user_data);</span><br></pre></td></tr></table></figure><p>删除事件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">lv_obj_remove_event_cb</span>(obj, event_cb);</span><br><span class="line"><span class="built_in">lv_obj_remove_event_dsc</span>(obj, event_dsc);    </span><br><span class="line"><span class="comment">//event_dsc 是 lv_obj_add_event_cb 返回的指针</span></span><br></pre></td></tr></table></figure><p>事件类型(event_code)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">输入设备事件(Input device events)</span><br><span class="line">绘图事件(Drawing events)</span><br><span class="line">其他事件(Special events)</span><br><span class="line">特殊事件(Other events)</span><br><span class="line">自定义事件(Custom events)</span><br><span class="line"></span><br><span class="line">更全面的信息请查阅：</span><br><span class="line">源码：lvgl/src/core/lv_event.h    (lv_event_code_t)</span><br><span class="line">开发文档：</span><br><span class="line">英文：https://docs.lvgl.io/8.1/overview/event.html#event-codes</span><br><span class="line">中文：http://lvgl.100ask.net/8.1/overview/event.html#event-codes</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>事件回调函数的 lv_event_t 参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">事件回调函数只有一个参数，这个参数对我们的作为非常大，现在的版本提供这些功能：</span><br><span class="line">static void my_event_cb(lv_event_t * event);</span><br><span class="line">获取触发的事件代码：</span><br><span class="line">lv_event_code_t code = lv_event_get_code(e);</span><br><span class="line">获取触发事件的对象：</span><br><span class="line">lv_obj_t * target = lv_event_get_target(e);</span><br><span class="line">获取最初触发事件的对象(事件冒泡)：</span><br><span class="line">lv_obj_t * target = lv_event_get_current_target(e);</span><br><span class="line">获取事件传递的用户数据：</span><br><span class="line">lv_event_get_user_data(e); 获取使用 lv_obj_add_event_cb 传递的用户数据</span><br><span class="line">lv_event_get_param(e); 获取使用 lv_event_send 传递的用户数据</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">一个事件回调函数可给多个对象使用</span><br><span class="line">一个对象可以使用多个事件回调函数</span><br><span class="line"></span><br><span class="line">如果传入的用户数据不一样，一个对象可以绑定同一个事件回调函数多次，事件将按照添加的顺序调用。例如：</span><br><span class="line">lv_obj_add_event_cb(obj, my_clicked_event_cb, LV_EVENT_CLICKED, &amp;num1);</span><br><span class="line">lv_obj_add_event_cb(obj, my_clicked_event_cb, LV_EVENT_CLICKED, &amp;num2);</span><br></pre></td></tr></table></figure><p>事件冒泡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">启用方式：</span><br><span class="line">lv_obj_add_flag(obj, LV_OBJ_FLAG_EVENT_BUBBLE)，该对象的所有事件将会发送到该对象的父级，依此类推。</span><br><span class="line">lv_event_get_target(e); 获取触发事件的当前对象。</span><br><span class="line">lv_event_get_current_target(e); 获取事件冒泡的父对象。</span><br></pre></td></tr></table></figure><p>标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;../../lv_100ask_teach_demos.h&quot;</span><br><span class="line">#if LV_USE_100ASK_DEMO_COURSE_3_1_1</span><br><span class="line">#include &quot;lv_100ask_demo_course_3_1_1.h&quot;</span><br><span class="line">//extern lv_font_t bsg;</span><br><span class="line">static void label_event_cb(lv_event_t * e)</span><br><span class="line">&#123;</span><br><span class="line">    lv_obj_t * label = lv_event_get_target(e);        // 获取触发事件的部件(对象)</span><br><span class="line">    lv_event_code_t code = lv_event_get_code(e);    // 获取当前部件(对象)触发的事件代码</span><br><span class="line">    lv_obj_set_style_bg_opa(label, 100,0);</span><br><span class="line">    switch(code)&#123;</span><br><span class="line">        case LV_EVENT_PRESSED:</span><br><span class="line">            lv_label_set_text(label, &quot;LV_EVENT_PRESSED&quot;);</span><br><span class="line">            lv_obj_set_style_bg_color(label, lv_color_hex(0xc43e1c), 0);  // 通过本地样式(私有样式)设置背景色</span><br><span class="line">            //printf(&quot;LV_EVENT_PRESSED\n&quot;);</span><br><span class="line">            break;</span><br><span class="line">        case LV_EVENT_LONG_PRESSED:</span><br><span class="line">            lv_label_set_text(label, &quot;LV_EVENT_LONG_PRESSED&quot;);</span><br><span class="line">            lv_obj_set_style_bg_color(label, lv_color_hex(0x4cbe37), 0);  // 通过本地样式(私有样式)设置背景色</span><br><span class="line">            //printf(&quot;LV_EVENT_LONG_PRESSED\n&quot;);</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            //printf(&quot;NONE\n&quot;);</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void lv_100ask_demo_course_3_1_1(void)</span><br><span class="line">&#123;</span><br><span class="line">    LV_FONT_DECLARE(bsg);</span><br><span class="line">    char * text = &quot;Wecome to Bsgbsg7&#x27;s LVGL&quot;;   // 要显示的文字</span><br><span class="line">    // 创建一个label部件(对象),他的父对象是活动屏幕对象</span><br><span class="line">    lv_obj_t * label = lv_label_create(lv_scr_act());</span><br><span class="line">    //lv_obj_set_size(label,500,50);</span><br><span class="line">    lv_obj_center(label);</span><br><span class="line"></span><br><span class="line">    /* 函数中会另外开辟和给定的字符串大小的空间存放字符串（常用） */</span><br><span class="line">    lv_label_set_text(label, text);</span><br><span class="line">    //lv_label_set_text(label, &quot;Wecome to Bsgbsg7&#x27;s LVGL&quot;);</span><br><span class="line"></span><br><span class="line">    /* 也会另外开辟空间存放字符串，但是可以像printf格式化字符串 */</span><br><span class="line">    //lv_label_set_text_fmt(label, &quot;%s: %d&quot;,text, 30);</span><br><span class="line"></span><br><span class="line">    /* 直接使用给定的缓冲区(不常用) */</span><br><span class="line">    //lv_label_set_text_static(label, text);</span><br><span class="line">    //lv_label_set_long_mode(label, LV_LABEL_LONG_SCROLL_CIRCULAR  ) ;</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">    设置文本颜色：</span><br><span class="line">         lv_style_set_text_color(&amp;style_obj, lv_color_hex(0xf7b37b));</span><br><span class="line">         lv_obj_set_style_text_color(label, lv_color_hex(0xf7b37b), 0);</span><br><span class="line">    */</span><br><span class="line">    //lv_style_set_text_color(&amp;style_obj, lv_color_hex(0xf7b37b));</span><br><span class="line">    //lv_obj_set_style_text_color(label, lv_color_hex(0xf7b37b),0);</span><br><span class="line">    //lv_obj_set_style_bg_color(label, lv_color_hex(0xf5b37b),0);</span><br><span class="line">    //lv_obj_set_style_bg_opa(label, 100,0);</span><br><span class="line"></span><br><span class="line">    //lv_label_set_recolor(label, true);</span><br><span class="line">    //lv_label_set_text(label, &quot;#0000ff Re-color# #ff00ff words# #ff0000 of a# label&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">    文本选择：</span><br><span class="line">        lv_label_set_text_sel_start(label, 1);</span><br><span class="line">        lv_label_set_text_sel_end(label, 6);</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /* 设置文字字号(内置ASCII字库) */</span><br><span class="line">    /* 使用其他字号的字体，如果不设置默认使用 lv_font_montserrat_14 ，在 lv_conf.h 中 LV_FONT_DEFAULT 定义 */</span><br><span class="line">    lv_obj_set_style_text_font(label, &amp;bsg, 0);</span><br><span class="line">    lv_label_set_text(label, &quot;山东大学（青岛）&quot;);</span><br><span class="line"></span><br><span class="line">    //lv_label_set_text(label, LV_SYMBOL_OK LV_SYMBOL_WIFI LV_SYMBOL_PLAY); // 多个图标一起使用</span><br><span class="line"></span><br><span class="line">    /* 让 label 可以响应输入事件 */</span><br><span class="line">    //lv_obj_add_flag(label, LV_OBJ_FLAG_CLICKABLE);</span><br><span class="line">    //lv_obj_add_event_cb(label, label_event_cb, LV_EVENT_ALL, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#endif /* LV_USE_100ASK_DEMO_COURSE_3_1_1 */</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在盒子模型里面，标签的组成包括：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LV_PART_MAIN 矩形部分(盒子区域)。 填充值可用于在文本和背景之间添加空间。</span><br><span class="line">LV_PART_SCROLLBAR 当要展示的文本大于部件的大小时，显示的滚动条部分。</span><br><span class="line">LV_PART_SELECTED 选中文本时，突出显示的部分。</span><br><span class="line">label只能使用 text_color 和 bg_color 样式属性。</span><br></pre></td></tr></table></figure><p>创建标签：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_t * label = lv_label_create(parent);</span><br></pre></td></tr></table></figure><p>设置显示文本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">直接设置要显示的文本：</span><br><span class="line">  lv_label_set_text(label, &quot;New text&quot;);</span><br><span class="line"></span><br><span class="line">格式化给定要显示的文本：</span><br><span class="line">  lv_label_set_text_fmt(label, “%s: %d”, “Value”, 15);</span><br><span class="line"></span><br><span class="line">文本不存储在动态内存中，而是直接使用给定的缓冲区：</span><br><span class="line">  lv_label_set_text_static(label, &quot;New text&quot;);</span><br><span class="line"></span><br><span class="line">要在label换行非常简单，像printf函数那样使用 \n 即可：</span><br><span class="line">  lv_label_set_text(label, &quot; line1\nline2\n\nline4 &quot;);</span><br></pre></td></tr></table></figure><p>大小</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lv_label_set_long_mode(label, LV_LABEL_LONG_...) 指定模式。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">默认情况标签的大小会自动拓展成和文本一样的大小(LV_SIZE_CONTENT)</span><br><span class="line">  lv_obj_set_size  lv_obj_set_width  lv_obj_set_height</span><br><span class="line"></span><br><span class="line">下面是几种模式：</span><br><span class="line">  LV_LABEL_LONG_WRAP 、</span><br><span class="line">  如果有多个换行，并且如果高度为LV_SIZE_CONTENT，那么高度会根据文本换行被自动扩展；否则文本将被剪掉。(默认设置)</span><br><span class="line">  </span><br><span class="line">  LV_LABEL_LONG_DOT </span><br><span class="line">  如果文本太长，就保持大小并在末尾写3个点 .</span><br><span class="line">  </span><br><span class="line">  LV_LABEL_LONG_SCROLL </span><br><span class="line">  如果文本比标签宽(太长)，则可以水平来回滚动显示它。如果它很高(多个\n换行)，可以垂直滚动。只滚动一个方向，水平滚动的优先级更高。</span><br><span class="line">  </span><br><span class="line">  LV_LABEL_LONG_SCROLL_CIRCULAR </span><br><span class="line">  如果文本比标签宽，则水平滚动它。如果它更高，就垂直滚动。只滚动一个方向，水平滚动的优先级更高。</span><br><span class="line">  </span><br><span class="line">  LV_LABEL_LONG_CLIP </span><br><span class="line">  剪掉超出标签范围外的文本部分。</span><br><span class="line"></span><br><span class="line">注意：LV_LABEL_LONG_DOT 是直接操作文本缓冲区以添加/删除点。如果使用 lv_label_set_text 和 lv_label_set_text_fmt 它们会分配一个单独的缓冲区，不会出问题。但是如果使用 lv_label_set_text_static 时我们传递给它的缓冲区必须是可写的。</span><br></pre></td></tr></table></figure><p>文本着色</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lv_style_set_text_color(&amp;style_obj, lv_color_hex(0xf7b37b));</span><br><span class="line">lv_obj_set_style_text_color(label, lv_color_hex(0xf7b37b), 0);</span><br></pre></td></tr></table></figure><p>也可以让文本某些部分重新着色，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lv_label_set_recolor(label1, true);</span><br><span class="line">lv_label_set_text(label1, &quot;#0000ff Re-color# #ff00ff words# #ff0000 of a# label);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>文本选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果在 lv_conf.h 中打开了 LV_LABEL_TEXT_SELECTION (默认开启)，就可以选择部分文本了。这个和我们在PC用鼠标选中文本类似，但是这个效果只能在文本框(lv_textarea)中实现。Label只能事先手动选择指定范围的文本：</span><br><span class="line">  lv_label_set_text_sel_start(label, 1);</span><br><span class="line">  lv_label_set_text_sel_end(label, 6);</span><br><span class="line">注意，这里的第一个字符从1开始算，而不是0。</span><br></pre></td></tr></table></figure><p>显示图标</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20221223001642589.png" alt="image-20221223001642589"></p><p>用法(<strong>LV_SYMBOL_…</strong>)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lv_label_set_text(my_label, LV_SYMBOL_OK); // 直接显示图标</span><br><span class="line">lv_label_set_text(my_label, LV_SYMBOL_OK “Apply”);  // 图标与字符串一起使用</span><br><span class="line">lv_label_set_text(my_label, LV_SYMBOL_OK LV_SYMBOL_WIFI LV_SYMBOL_PLAY);  // 多个图标一起使用</span><br></pre></td></tr></table></figure><p>事件处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Label默认不接收输入事件，如果我们想设置输入类型的样式或者事件会无法生效，就需要打开 LV_OBJ_FLAG_CLICKABLE，示例：</span><br><span class="line">  lv_obj_add_flag(label, LV_OBJ_FLAG_CLICKABLE); // 使输入设备可点击对象</span><br></pre></td></tr></table></figure><p>显示中文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">LVGL内置有一个中文字库 [CJK](https://zh.wikipedia.org/wiki/中日韓統一表意文字)[字库](https://zh.wikipedia.org/wiki/中日韓統一表意文字) ，这个字库在 lv_conf.h中定义为：LV_FONT_SIMSUN_16_CJK。</span><br><span class="line"></span><br><span class="line">要在lvgl中使用显示自己的中文字库，我们需要用到两个东西：字体文件和字体转换器。</span><br><span class="line"></span><br><span class="line">字体文件我们可以使用开源的字体或者自己制作出来，准备好了字体文件之后使用字体转换器即可转换成可以在lvgl上使用的字体格式。开源字体获取页面：</span><br><span class="line">  http://lvgl.100ask.net/8.1/tools/fonts-zh-source.html</span><br><span class="line"></span><br><span class="line">准备好字体文件之后就可以通过lvgl官方提供的字体转换器，提取转换你想要的字体，LVGL官方在线字体转换器页面：</span><br><span class="line">  [ https://lvgl.io/tools/fontconverter](https://lvgl.io/tools/fontconverter)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.为要输出字体命名。例如“font_source_han_sans_bold_20”</span><br><span class="line">2.以 px为单位指定高度（字体大小）</span><br><span class="line">3.设置bpp (bit-per-piel)。值越高，字体越平滑（抗锯齿）</span><br><span class="line">4.选择TTF 或 WOFF 格式字体文件</span><br><span class="line">5.设置要包含在字体中的 Unicode 字符范围或在符号字段中列出字符</span><br><span class="line">6.可以同时选择多个字体文件转换，并为其指定范围和/或符号。这些字符将被合并转换到同一个文件中。</span><br><span class="line">7.单击转换按钮以下载转换出来的 font_source_han_sans_bold_20.c 文件。</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20221223001716190.png" alt="image-20221223001716190"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.将结果 C 文件复制到你的 LVGL 项目中，并包含到项目；</span><br><span class="line">2.在你的项目应用程序的 C 文件中，将字体声明为：</span><br><span class="line">  extern lv_font_t my_font_name; </span><br><span class="line"> 或：</span><br><span class="line">  LV_FONT_DECLARE(my_font_name);</span><br><span class="line">3.在样式中设置字体：</span><br><span class="line">  lv_style_set_text_font(&amp;style_obj, &amp;my_font_name); // 普通(共享)样式</span><br><span class="line">  lv_obj_set_style_text_font(label, &amp;my_font_name, 0); // 私有(本地)样式</span><br><span class="line">4.unicode 是统一所有语言的一套编码。</span><br><span class="line">5.utf-8是基于unicode编码的一种节约字节的编码。</span><br></pre></td></tr></table></figure><h4 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LVGL学习笔记&quot;&gt;&lt;a href=&quot;#LVGL学习笔记&quot; class=&quot;headerlink&quot; title=&quot;LVGL学习笔记&quot;&gt;&lt;/a&gt;LVGL学习笔记&lt;/h2&gt;&lt;h3 id=&quot;1-对象&quot;&gt;&lt;a href=&quot;#1-对象&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Python Note</title>
    <link href="http://example.com/2023/05/07/python-note/"/>
    <id>http://example.com/2023/05/07/python-note/</id>
    <published>2023-05-07T04:32:31.421Z</published>
    <updated>2023-05-07T08:38:38.011Z</updated>
    
    <content type="html"><![CDATA[<p>EECS课程前期学习Python的笔记</p><p>***self.p&#x3D;float(p)***，注意用float改变精度，防止精度损失</p><ul><li>range函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    <span class="built_in">print</span>(_a)<span class="comment">#0，1，2</span></span><br><span class="line"><span class="keyword">for</span> _b <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(_b)<span class="comment">#1，2，3，4</span></span><br><span class="line"><span class="keyword">for</span> _c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">8</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(_c)<span class="comment">#1，3，5，7</span></span><br><span class="line"><span class="comment">#从start——start+step——stop-1</span></span><br></pre></td></tr></table></figure><ul><li>字符串</li></ul><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220913150319.jpg" alt="QQ截图20220913150319" style="zoom:80%;" /><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220913150504.jpg" alt="QQ截图20220913150504" style="zoom:80%;" /><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220913151004.jpg" alt="QQ截图20220913151004" style="zoom:80%;" /><ul><li>列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line">ls=<span class="built_in">list</span>([<span class="number">451</span>,<span class="number">254</span>,<span class="number">387</span>,<span class="number">445</span>,<span class="number">545</span>,<span class="number">5866</span>,<span class="number">7</span>,<span class="number">8</span>])</span><br><span class="line"><span class="built_in">print</span>(lst.index(<span class="number">7</span>,<span class="number">1</span>,<span class="number">8</span>))index() <span class="comment">#函数用于从列表中找出某个值第一个匹配项的索引位置，7表示查找的元素，start=1，end=8-1</span></span><br><span class="line"><span class="built_in">print</span>(lst[<span class="number">0</span>:<span class="number">5</span>:<span class="number">2</span>])</span><br><span class="line">lst.append(<span class="number">789</span>)<span class="comment">#列表增加操作</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br><span class="line">lst.append(ls)<span class="comment">#直接在列表后面加了一个列表（被当成一个元素）</span></span><br><span class="line"><span class="comment">#[1, 2, 3, 4, 5, 6, 7, 8, 789, [451, 254, 387, 445, 545, 5866, 7, 8]]</span></span><br><span class="line">lst.extend(ls)<span class="comment">#向列表末位一次添加多个元素</span></span><br><span class="line"><span class="comment">#[1, 2, 3, 4, 5, 6, 7, 8, 789, [451, 254, 387, 445, 545, 5866, 7, 8], 451, 254, 387, 445, 545, 5866, 7, 8]</span></span><br><span class="line">lst.insert(<span class="number">1</span>,<span class="number">80</span>)<span class="comment">#在索引1的位置插入80</span></span><br><span class="line"><span class="comment">#[1, 80, 2, 3, 4, 5, 6, 7, 8, 789, [451, 254, 387, 445, 545, 5866, 7, 8], 451, 254, 387, 445, 545, 5866, 7, 8]</span></span><br><span class="line">lst[<span class="number">5</span>:]=ls<span class="comment">#切掉后面的（包括），将后面的替换掉</span></span><br><span class="line"><span class="comment">#[1, 80, 2, 3, 4, 451, 254, 387, 445, 545, 5866, 7, 8]</span></span><br><span class="line">lst.remove(<span class="number">80</span>)<span class="comment">#移除元素，或者多个相同元素的第一个，找不到值会报错</span></span><br><span class="line"><span class="comment">#[1, 2, 3, 4, 451, 254, 387, 445, 545, 5866, 7, 8]</span></span><br><span class="line"><span class="keyword">del</span> lst[<span class="number">1</span>]<span class="comment">#删除索引为1的元素，找不到不会报错</span></span><br><span class="line">lst.pop(<span class="number">1</span>)<span class="comment">#根据索引移除</span></span><br><span class="line"><span class="comment">#[1, 3, 4, 451, 254, 387, 445, 545, 5866, 7, 8]</span></span><br><span class="line">lst.pop()<span class="comment">#不指定索引，移除列表中最后一个元素</span></span><br><span class="line"><span class="comment">#[1, 3, 4, 451, 254, 387, 445, 545, 5866, 7]</span></span><br><span class="line">new_lst=lst[<span class="number">1</span>:<span class="number">5</span>]<span class="comment">#利用切片产生新的列表，类似于删除，两个列表指向不同的空间/列表，修改其中一个不对另一个产生影响</span></span><br><span class="line"><span class="comment">#列表的强制复制/copy</span></span><br><span class="line">newlist=[:]<span class="comment">#即可复制出两个列表</span></span><br><span class="line"><span class="comment">#[3, 4, 451, 254]</span></span><br><span class="line">lst[<span class="number">1</span>:<span class="number">5</span>]=[]<span class="comment">#空列表删除元素</span></span><br><span class="line"><span class="comment">#[1, 387, 445, 545, 5866, 7]</span></span><br><span class="line">lst.clear()</span><br><span class="line"><span class="comment">#[]</span></span><br><span class="line"><span class="keyword">del</span> lst<span class="comment">#直接删除列表</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br><span class="line">lst[<span class="number">0</span>]=<span class="string">&#x27;HelloWorld&#x27;</span><span class="comment">#一次修改一个值</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br><span class="line">lst[<span class="number">1</span>:<span class="number">2</span>]=[<span class="string">&#x27;new&#x27;</span>,<span class="string">&#x27;world&#x27;</span>,<span class="number">1234</span>,<span class="number">5668</span>]<span class="comment">#切片一次修改多个值</span></span><br><span class="line"><span class="built_in">print</span>(ls,<span class="built_in">id</span>(ls),<span class="string">&#x27;排序前&#x27;</span>)</span><br><span class="line">ls.sort()</span><br><span class="line"><span class="built_in">print</span>(ls,<span class="built_in">id</span>(ls),<span class="string">&#x27;排序后&#x27;</span>)</span><br><span class="line">ls.sort(reverse=<span class="literal">True</span>)<span class="comment">#True表示降序</span></span><br><span class="line"><span class="built_in">print</span>(ls,<span class="built_in">id</span>(ls),<span class="string">&#x27;排序后&#x27;</span>)</span><br><span class="line">ls.sort(reverse=<span class="literal">False</span>)<span class="comment">#False表示升序</span></span><br><span class="line"><span class="built_in">print</span>(ls,<span class="built_in">id</span>(ls),<span class="string">&#x27;排序后&#x27;</span>)</span><br><span class="line"></span><br><span class="line">lst2=<span class="built_in">sorted</span>(ls,reverse=<span class="literal">True</span>)<span class="comment">#使用内置函数对列表排序，并产生一个新的列表，原列表不发生任何改变</span></span><br><span class="line"><span class="built_in">print</span>(lst2) </span><br><span class="line"></span><br><span class="line">c=<span class="string">&#x27;1-23+(23*23)*sda&#x27;</span></span><br><span class="line">origin_new = re.split(<span class="string">r&quot;([(+ - * /])&quot;</span>,c)<span class="comment">#分割字符串</span></span><br><span class="line"><span class="built_in">print</span>(origin_new)</span><br></pre></td></tr></table></figure><ul><li>可变</li></ul><p><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220920144152.jpg" alt="QQ截图20220920144152"></p><ul><li>错误举例，</li></ul><p>remove之后L1的元素个数变化，2的索引变成了0，但是迭代的e仍然为1（从0变过来），导致2没有被计算 </p><p><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220920152813.jpg" alt="QQ截图20220920152813"></p><ul><li>print输出函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="number">6</span>)</span><br><span class="line">hello <span class="number">6</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>+<span class="number">6</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;pyshell#12&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>+<span class="number">6</span>)</span><br><span class="line">TypeError: can only concatenate <span class="built_in">str</span> (<span class="keyword">not</span> <span class="string">&quot;int&quot;</span>) to <span class="built_in">str</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>+<span class="string">&#x27;6&#x27;</span>)</span><br><span class="line">hello6</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>+<span class="string">&#x27;world&#x27;</span>)</span><br><span class="line">helloworld</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;world&#x27;</span>)</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p>+用于连接字符串，不可用于连接数字和字符串，首尾直接相连，不自动添加空格</p><p>，里面默认分隔符，自带空格，无论混合输出还是字符串连接</p><ul><li>字典</li><li>copy</li></ul><p><em><strong>实例中 dict2 其实是 dict1 的引用（别名），所以输出结果都是一致的，dict3 父对象进行了深拷贝，不会随dict1 修改而修改，子对象是浅拷贝所以随 dict1 的修改而修改。</strong></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">dict1 =  &#123;&#x27;user&#x27;:&#x27;runoob&#x27;,&#x27;num&#x27;:[1,2,3]&#125;</span><br><span class="line"> </span><br><span class="line">dict2 = dict1          # 浅拷贝: 引用对象</span><br><span class="line">dict3 = dict1.copy()   # 浅拷贝：深拷贝父对象（一级目录），子对象（二级目录）不拷贝，还是引用</span><br><span class="line"> </span><br><span class="line"># 修改 data 数据</span><br><span class="line">dict1[&#x27;user&#x27;]=&#x27;root&#x27;</span><br><span class="line">dict1[&#x27;num&#x27;].remove(1)</span><br><span class="line"> </span><br><span class="line"># 输出结果</span><br><span class="line">print(dict1)</span><br><span class="line">print(dict2)</span><br><span class="line">print(dict3)</span><br><span class="line"></span><br><span class="line">实例中 dict2 其实是 dict1 的引用（别名），所以输出结果都是一致的，dict3 父对象进行了深拷贝，不会随dict1 修改而修改，子对象是浅拷贝所以随 dict1 的修改而修改。</span><br><span class="line">&#123;&#x27;num&#x27;: [2, 3], &#x27;user&#x27;: &#x27;root&#x27;&#125;</span><br><span class="line">&#123;&#x27;num&#x27;: [2, 3], &#x27;user&#x27;: &#x27;root&#x27;&#125;</span><br><span class="line">&#123;&#x27;num&#x27;: [2, 3], &#x27;user&#x27;: &#x27;runoob&#x27;&#125;</span><br></pre></td></tr></table></figure><ul><li>键值对储存数据，逗号分隔，无序序列</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scores=&#123;<span class="string">&#x27;zhangsan&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;lisi&#x27;</span>:<span class="number">78</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><p>字典是根据key查找value所在的位置</p></li><li><p>字典元素获取和添加</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scores.get()<span class="comment">#找不到时返回None</span></span><br><span class="line">score[]<span class="comment">#找不到时会报错</span></span><br><span class="line">scores.get(<span class="string">&#x27;a&#x27;</span>,<span class="number">99</span>)<span class="comment">#99是a找不到时提供的一个默认值</span></span><br><span class="line"><span class="comment">#添加</span></span><br><span class="line">smart_girl[<span class="string">&quot;age&quot;</span>] = <span class="number">35</span> <span class="comment">#有则修改，无则添加</span></span><br><span class="line">smart_girl.update(name = <span class="string">&quot;tyson&quot;</span>, age = <span class="number">80</span>) </span><br><span class="line">smart_girl.update(&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;da ye&quot;</span>, <span class="string">&quot;age&quot;</span> : <span class="number">30</span>, <span class="string">&quot;address&quot;</span> : <span class="string">&quot;beijing &quot;</span>&#125;) </span><br><span class="line">smart_girl.update(age=<span class="number">50</span>) </span><br></pre></td></tr></table></figure><ul><li>key的判断</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;l&#x27;</span> <span class="keyword">in</span> h)<span class="comment">#in/not in判断</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;l&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> h)</span><br><span class="line">scores.clear()<span class="comment">#清空字典元素</span></span><br><span class="line">scores[<span class="string">&#x27;&#x27;</span>]=<span class="number">98</span><span class="comment">#新增元素或者修改元素</span></span><br><span class="line"><span class="keyword">del</span> scores[]<span class="comment">#删除元素</span></span><br></pre></td></tr></table></figure><ul><li>字典视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">values=h.values()</span><br><span class="line">key=h.keys()</span><br><span class="line">items=h.items()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(values,<span class="built_in">type</span>(values),<span class="built_in">list</span>(values))</span><br><span class="line"><span class="built_in">print</span>(key,<span class="built_in">type</span>(key),<span class="built_in">list</span>(key))</span><br><span class="line"><span class="built_in">print</span>(items,<span class="built_in">type</span>(items))</span><br></pre></td></tr></table></figure><ul><li>字典元素遍历</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> h:<span class="comment">#item用于遍历键，get用于取值</span></span><br><span class="line">    <span class="built_in">print</span>(item,h[item],h.get(item))</span><br></pre></td></tr></table></figure><ul><li>字典的特点</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">d=&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;liu&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(d)<span class="comment">#注意是大括号,Key不允许重复,values可以重复</span></span><br><span class="line"><span class="comment">#元素是无序的,只可以根据keys计算values，查找速度很快</span></span><br><span class="line"><span class="comment">#keys必须是不可变对象</span></span><br><span class="line"><span class="comment">#字典可以根据需要动态伸缩</span></span><br><span class="line"><span class="comment">#字典会浪费大量内存，是一种空间换时间的数据结构</span></span><br></pre></td></tr></table></figure><ul><li>字典生成式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">itemd=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">price=[<span class="number">185</span>,<span class="number">98</span>,<span class="number">78</span>]</span><br><span class="line">f=&#123;itemd.upper():price <span class="keyword">for</span> itemd,price <span class="keyword">in</span> <span class="built_in">zip</span>(itemd,price)&#125;</span><br><span class="line">dic=<span class="built_in">dict</span>(<span class="built_in">zip</span>(keys,values))</span><br><span class="line"><span class="built_in">print</span>(f)</span><br><span class="line"><span class="comment">#upper()用于大写</span></span><br><span class="line"><span class="comment">#itemd:price和itemd,price对应一致即可f=&#123;a.upper():b for a,b in zip(itemd,price)&#125;</span></span><br></pre></td></tr></table></figure><img src="D:\SDU\SDU\CXcollege\image\QQ截图20220913001944.jpg" alt="QQ截图20220913001944" style="zoom: 80%;" /><ul><li>总结</li></ul><img src="D:\SDU\SDU\CXcollege\image\\QQ截图20220913002400.jpg" alt="QQ截图20220913002400" style="zoom:80%;" /><ul><li>分支结构</li></ul><img src="F:\Projects\Python学习\学习笔记\image\QQ截图20220913141628.jpg" alt="QQ截图20220913141628" style="zoom:80%;" /><p>注：两个float相等的比较：</p><p>​1.直接 &#x3D;&#x3D; 比较</p><p>​2.abs相减比较</p><p>​3.isclose函数比较</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">5.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">4.99998</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.isclose(a, b, rel_tol=<span class="number">1e-5</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.isclose(a, b, rel_tol=<span class="number">1e-6</span>)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line">It <span class="keyword">is</span> also possible to compare two values using absolute tolerance,</span><br><span class="line"> which must be a non-negative value:</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">5.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">4.99998</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.isclose(a, b, abs_tol=<span class="number">0.00003</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.isclose(a, b, abs_tol=<span class="number">0.00001</span>)</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><ul><li>循环结构</li></ul><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220913142802.jpg" alt="QQ截图20220913142802" style="zoom:80%;" /><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220913145243.jpg" alt="QQ截图20220913145243" style="zoom:80%;" /><p><strong>break</strong>会打破<strong>当前</strong>循环，并直接跳回<strong>上一级</strong>循环；<strong>continue</strong>跳过本次循环，并继续<strong>这级</strong>循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">b=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> b&lt;=<span class="number">3</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请输入密码&#x27;</span>)</span><br><span class="line">    i=<span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">if</span> i==<span class="string">&#x27;4567&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Right&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;ERROR&#x27;</span>)</span><br><span class="line">    b+=<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;三次密码输入错误&#x27;</span>)<span class="comment">#没有遇到break，执行完循环之后就执行else中的内容</span></span><br></pre></td></tr></table></figure><ul><li><p>穷举法</p></li><li><p>近似思想</p></li><li><p>二分查找</p></li></ul><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220913153957.jpg" alt="QQ截图20220913153957" style="zoom:80%;" /><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220913154522.jpg" alt="QQ截图20220913154522" style="zoom:80%;" /><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220913154939.jpg" alt="QQ截图20220913154939" style="zoom:80%;" /><ul><li>元组</li></ul><p>内置数据结构之一，不可变序列：没有增删改操作，如元组、字符串</p><p>可变序列：可以对序列执行增删改操作，对象地址不发生改变，如字典、列表</p><p>字典大括号{}，列表中括号[]，元组小括号（）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bsg=[<span class="number">12</span>,<span class="number">23</span>,<span class="number">432</span>,<span class="number">32</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(bsg))</span><br><span class="line">bsg.append(<span class="number">432</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(bsg))</span><br><span class="line">j=<span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(j))</span><br><span class="line">j=j+<span class="string">&#x27;world&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(j))</span><br></pre></td></tr></table></figure><ul><li>元组的创建</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">t=(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;wd&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(t,<span class="built_in">type</span>(t))</span><br><span class="line">g=<span class="built_in">tuple</span>((<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;dsa&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(g,<span class="built_in">type</span>(g))</span><br><span class="line">j=<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;dsa&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(j,<span class="built_in">type</span>(j))</span><br><span class="line">o=(<span class="string">&#x27;98&#x27;</span>,)<span class="comment">#只有一个元素时，注意末尾加一个逗号，否则也会被当成原本的类型</span></span><br><span class="line"><span class="built_in">print</span>(o,<span class="built_in">type</span>(o))</span><br><span class="line">i=()<span class="comment">#空元组</span></span><br><span class="line"><span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><ul><li>为什么要设计成不可变序列</li></ul><p>​a.多任务环境下，同时操作对象时不需要加锁</p><p>​b.程序中尽量使用不可变序列</p><p>注意：</p><p>​a.若元组中对象本身是不可变对象，则不能再引用其他对象</p><p>​b.若元组中的对象是可变对象，则可变对象的引用不允许改变，但是数据可以改变</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">s=(<span class="number">1</span>,<span class="number">2</span>,[<span class="number">1</span>,<span class="number">23</span>])</span><br><span class="line"><span class="built_in">print</span>(s,<span class="built_in">type</span>(s))</span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>],<span class="built_in">type</span>(s[<span class="number">0</span>]),<span class="built_in">id</span>(s[<span class="number">0</span>]))</span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">1</span>],<span class="built_in">type</span>(s[<span class="number">1</span>]),<span class="built_in">id</span>(s[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">2</span>],<span class="built_in">type</span>(s[<span class="number">2</span>]),<span class="built_in">id</span>(s[<span class="number">2</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(<span class="number">2</span>))<span class="comment">#此处的2和上面的2id相同，相同数值的id可能相同（字符串也可以）</span></span><br><span class="line">s[<span class="number">2</span>].append(<span class="number">12</span>)<span class="comment">#列表可以改变，但是s[2]=100修改引用不允许</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">2</span>],<span class="built_in">type</span>(s[<span class="number">2</span>]),<span class="built_in">id</span>(s[<span class="number">2</span>]))</span><br><span class="line">&gt;&gt;</span><br><span class="line"><span class="number">1</span> &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt; <span class="number">2564618256624</span></span><br><span class="line"><span class="number">2</span> &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt; <span class="number">2564618256656</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">23</span>] &lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt; <span class="number">2564623172544</span></span><br><span class="line"><span class="number">2564618256656</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">23</span>, <span class="number">12</span>] &lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt; <span class="number">2564623172544</span></span><br></pre></td></tr></table></figure><ul><li>元组的遍历</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hd=(<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;world&#x27;</span>,<span class="number">98</span>)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> hd:</span><br><span class="line">    <span class="built_in">print</span>(_)</span><br><span class="line"><span class="comment">#等效于一下代码</span></span><br><span class="line"><span class="built_in">print</span>(hd[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(hd[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(hd[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><p><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220920144858.jpg" alt="QQ截图20220920144858"></p><ul><li>作用</li></ul><p><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220920145136.jpg" alt="QQ截图20220920145136"></p><ul><li>集合</li></ul><p>可变类型序列，是没有value的字典{key:value}</p><ul><li>集合的创建方式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s=&#123;<span class="string">&#x27;d&#x27;</span>,<span class="number">789</span>,<span class="string">&#x27;sddsa&#x27;</span>,<span class="number">789</span>,<span class="number">789</span>&#125;<span class="comment">#集合不允许重复,且是无序存储</span></span><br><span class="line"><span class="built_in">print</span>(s,<span class="built_in">type</span>(s),<span class="built_in">id</span>(s))</span><br><span class="line">s=<span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">0</span>,<span class="number">9</span>,<span class="number">2</span>))<span class="comment">#使用函数set转换成集合</span></span><br><span class="line"><span class="built_in">print</span>(s,<span class="built_in">type</span>(s),<span class="built_in">id</span>(s))</span><br><span class="line">s=<span class="built_in">set</span>([<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(s,<span class="built_in">type</span>(s),<span class="built_in">id</span>(s))</span><br><span class="line">s=<span class="built_in">set</span>((<span class="number">1</span>,<span class="number">23</span>,<span class="number">34</span>,<span class="number">543</span>))</span><br><span class="line"><span class="comment">#&#123;1, 34, 543, 23&#125; &lt;class &#x27;set&#x27;&gt; 2104296556800</span></span><br><span class="line">s=<span class="built_in">set</span>(<span class="string">&#x27;hello&#x27;</span>)<span class="comment">#相同元素被删除</span></span><br><span class="line"><span class="comment">#&#123;&#x27;h&#x27;, &#x27;l&#x27;, &#x27;e&#x27;, &#x27;o&#x27;&#125; &lt;class &#x27;set&#x27;&gt; 2104293205024</span></span><br><span class="line">s=<span class="built_in">set</span>()<span class="comment">#空集合定义方法</span></span><br><span class="line"><span class="built_in">print</span>(s,<span class="built_in">type</span>(s),<span class="built_in">id</span>(s))<span class="comment">#set() &lt;class &#x27;set&#x27;&gt; 2104296556800</span></span><br></pre></td></tr></table></figure><ul><li>集合相关操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">s=&#123;<span class="number">12</span>,<span class="number">23</span>,<span class="number">432</span>,<span class="number">234</span>,<span class="number">34</span>&#125;</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;集合元素的判断&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">12</span> <span class="keyword">in</span> s,<span class="number">122</span> <span class="keyword">not</span> <span class="keyword">in</span> s)<span class="comment">#True True</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;集合元素的新增&#x27;&#x27;&#x27;</span></span><br><span class="line">s.add(<span class="number">98</span>)<span class="comment">#一次添加一个元素</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line">s.update(&#123;<span class="number">233</span>,<span class="number">987</span>,<span class="number">546</span>&#125;)<span class="comment">#一次添加多个元素</span></span><br><span class="line">s.update([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">s.update((<span class="number">10</span>,<span class="number">0</span>,<span class="number">900</span>))</span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;集合元素的删除&#x27;&#x27;&#x27;</span></span><br><span class="line">s.remove(<span class="number">1</span>)<span class="comment">#一次删除一个元素，元素不存在时会报异常</span></span><br><span class="line">s.discard(<span class="number">800</span>)<span class="comment">#一次删除一个元素，元素不存在不报异常</span></span><br><span class="line">s.pop()<span class="comment">#一次删除任意一个元素，不可以指定</span></span><br><span class="line">s.clear()<span class="comment">#清空集合</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><ul><li>集合间的关系</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s1=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line">s2=&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line"><span class="comment">#集合相等可以用==和！=判断</span></span><br><span class="line"><span class="built_in">print</span>(s1 == s2,s1 != s2)</span><br><span class="line"><span class="comment">#s2是s1的子集</span></span><br><span class="line"><span class="built_in">print</span>(s2.issubset(s1),s1.issubset(s2))</span><br><span class="line"><span class="comment">#s1是s2的超集</span></span><br><span class="line"><span class="built_in">print</span>(s1.issuperset(s2),s2.issuperset(s1))</span><br><span class="line"><span class="comment">#两个集合是否含有交集</span></span><br><span class="line"><span class="built_in">print</span>(s1.isdisjoint(s2))<span class="comment">#有交集为False</span></span><br><span class="line">s3=&#123;<span class="number">3423</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(s1.isdisjoint(s3))<span class="comment">#没有交集为True</span></span><br></pre></td></tr></table></figure><ul><li>集合的数据操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#交集</span></span><br><span class="line"><span class="built_in">print</span>(s1.intersection(s2))</span><br><span class="line"><span class="comment">#并集</span></span><br><span class="line"><span class="built_in">print</span>(s1|s2)</span><br><span class="line"><span class="built_in">print</span>(s1.union(s2))</span><br><span class="line"><span class="comment">#差集</span></span><br><span class="line"><span class="built_in">print</span>(s1.difference(s2))</span><br><span class="line"><span class="comment">#对称差集:两个集合的并集减去交集</span></span><br><span class="line"><span class="built_in">print</span>(s1.symmetric_difference(s2))</span><br><span class="line"><span class="comment">#以上运算都不改变s1和s2的值</span></span><br></pre></td></tr></table></figure><ul><li>集合生成式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#列表生成式</span></span><br><span class="line">lst=[i*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>)]</span><br><span class="line"><span class="built_in">print</span>(lst)</span><br><span class="line"><span class="comment">#集合生成式</span></span><br><span class="line">lst=&#123;i*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>)&#125;</span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><ul><li>列表、字典、元组、集合</li></ul><table><thead><tr><th align="center">数据结构</th><th align="center">是否可变</th><th align="center">是否重复</th><th align="center">是否有序</th><th align="center">定义符号</th></tr></thead><tbody><tr><td align="center">list</td><td align="center">可变</td><td align="center">可重复</td><td align="center">有序</td><td align="center">[]</td></tr><tr><td align="center">tuple</td><td align="center">不可变</td><td align="center">可重复</td><td align="center">有序</td><td align="center">()</td></tr><tr><td align="center">dict</td><td align="center">可变</td><td align="center">key不可重复&#x2F;value可重复</td><td align="center">无序</td><td align="center">{key:value}</td></tr><tr><td align="center">set</td><td align="center">可变</td><td align="center">不可重复</td><td align="center">无序</td><td align="center">{}</td></tr></tbody></table><ul><li>函数</li></ul><p>函数会额外创建一个空间用于储存内部的数据，被调用时在其中创建一个新的空间给变量，优先使用内部变量（局部变量）</p><ul><li>函数的创建</li></ul><p>注意写完后进行输入输出注释，方便他人使用黑盒子</p><p>注意函数名和变量名不可以相同，否则程序可能无法分辨而出错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">函数名</span>(<span class="params">[输入参数],[参数],[参数]</span>):<span class="comment">#其中输入参数为形式参数</span></span><br><span class="line">函数体</span><br><span class="line">[<span class="keyword">return</span> xxx]</span><br></pre></td></tr></table></figure><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220920141253.jpg" alt="QQ截图20220920141253"  /><ul><li>函数调用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">函数名([实际参数])</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cal</span>(<span class="params">a,b</span>):</span><br><span class="line">    xxxx</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"><span class="comment">#位置传递</span></span><br><span class="line">cal(<span class="number">1</span>,<span class="number">2</span>)<span class="comment">#a=1,b=2</span></span><br><span class="line"><span class="comment">#关键字对应传递</span></span><br><span class="line">cal(b=<span class="number">1</span>,a=<span class="number">2</span>)<span class="comment">#a=2,b=1</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;不可变对象在函数体内的修改不会影响实参的值，如对数值的重新赋值</span></span><br><span class="line"><span class="string">可变对象在函数体内的修改会影响到实参的值，如列表的append操作&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>函数的返回值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">return 后可以是表达式也可以是数值</span></span><br><span class="line"><span class="string">如果函数没有返回值，return可以省略</span></span><br><span class="line"><span class="string">函数的返回值如果是一个，直接返回原值</span></span><br><span class="line"><span class="string">函数的返回值如果是多个，返回的结果为元组</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">也可以输入和返回函数jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj</span></span><br><span class="line"><span class="string">如z()</span></span><br><span class="line"><span class="string">def fun(a):</span></span><br><span class="line"><span class="string">return a()</span></span><br><span class="line"><span class="string">fun(z)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>默认值参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;如果没有给b传值，则b默认为10，否则其为传递的值&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cal</span>(<span class="params">a,b=<span class="number">10</span></span>):</span><br><span class="line">    <span class="keyword">if</span> a&gt;=b:</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">c=<span class="number">12</span></span><br><span class="line">d=<span class="number">231</span></span><br><span class="line">cal(a=<span class="number">92</span>,<span class="number">98</span>)<span class="comment">#可以关键字参数和位置形参并用</span></span><br><span class="line"><span class="built_in">print</span>(cal(c))</span><br></pre></td></tr></table></figure><ul><li>函数的参数定义</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;个数可变的位置参数：用*定义可变的位置形参</span></span><br><span class="line"><span class="string">事先无法确定传递的位置实参的个数，结果为一个元组</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">*args</span>):</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">fun(<span class="number">12</span>,<span class="number">32</span>,<span class="number">43</span>,<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;个数可变的关键字参数</span></span><br><span class="line"><span class="string">结果为一个字典，字符串前不需要加引号</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">h</span>(<span class="params">**args</span>):</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">h(a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>,bsgbsg7=<span class="number">1</span>)</span><br><span class="line"><span class="comment">#注：无论是哪种，都只能有一个可变的位置参数或者关键字参数，但在一个函数中可以同时使用两者，要求位置形参在关键字形参之前</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">l</span>(<span class="params">*args,**arg1</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><p>变量的作用域</p></li><li><p>局部变量</p></li></ul><p>函数体内定义的变量</p><ul><li>全局变量</li></ul><p>函数体外定义的变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun3</span>():</span><br><span class="line">    <span class="keyword">global</span> age<span class="comment">#使用global声明将局部变量提升为全局变量</span></span><br><span class="line">    age=<span class="number">19</span></span><br><span class="line">fun3()<span class="comment">#注意要先调用函数才能输出，函数都没调用哪来的age</span></span><br><span class="line"><span class="built_in">print</span>(age)</span><br></pre></td></tr></table></figure><ul><li><p>例1中函数重新定义了x&#x3D;1在自己开辟的内存中，改变x的值为改变局部变量的值，未改变外部x的值，仍为5；例2只访问了x的数值，未进行改变，也未在自己的函数空间内生成x局部变量；例3，函数内部未定义x，但是尝试改变全局变量会报错（只可以访问，不可以改变）<img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220920143156.jpg" alt="QQ截图20220920143156"></p></li><li><p>面向对象</p></li></ul><p>面向对象：事物比较复杂，使用简单的线性思维无法解决</p><p>面向过程：事物比较简单，可以使用线性思维去解决</p><ul><li>类与对象</li></ul><p>类：数据类型</p><p>对象：包含数据（变量，称为特征）和代码（函数，称为方法）的自定义数据结构</p><ul><li>类的创建</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:<span class="comment">#student为类名，首字母大写</span></span><br><span class="line">    place=<span class="string">&#x27;吉林&#x27;</span><span class="comment">#直接写在类里面的对象，称为类属性,该类被所有对象所共享</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):<span class="comment">#初始化</span></span><br><span class="line">        self.name=name<span class="comment">#self.name称为实体属性，进行了一个赋值的操作，将局部变量name的值赋给实体属性</span></span><br><span class="line">        self.age=age</span><br><span class="line"></span><br><span class="line">    <span class="comment">#实例方法（在类之外定义的称为函数，类之内定义的称为方法）</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):<span class="comment">#必须要有self，实例方法传的是实例对象self</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;xuexi&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#静态方法</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">method</span>():<span class="comment">#不允许写self</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;staticmethod&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#类方法</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cm</span>(<span class="params">cls</span>):<span class="comment">#class</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;class&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Student为一个类对象，开了内存空间，有数值和类型</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(Student),<span class="built_in">type</span>(Student),Student)</span><br></pre></td></tr></table></figure><ul><li>对象的创建（类的实例化）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Student为类对象,stu1为实例对象</span></span><br><span class="line">stu1=Student(<span class="string">&#x27;zhangsan &#x27;</span>,<span class="number">18</span>)</span><br><span class="line"><span class="built_in">print</span>(stu1,<span class="built_in">id</span>(stu1),<span class="built_in">type</span>(stu1))<span class="comment">#stu1的值表示其内存地址</span></span><br><span class="line">stu1.eat()</span><br><span class="line"><span class="built_in">print</span>(stu1.name,stu1.age,stu1.place)<span class="comment">#调用输出</span></span><br><span class="line"></span><br><span class="line">Student.eat(stu1)   <span class="comment">#stu1.eat()相同，都是调用Student中的eat方</span></span><br><span class="line"><span class="comment">#stu1对应self，要求传入类的对象；类名.方法名(类的对象)——实际就是方法定义处的self</span></span><br></pre></td></tr></table></figure><ul><li>类属性，类方法，静态方法的使用方式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#类属性的使用方式</span></span><br><span class="line">stu1=Student(<span class="string">&#x27;d&#x27;</span>,<span class="number">123</span>)</span><br><span class="line">stu2=Student(<span class="string">&#x27;sd&#x27;</span>,<span class="number">12</span>)</span><br><span class="line"><span class="built_in">print</span>(stu1.place,stu2.place)</span><br><span class="line">Student.place=<span class="string">&#x27;湖北&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(stu1.place,stu2.place)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">类的实例对象都包含一个类指针，指向类对象，修改类对象也会影响类的实例对象</span></span><br><span class="line"><span class="string">吉林 吉林</span></span><br><span class="line"><span class="string">湖北 湖北</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#类方法的使用方式</span></span><br><span class="line">Student.cm()<span class="comment">#调用时不需要传入cls默认参数</span></span><br><span class="line"><span class="comment">#静态方法的使用方式</span></span><br><span class="line">Student.method()</span><br></pre></td></tr></table></figure><ul><li>绑定添加属性和方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">St</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):<span class="comment">#初始化中的属性是所有实例对象都有的属性</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):<span class="comment">#实例方法</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;eat&#x27;</span>)</span><br><span class="line"></span><br><span class="line">stu3=St(<span class="string">&#x27;bsg&#x27;</span>,<span class="number">12</span>)</span><br><span class="line">stu4=St(<span class="string">&#x27;jsh&#x27;</span>,<span class="number">83</span>)</span><br><span class="line">stu3.gender=<span class="string">&#x27;male&#x27;</span>      <span class="comment">#为stu3绑定添加属性</span></span><br><span class="line"><span class="built_in">print</span>(stu3.name,stu3.age, stu3.gender)</span><br><span class="line"><span class="built_in">print</span>(stu4.name,stu4.age)</span><br><span class="line">stu3.eat()</span><br><span class="line">stu4.eat()</span><br><span class="line"><span class="comment">#动态绑定方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;定义在类之外的称为函数&#x27;</span>)</span><br><span class="line">stu3.show=show      <span class="comment">#为stu3绑定添加方法</span></span><br><span class="line">stu3.show()</span><br></pre></td></tr></table></figure><p><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220920202855.jpg" alt="QQ截图20220920202855"></p><ul><li>总结</li></ul><p>编程思想：</p><p>​面向对象</p><p>​面向过程</p><p>类对象（class）：</p><p>​类属性</p><p>​类方法</p><p>​静态方法</p><p>​实例方法</p><p>（可以类名传入对象调用Student.eat(stu1)，也可以对象名.调用stu1.eat()）</p><p>实例对象：</p><p>​类名（）创建实例对象</p><p>​动态绑定属性</p><p>​动态绑定方法</p><ul><li><p>面向对象的三大特征</p><p>  封装：将属性和方法包装到类对象中；如果不希望该属性在类对象的外部被访问，前边使用两个’_’</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">m=seFast.StateEstimator(cellSSM)</span><br><span class="line">print  &#x27;123&#x27;,m</span><br><span class="line">m.start()</span><br><span class="line">print  &#x27;123&#x27;,m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###seFast.StateEstimator(cellSSM)仍然是一个class，即使传了参数cellSSM也不是一个实例，上面的地址前后一致，下方的地址前后不一致</span><br><span class="line"></span><br><span class="line">print seFast.StateEstimator(cellSSM)</span><br><span class="line">seFast.StateEstimator(cellSSM).start()</span><br><span class="line">print seFast.StateEstimator(cellSSM).start()</span><br><span class="line">print seFast.StateEstimator(cellSSM)</span><br><span class="line">return seFast.StateEstimator(cellSSM)</span><br><span class="line"></span><br></pre></td></tr></table></figure>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.__age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.name,self.__age)</span><br><span class="line"></span><br><span class="line">stu1=Student(<span class="string">&#x27;bsgbsg7&#x27;</span>,<span class="number">19</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(stu1))</span><br><span class="line"><span class="comment">#print(stu1.name,stu1.__age)</span></span><br><span class="line"><span class="built_in">print</span>(stu1._Student__age)</span><br><span class="line">stu1.show()：</span><br></pre></td></tr></table></figure><p>  继承：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">子类类名</span>（父类<span class="number">1</span>，父类<span class="number">2.</span>..）:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">如果一个类没有继承任何类，则默认继承object</span></span><br><span class="line"><span class="string">定义子类时，必须在其构造函数中调用父类的构造函数</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.__age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.name,self.__age)</span><br><span class="line"></span><br><span class="line">stu1=Student(<span class="string">&#x27;bsgbsg7&#x27;</span>,<span class="number">19</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(stu1))<span class="comment">#dir用于查看所有属性和方法</span></span><br><span class="line"><span class="comment">#print(stu1.name,stu1.__age)</span></span><br><span class="line"><span class="built_in">print</span>(stu1._Student__age)</span><br><span class="line">stu1.show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pro</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.name,self.age)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Pro</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,number</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name,age)</span><br><span class="line">        self.number=number</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>(<span class="title class_ inherited__">Pro</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,year</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name,age)</span><br><span class="line">        self.year=year</span><br><span class="line"></span><br><span class="line">stu1=Student(<span class="string">&#x27;bsgbsg&#x27;</span>,<span class="number">12</span>,<span class="number">2</span>)</span><br><span class="line">tea1=Teacher(<span class="string">&#x27;nds&#x27;</span>,<span class="number">19</span>,<span class="number">29</span>)</span><br><span class="line">stu1.info()</span><br><span class="line">tea1.info()</span><br></pre></td></tr></table></figure><p>  <img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220921155049.jpg" alt="QQ截图20220921155049"></p><p>  <img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220921155706.jpg" alt="QQ截图20220921155706"></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(A,B):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>  方法重写</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Pro</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,number</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name,age)</span><br><span class="line">        self.number=number</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self</span>):<span class="comment">#方法重写，可以类比变量作用域理解</span></span><br><span class="line">        <span class="built_in">super</span>().info()<span class="comment">#希望调用父类中的方法</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;学号：&#x27;</span>,self.number)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>(<span class="title class_ inherited__">Pro</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,year</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name,age)</span><br><span class="line">        self.year=year</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().info()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;教龄：&#x27;</span>,self.year)</span><br></pre></td></tr></table></figure><p>  object类</p><p>  是所有类的父类，所有类都有object的属性和方法</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;我的名字是&#123;0&#125;，今年&#123;1&#125;岁了&#x27;</span>.<span class="built_in">format</span>(self.name,self.age)</span><br><span class="line">stu=Student(<span class="string">&#x27;zhangsan&#x27;</span>,<span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(stu))</span><br><span class="line"><span class="built_in">print</span>(stu)<span class="comment">#默认调用__str__()方法，返回内存地址；重写后输出自己写的东西，经常用于返回对象的描述</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(stu))</span><br></pre></td></tr></table></figure><p>  多态：提高程序得到可扩展性和可维护性</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>(<span class="title class_ inherited__">Object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;eat&#x27;</span>)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):<span class="comment">#重写了父类中的方法</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;狗&#x27;</span>)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;猫&#x27;</span>)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Per</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;人&#x27;</span>)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">animal</span>):</span><br><span class="line">animal.eat()<span class="comment">#调用该对象的eat方法</span></span><br><span class="line"></span><br><span class="line">eat(Per())<span class="comment">#即使Per没有继承父类，但只要有eat方法就可以使用</span></span><br></pre></td></tr></table></figure><p>  特殊属性</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;我的名字是&#123;0&#125;，今年&#123;1&#125;岁了&#x27;</span>.<span class="built_in">format</span>(self.name,self.age)</span><br><span class="line">stu=Student(<span class="string">&#x27;zhangsan&#x27;</span>,<span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(stu))</span><br><span class="line"><span class="built_in">print</span>(stu)<span class="comment">#默认调用__str__()方法，返回内存地址；重写后输出自己写的东西，经常用于返回对象的描述</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(stu))</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;对象.__dict__返回一个字典，查看对象属性&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(A,B):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">c=C(<span class="string">&#x27;bsgbsg7&#x27;</span>,<span class="number">19</span>)</span><br><span class="line"><span class="built_in">print</span>(c.__dict__)<span class="comment">#返回实例对象的属性</span></span><br><span class="line"><span class="built_in">print</span>(C.__dict__)<span class="comment">#返回类对象的属性和方法，方法只在类对象中，实例对象只可以调用</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(c.__class__)<span class="comment">#x.__class__输出对象所属于的类</span></span><br><span class="line"><span class="built_in">print</span>(C.__bases__)<span class="comment">#C类与父类的元素，C只可以是类，不可以是实例对象</span></span><br><span class="line"><span class="built_in">print</span>(C.__base__)<span class="comment">#输出一个，谁写在前面输出谁</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(C.__mro__)<span class="comment">#类的层次结构</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(A.__subclasses__())<span class="comment">#A的子类列表，注意后面还有个括号</span></span><br></pre></td></tr></table></figure><p>  特殊方法</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">20</span></span><br><span class="line">b=<span class="number">18</span></span><br><span class="line">c=a+b</span><br><span class="line">d=a.__add__(b)</span><br><span class="line"><span class="built_in">print</span>(c,d)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;+运算对应__add__()方法&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__add__</span>(<span class="params">self,other</span>):</span><br><span class="line">        <span class="keyword">return</span> self.name+other.name</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;len()函数对应__len__()方法&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.name)</span><br><span class="line"></span><br><span class="line">stu1=Student(<span class="string">&#x27;bsg&#x27;</span>)</span><br><span class="line">stu2=Student(<span class="string">&#x27;bsg7&#x27;</span>)</span><br><span class="line"></span><br><span class="line">stu3=stu1+stu2</span><br><span class="line"><span class="built_in">print</span>(stu3)<span class="comment">#通过修改Student类中的add特殊方法使量对象可以相加</span></span><br><span class="line">s=stu1.__add__(stu2)</span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(stu1),stu1.__len__())</span><br></pre></td></tr></table></figure><p>  <img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220923151820.jpg" alt="QQ截图20220923151820"></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        obj=<span class="built_in">super</span>().__new__(cls)</span><br><span class="line">        <span class="keyword">return</span> obj</span><br><span class="line"></span><br><span class="line">st=Student(<span class="string">&#x27;bsgbsg&#x27;</span>,<span class="number">19</span>)</span><br><span class="line"><span class="built_in">print</span>(st.__class__)<span class="comment">#&lt;class &#x27;__main__.Student&#x27;&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>加速递归</p></li></ul><p><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220927142051.jpg" alt="QQ截图20220927142051"></p><p><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220927142215.jpg" alt="QQ截图20220927142215"></p><p><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220927144400.jpg" alt="QQ截图20220927144400"></p><p><img src="E:\Files\Projects\Python学习\学习笔记\image\QQ截图20220927144841.jpg" alt="QQ截图20220927144841"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;EECS课程前期学习Python的笔记&lt;/p&gt;
&lt;p&gt;***self.p&amp;#x3D;float(p)***，注意用float改变精度，防止精度损失&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;range函数&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Open Innovation（software）</title>
    <link href="http://example.com/2023/05/07/open-innovation(1)/"/>
    <id>http://example.com/2023/05/07/open-innovation(1)/</id>
    <published>2023-05-07T02:31:04.919Z</published>
    <updated>2023-05-07T08:38:08.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-选题与要求"><a href="#1-选题与要求" class="headerlink" title="1.选题与要求"></a>1.选题与要求</h2><h3 id="个人图书馆"><a href="#个人图书馆" class="headerlink" title="个人图书馆"></a>个人图书馆</h3><blockquote><p>需求：<br>（1）实现图书的增删改查；图书的信息包括：id, 书名、出版社、分类号、ISBN号、出版日期、价格、购买日期；可以按照书名、出版社等检索分页展示图书列表<br>（2）实现简单的借出、归还管理。（图书表可以增加是否在架字段）<br>同时要有借还日志(增加一个借还历史表，每次借和还占用一条记录，字段有：图书的id，借出时间、归还时间、借阅人)<br>（3）借还历史日志的分页查询展示</p></blockquote><h3 id="考核内容"><a href="#考核内容" class="headerlink" title="考核内容"></a>考核内容</h3><blockquote><p>每个学生选择一个题目，不分组<br>1、学会编写软件需求分析文档、软件详细设计文档<br>2、掌握后端软件开发方法，熟悉 java 和 IDEA 开发环境<br>3、掌握前端软件开发方法，熟悉 vscode 环境，熟悉 typescript 语言和 react 框架<br>4、熟练使用git版本管理工具</p><p>提交内容：<br>软件需求分析文档、软件详细设计文档、源代码、答辩PPT</p></blockquote><h2 id="2-后端学习"><a href="#2-后端学习" class="headerlink" title="2.后端学习"></a>2.后端学习</h2><h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><ul><li><p>MySQL设计表</p></li><li><p>generatorConfig.xml添加table信息</p></li><li><p>run maven</p></li><li><p>service中添加interface</p></li><li><p>impl.java中添加java类</p></li><li><p>添加对应controller 类</p></li></ul><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><ul><li><p>浏览器按F12进入开发者模式</p></li><li><p>前端向后端发送的请求格式</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;current&quot;:1,&quot;pageSize&quot;:20,&quot;departmentName&quot;:&quot;通信&quot;&#125;</span><br></pre></td></tr></table></figure><p>  表示请求当前页面，页面大小和部门名称</p><ul><li>后端向前端发送的JSON数据格式</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    code<span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    data<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      current<span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      pageSize<span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      total<span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      list<span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          id<span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          departmentName<span class="punctuation">:</span> <span class="string">&quot;通信所3444&quot;</span><span class="punctuation">,</span></span><br><span class="line">          contact<span class="punctuation">:</span> <span class="string">&quot;张三&quot;</span><span class="punctuation">,</span></span><br><span class="line">          contactPhone<span class="punctuation">:</span> <span class="string">&quot;ddd&quot;</span><span class="punctuation">,</span></span><br><span class="line">          description<span class="punctuation">:</span> <span class="string">&quot;这是一条备注&quot;</span><span class="punctuation">,</span></span><br><span class="line">          createdAt<span class="punctuation">:</span> <span class="string">&quot;2019-12-03 17:31:28&quot;</span><span class="punctuation">,</span></span><br><span class="line">          updatedAt<span class="punctuation">:</span> <span class="string">&quot;2023-03-03 10:36:23&quot;</span><span class="punctuation">,</span></span><br><span class="line">          createdBy<span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          createdByDesc<span class="punctuation">:</span> <span class="string">&quot;管理员&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          id<span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          departmentName<span class="punctuation">:</span> <span class="string">&quot;通信所&quot;</span><span class="punctuation">,</span></span><br><span class="line">          contact<span class="punctuation">:</span> <span class="string">&quot;张三&quot;</span><span class="punctuation">,</span></span><br><span class="line">          contactPhone<span class="punctuation">:</span> <span class="string">&quot;1532384234234&quot;</span><span class="punctuation">,</span></span><br><span class="line">          description<span class="punctuation">:</span> <span class="string">&quot;这是一条备注&quot;</span><span class="punctuation">,</span></span><br><span class="line">          createdAt<span class="punctuation">:</span> <span class="string">&quot;2019-12-03 17:48:06&quot;</span><span class="punctuation">,</span></span><br><span class="line">          updatedAt<span class="punctuation">:</span> <span class="string">&quot;2023-03-03 10:36:29&quot;</span><span class="punctuation">,</span></span><br><span class="line">          createdBy<span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          createdByDesc<span class="punctuation">:</span> <span class="string">&quot;管理员&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    message<span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    success<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span>;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">- 后端中controller中的</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">  Page&lt;DepartmentVO&gt; </span><br></pre></td></tr></table></figure><p>  分页数据，返回模板类&#x2F;泛化类的数据，Page类表示返回的Json数据格式中的内容</p><ul><li>前端向后端发送的查询内容由 DepartmentQueryDTO 类接收</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listDepartment(<span class="meta">@RequestBody</span> DepartmentQueryDTO queryDTO)</span><br></pre></td></tr></table></figure><ul><li>模糊查询</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">queryDTO.setDepartmentName(FormatUtils.makeFuzzySearchTerm(queryDTO.getDepartmentName()));</span><br></pre></td></tr></table></figure><p>  注意MyBatis 自动生成的Mapper类</p><p>  <strong>Mapper.xml里，要添加count的SQL定义</strong></p><ul><li>MySQL查询记录语句</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from department；</span><br><span class="line">select count(*) from department where department_name like &#x27;%通信%&#x27;;</span><br></pre></td></tr></table></figure><ul><li>Mybatis</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;where&gt;</span><br><span class="line">    &lt;if test=&quot;departmentName != null&quot;&gt;</span><br><span class="line">    department_name like #&#123;departmentName&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">&lt;/where&gt;</span><br></pre></td></tr></table></figure><p>  不是NULL，则有输入过滤条件。</p><p>  #{departmentName}会将departmentName内容替换到MySQL语句中，若有多个逻辑条件，则用and逻辑与</p><ul><li>利用myBatis到数据库中查询数据，以分页的方式</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据查询条件获取部门列表</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> queryDTO 查询条件</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> offset   开始位置</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> limit    记录数量</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> 部门列表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">List&lt;Department&gt; <span class="title function_">list</span><span class="params">(</span></span><br><span class="line"><span class="params">    <span class="meta">@Param(&quot;queryDTO&quot;)</span> DepartmentQueryDTO queryDTO,</span></span><br><span class="line"><span class="params">    <span class="meta">@Param(&quot;offset&quot;)</span> Integer offset,</span></span><br><span class="line"><span class="params">    <span class="meta">@Param(&quot;limit&quot;)</span> Integer limit</span></span><br><span class="line"><span class="params">)</span>;</span><br></pre></td></tr></table></figure><ul><li>将Department对象转VO对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将实体对象转换为VO对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> department 实体对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nameMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> VO对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> DepartmentVO <span class="title function_">convertToVO</span><span class="params">(Department department, Map&lt;Integer, String&gt; nameMap)</span> &#123;</span><br><span class="line">        <span class="type">DepartmentVO</span> <span class="variable">departmentVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DepartmentVO</span>();</span><br><span class="line">        <span class="comment">//把第一个对象的字段，复制到第二个对象，前提要求是字段必须对应</span></span><br><span class="line">        BeanUtils.copyProperties(department, departmentVO);</span><br><span class="line"></span><br><span class="line">        departmentVO.setCreatedByDesc(nameMap.get(department.getCreatedBy()));</span><br><span class="line">        <span class="keyword">return</span> departmentVO;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>IDEA F8单步执行Run over  F7 Run into</li></ul><h3 id="避免重复创建部门"><a href="#避免重复创建部门" class="headerlink" title="避免重复创建部门"></a>避免重复创建部门</h3><ol><li><h4 id="dao中创建Mapper类"><a href="#dao中创建Mapper类" class="headerlink" title="dao中创建Mapper类"></a>dao中创建Mapper类</h4></li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Department <span class="title function_">getByName</span><span class="params">(<span class="meta">@Param(&quot;name&quot;)</span>String name)</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li><h4 id="xml中添加"><a href="#xml中添加" class="headerlink" title="xml中添加"></a>xml中添加</h4></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 获取名字 --&gt;</span><br><span class="line">    &lt;select id=&quot;getByName&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">        select  *</span><br><span class="line">        from department</span><br><span class="line">        where department_name = *&#123;name&#125;</span><br><span class="line">    &lt;/select&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li><h4 id="Impl中添加Assert"><a href="#Impl中添加Assert" class="headerlink" title="Impl中添加Assert"></a>Impl中添加Assert</h4></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Assert.isNull(departmentMapper.getByName(departmentDTO.getDepartmentName()),<span class="string">&quot;部门已经存在&quot;</span>);</span><br></pre></td></tr></table></figure><p>​     </p><h2 id="3-前端学习"><a href="#3-前端学习" class="headerlink" title="3.前端学习"></a>3.前端学习</h2><p>只看java基本语法，能够在项目中写代码即可</p><h3 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h3><ol><li><h4 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h4></li></ol><blockquote><p>c: int add(int a, int b);<br>ts:  function add(a: number, b: number);<br>ts: 数据类型：number(数字类型，3, 5.2), string, boolean, …</p><p>箭头函数是没有名字的<br>Typescript &#x3D;&gt; javascript &#x3D;&gt; 在浏览器中运行<br>chrome V8 js引擎，单进程单线程里run的<br>异步函数： 非阻塞 </p></blockquote><ol start="2"><li><h4 id="定义一个回调函数"><a href="#定义一个回调函数" class="headerlink" title="定义一个回调函数"></a>定义一个回调函数</h4></li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个Delete的回调函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleDelete</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (!selectedRowKeys?.<span class="property">length</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title function_">openConfirm</span>(<span class="string">`您确定删除<span class="subst">$&#123;selectedRowKeys.length&#125;</span>条记录吗`</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="comment">// await deleteBook(selectedRowKeys);</span></span><br><span class="line">        refAction.<span class="property">current</span>?.<span class="title function_">reload</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="3"><li><h4 id="声明变量与方法"><a href="#声明变量与方法" class="headerlink" title="声明变量与方法"></a>声明变量与方法</h4></li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明两个常量，变量名为selectedRowKeys，改变变量值的方法为selectRow</span></span><br><span class="line"><span class="keyword">const</span> [selectedRowKeys, selectRow] = useState&lt;<span class="built_in">number</span>[]&gt;([]);</span><br><span class="line"><span class="comment">//声明页面级状态变量，将变量传递给对话框，&lt;&gt;内表示是什么类型的数据，()为空表示不对其初始化</span></span><br><span class="line"><span class="keyword">const</span> [book, setBook] = useState&lt;<span class="variable constant_">API</span>.<span class="property">BookVO</span>&gt;();</span><br></pre></td></tr></table></figure><ol start="4"><li><h4 id="以异步非阻塞方式运行"><a href="#以异步非阻塞方式运行" class="headerlink" title="以异步非阻塞方式运行"></a>以异步非阻塞方式运行</h4></li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">myfunc</span>();</span><br></pre></td></tr></table></figure><ol start="5"><li><h4 id="回调式"><a href="#回调式" class="headerlink" title="回调式"></a>回调式</h4></li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">myfunc</span>().<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data）；</span><br><span class="line"><span class="title function_">myFunc2</span>().<span class="title function_">then</span>(<span class="function"><span class="params">d</span>=&gt;</span>&#123;</span><br><span class="line">   <span class="comment">//...</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="6"><li><h4 id="异步函数的执行方式"><a href="#异步函数的执行方式" class="headerlink" title="异步函数的执行方式"></a>异步函数的执行方式</h4></li></ol><p><strong>注意只有外部是async异步函数的时候才可以在内部使用await</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">myfff</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">myfunc</span>();</span><br><span class="line"></span><br><span class="line">   <span class="comment">///....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li><h4 id="分页展示数据结果集的antd-pro"><a href="#分页展示数据结果集的antd-pro" class="headerlink" title="分页展示数据结果集的antd pro"></a>分页展示数据结果集的antd pro</h4></li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">ProTable</span>&lt;<span class="variable constant_">API</span>.<span class="property">DepartmentVO</span>&gt; </span><br></pre></td></tr></table></figure><ol start="8"><li><h4 id="刷新操作"><a href="#刷新操作" class="headerlink" title="刷新操作"></a>刷新操作</h4></li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> refAction = useRef&lt;<span class="title class_">ActionType</span>&gt;(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">refAction.<span class="property">current</span>?.<span class="title function_">reload</span>();</span><br></pre></td></tr></table></figure><ol start="9"><li><h4 id="ProTable存储数据"><a href="#ProTable存储数据" class="headerlink" title="ProTable存储数据"></a>ProTable存储数据</h4></li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//params为分页信息，protable自动将params传递给listBook，</span></span><br><span class="line"><span class="comment">//数据由convertPageData转换为antd protable的数据格式</span></span><br><span class="line">request=&#123;<span class="keyword">async</span> (params = &#123;&#125;) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">convertPageData</span>(<span class="keyword">await</span> <span class="title function_">listBook</span>(params));</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><ol start="10"><li><h4 id="模态对话框显示数据"><a href="#模态对话框显示数据" class="headerlink" title="模态对话框显示数据"></a>模态对话框显示数据</h4></li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置book为当前record，并且使对话框可视化</span></span><br><span class="line"><span class="attr">render</span>: <span class="function">(<span class="params">dom, record</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">a</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">        setBook(record);</span></span><br><span class="line"><span class="language-xml">        setVisible(true);</span></span><br><span class="line"><span class="language-xml">    &#125;&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml">        &#123;dom&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">InputDialog</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">//<span class="attr">接收book数据</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">detailData</span>=<span class="string">&#123;book&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">onClose</span>=<span class="string">&#123;(result)</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">    setVisible(false);</span></span><br><span class="line"><span class="language-xml">    result &amp;&amp; refAction.current?.reload();</span></span><br><span class="line"><span class="language-xml">&#125;&#125;</span></span><br><span class="line"><span class="language-xml">visible=&#123;visible&#125;</span></span><br><span class="line"><span class="language-xml">/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><blockquote><p>页面级状态发生变化的时候<br>重新渲染</p><p>页面被加载的时候，第一次执行你的渲染函数<br>React巧妙的技术</p><p>useEffect开始会执行一次</p><p>当数组中的变量变化时，useEffect会被调用</p><p>useModel: 应用级状态，所有页面模块可共享。页面刷新或关闭浏览器后消失 umi useModal</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">waitTime</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">setFieldsValue</span>(props.<span class="property">detailData</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">resetFields</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, [    变量    ]);</span><br></pre></td></tr></table></figure><h3 id="npm安装"><a href="#npm安装" class="headerlink" title="npm安装"></a>npm安装</h3><ol><li><p>更换淘宝源之后npm install还会报错</p></li><li><p>即使使用清除命令也会报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">清理缓存命令：</span><br><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure></li><li><p>手动删除缓存目录中的全部内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\bsgbs\AppData\Local\npm-cache</span><br></pre></td></tr></table></figure></li><li><p>再次运行npm install即可完成安装</p></li></ol><h3 id="OpenAPI运行出错"><a href="#OpenAPI运行出错" class="headerlink" title="OpenAPI运行出错"></a>OpenAPI运行出错</h3><p>装好依赖之后发现运行OpenAPI会报错</p><h4 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h4><ol><li><p>删除安装目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\Files\Projects\CXCollege\software\frontend\web-frontend-master\web-frontend\node_modules</span><br></pre></td></tr></table></figure></li><li><p>重装npn install</p></li><li><p>运行后端之后，再次尝试npm run openapi成功运行</p></li></ol><hr><ol><li>使用Navicat新建book表格</li></ol><p><img src="E:\Files\Projects\CXCollege\software\Image\1.png" alt="1"></p><p>2.generatorConfig.xml添加table信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;book&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Book&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.run maven</p><p>4.service中添加interface</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.TestDTO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(BookDTO bookDTO)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.impl中添加java类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dao.BookMapper;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.BookDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.Book;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.BookService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookMapper bookMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(BookDTO bookDTO)</span> &#123;</span><br><span class="line">        <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Book</span>();</span><br><span class="line">        book.setBookName(bookDTO.getBook_name());</span><br><span class="line">        book.setIsbn(bookDTO.getISBN());</span><br><span class="line">        book.setBookAuthor(bookDTO.getBook_author());</span><br><span class="line">        book.setBookPublish(bookDTO.getBook_publish());</span><br><span class="line">        book.setBookPrice(bookDTO.getBook_price());</span><br><span class="line">        book.setBookType(bookDTO.getBook_type());</span><br><span class="line">        book.setBookLocation(bookDTO.getBook_location());</span><br><span class="line">        bookMapper.insert(book);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5.添加对应controller 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.annotation.NeedNoPrivilege;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.BookDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.BookService;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/book&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookService bookService;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;addRecord&quot;)</span></span><br><span class="line">    <span class="meta">@NeedNoPrivilege</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addRecord</span><span class="params">(<span class="meta">@RequestBody</span> BookDTO bookDTO)</span>&#123;</span><br><span class="line">        bookService.insert(bookDTO);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6.添加DTO类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDTO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String Book_name;</span><br><span class="line">    <span class="keyword">private</span> String ISBN;</span><br><span class="line">    <span class="keyword">private</span> String Book_author;</span><br><span class="line">    <span class="keyword">private</span> String Book_publish;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal Book_price;</span><br><span class="line">    <span class="keyword">private</span> String Book_type;</span><br><span class="line">    <span class="keyword">private</span> String Book_location;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span>：引用其他组件</span><br><span class="line"><span class="meta">@Data</span>的使用： lombok，自动生成getter和setter</span><br><span class="line"><span class="meta">@Slf4j</span>的使用：日志。可以直接用log.debug, log.error等</span><br><span class="line"><span class="meta">@Service</span>:  业务服务组件。这个组件可以访问数据库</span><br><span class="line"><span class="meta">@RestController</span>:  控制器组件</span><br><span class="line"><span class="meta">@GetMapping</span>和<span class="meta">@PostMapping</span>:  控制器方法注解，指定URL路径</span><br><span class="line"><span class="meta">@NeedNoToken</span>:  不需要登录即可访问的方法</span><br></pre></td></tr></table></figure><h2 id="4-个人图书馆"><a href="#4-个人图书馆" class="headerlink" title="4.个人图书馆"></a>4.个人图书馆</h2><p>图书信息表 <em>book</em></p><table><thead><tr><th>字段名称</th><th>数据类型</th><th>索引</th><th>样例</th><th>说明</th></tr></thead><tbody><tr><td>book_id</td><td>int(10)</td><td>Primary Key</td><td>1234</td><td>书籍ID</td></tr><tr><td>book_name</td><td>char(20)</td><td></td><td>马原</td><td>书籍名称</td></tr><tr><td>isbn</td><td>char(13)</td><td></td><td>1234567891234</td><td>ISBN</td></tr><tr><td>book_author</td><td>char(10)</td><td></td><td>作者</td><td>书籍作者</td></tr><tr><td>book_publish</td><td>char(20)</td><td></td><td>山大出版社</td><td>书籍出版社</td></tr><tr><td>book_price</td><td>double(20,2)</td><td></td><td>30.23</td><td>书籍价格</td></tr><tr><td>book_type</td><td>char(20)</td><td></td><td></td><td>书籍类型</td></tr><tr><td>book_boutime</td><td>datetime</td><td></td><td></td><td>购买时间</td></tr><tr><td>book_pubtime</td><td>datetime</td><td></td><td></td><td>出版时间</td></tr></tbody></table><h3 id="基本页面框架"><a href="#基本页面框架" class="headerlink" title="基本页面框架"></a>基本页面框架</h3><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><ul><li><h4 id="增加接口"><a href="#增加接口" class="headerlink" title="增加接口"></a>增加接口</h4></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.BookDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.query.BookQueryDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.Page;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.vo.BookVO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(BookDTO bookDTO)</span>;</span><br><span class="line">    Page&lt;BookVO&gt; <span class="title function_">listByPage</span><span class="params">(BookQueryDTO queryDTO)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="Impl中实现Service"><a href="#Impl中实现Service" class="headerlink" title="Impl中实现Service"></a>Impl中实现Service</h4></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dao.BookMapper;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.BookDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.query.BookQueryDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.Book;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.Page;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.AdminService;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.BookService;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.utils.BookUtils;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.utils.FormatUtils;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.utils.PageUtils;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.vo.BookVO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookMapper bookMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AdminService adminService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(BookDTO bookDTO)</span> &#123;</span><br><span class="line">        <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Book</span>();</span><br><span class="line">        book.setBookName(bookDTO.getBookName());</span><br><span class="line">        book.setIsbn(bookDTO.getISBN());</span><br><span class="line">        book.setBookAuthor(bookDTO.getBookAuthor());</span><br><span class="line">        book.setBookPublish(bookDTO.getBookPublish());</span><br><span class="line">        book.setBookPrice(bookDTO.getBookPrice());</span><br><span class="line">        book.setBookType(bookDTO.getBookType());</span><br><span class="line">        book.setBookBoutime(bookDTO.getBookBoutime());</span><br><span class="line">        book.setBookPubtime(bookDTO.getBookPubtime());</span><br><span class="line">        bookMapper.insert(book);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Page&lt;BookVO&gt; <span class="title function_">listByPage</span><span class="params">(BookQueryDTO queryDTO)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (queryDTO == <span class="literal">null</span>) &#123;</span><br><span class="line">            queryDTO = <span class="keyword">new</span> <span class="title class_">BookQueryDTO</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//模糊查询</span></span><br><span class="line">        queryDTO.setBookName(FormatUtils.makeFuzzySearchTerm(queryDTO.getBookName()));</span><br><span class="line">        <span class="comment">//将查询条件发送给dao接口，先查询命中个数</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">size</span> <span class="operator">=</span> bookMapper.count(queryDTO);</span><br><span class="line">        <span class="type">PageUtils</span> <span class="variable">pageUtils</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(queryDTO.getCurrent(), queryDTO.getPageSize(), size);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 没有命中，则返回空数据。</span></span><br><span class="line">            <span class="keyword">return</span> pageUtils.getNullPage();</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;Book&gt; list = bookMapper.list(queryDTO, pageUtils.getOffset(), pageUtils.getLimit());</span><br><span class="line">        Set&lt;String&gt; adminIds = list.stream().map(Book::getBookName).collect(Collectors.toSet());</span><br><span class="line">        adminIds.addAll(list.stream().map(Book::getBookAuthor).collect(Collectors.toSet()));</span><br><span class="line">        <span class="comment">//Map&lt;String, String&gt; nameMap = adminService.getNameMap(adminIds);</span></span><br><span class="line"></span><br><span class="line">        List&lt;BookVO&gt; voList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Book book : list) &#123;</span><br><span class="line">            <span class="type">BookVO</span> <span class="variable">vo</span> <span class="operator">=</span> BookUtils.convertToVO(book);</span><br><span class="line">            voList.add(vo);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//按照前端支持的格式返回给前端</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(pageUtils.getCurrent(), pageUtils.getPageSize(), pageUtils.getTotal(), voList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="新增BookUtils-java封装各种功能"><a href="#新增BookUtils-java封装各种功能" class="headerlink" title="新增BookUtils.java封装各种功能"></a>新增BookUtils.java封装各种功能</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.service.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.BookDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.Book;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.utils.FormatUtils;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.vo.BookVO;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookUtils</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 规范并校验bookDTO</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bookDTO 实体对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">validateBook</span><span class="params">(BookDTO bookDTO)</span> &#123;</span><br><span class="line">        FormatUtils.trimFieldToNull(bookDTO);</span><br><span class="line">        Assert.notNull(bookDTO, <span class="string">&quot;书籍数据不能为空&quot;</span>);</span><br><span class="line">        Assert.hasText(bookDTO.getBookName(), <span class="string">&quot;书名不能为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BookVO <span class="title function_">convertToVO</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">        <span class="type">BookVO</span> <span class="variable">bookVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookVO</span>();</span><br><span class="line">        BeanUtils.copyProperties(book, bookVO);</span><br><span class="line">        <span class="keyword">return</span> bookVO;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="在BookMapper-java中添加"><a href="#在BookMapper-java中添加" class="headerlink" title="在BookMapper.java中添加"></a>在BookMapper.java中添加</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Book&gt; <span class="title function_">list</span><span class="params">(<span class="meta">@Param(&quot;queryDTO&quot;)</span> BookQueryDTO queryDTO, <span class="meta">@Param(&quot;offset&quot;)</span> Integer offset, <span class="meta">@Param(&quot;limit&quot;)</span> Integer limit)</span>;</span><br><span class="line"></span><br><span class="line">Integer <span class="title function_">count</span><span class="params">(BookQueryDTO queryDTO)</span>;</span><br></pre></td></tr></table></figure><ul><li><h5 id="xml中添加-1"><a href="#xml中添加-1" class="headerlink" title="xml中添加"></a>xml中添加</h5></li></ul> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 获取名字个数(分页) --&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;count&quot;</span> resultType=<span class="string">&quot;integer&quot;</span>&gt;</span><br><span class="line">  select <span class="title function_">count</span><span class="params">(*)</span></span><br><span class="line">  from book</span><br><span class="line">  &lt;where&gt;</span><br><span class="line">    &lt;<span class="keyword">if</span> test=<span class="string">&quot;bookName != null&quot;</span>&gt;</span><br><span class="line">      book_name like #&#123;bookName&#125;</span><br><span class="line">    &lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">  &lt;/where&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">  </span><br><span class="line">&lt;!-- 获取部门(分页) --&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;list&quot;</span> resultMap=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span><br><span class="line">  select</span><br><span class="line">  &lt;include refid=<span class="string">&quot;Base_Column_List&quot;</span>/&gt;</span><br><span class="line">  from book</span><br><span class="line">  &lt;where&gt;</span><br><span class="line">    &lt;<span class="keyword">if</span> test=<span class="string">&quot;queryDTO.bookName != null&quot;</span>&gt;</span><br><span class="line">      Book_name like #&#123;queryDTO.bookName&#125;</span><br><span class="line">    &lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">  &lt;/where&gt;</span><br><span class="line">  limit #&#123;offset&#125;, #&#123;limit&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><ul><li><h5 id="BookController-java中添加"><a href="#BookController-java中添加" class="headerlink" title="BookController.java中添加"></a>BookController.java中添加</h5></li></ul> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> BookService bookService;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@PostMapping(&quot;listBook&quot;)</span></span><br><span class="line"><span class="meta">@Privilege(&quot;page&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Page&lt;BookVO&gt; <span class="title function_">listBook</span><span class="params">(<span class="meta">@RequestBody</span> BookQueryDTO queryDTO)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> bookService.listByPage(queryDTO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="添加BookQueryDTO-java模糊查询"><a href="#添加BookQueryDTO-java模糊查询" class="headerlink" title="添加BookQueryDTO.java模糊查询"></a>添加BookQueryDTO.java模糊查询</h5></li></ul> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.dto.query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookQueryDTO</span> <span class="keyword">extends</span> <span class="title class_">PageQueryDTO</span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 书籍名称，模糊匹配</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String bookName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><ul><li><h5 id="routes-ts中添加页面路由"><a href="#routes-ts中添加页面路由" class="headerlink" title="routes.ts中添加页面路由"></a>routes.ts中添加页面路由</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        path: &#x27;/base/book&#x27;,</span><br><span class="line">        name: &#x27;book&#x27;,</span><br><span class="line">        component: &#x27;./base/book&#x27;,</span><br><span class="line">        access: &#x27;hasPrivilege&#x27;</span><br><span class="line">      &#125;,</span><br></pre></td></tr></table></figure><ul><li><h5 id="在-src-locales-zh-CN-menu-ts修改维护菜单中文名称"><a href="#在-src-locales-zh-CN-menu-ts修改维护菜单中文名称" class="headerlink" title="在\src\locales\zh-CN\menu.ts修改维护菜单中文名称"></a>在\src\locales\zh-CN\menu.ts修改维护菜单中文名称</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;menu.base.book&#x27;: &#x27;书籍管理&#x27;,</span><br></pre></td></tr></table></figure><ul><li><h5 id="创建-src-pages-base-book-index-tsx"><a href="#创建-src-pages-base-book-index-tsx" class="headerlink" title="创建 \src\pages\base\book\index.tsx"></a>创建 \src\pages\base\book\index.tsx</h5></li></ul><p><img src="E:\Files\Projects\CXCollege\software\Image\2.png" alt="2"></p><ul><li><h5 id="运行Openapi"><a href="#运行Openapi" class="headerlink" title="运行Openapi"></a>运行Openapi</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run openapi</span><br></pre></td></tr></table></figure><ul><li><h5 id="基本框架代码"><a href="#基本框架代码" class="headerlink" title="基本框架代码"></a>基本框架代码</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; deleteBook, listBook &#125; <span class="keyword">from</span> <span class="string">&#x27;@/services/api/book&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; convertPageData &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; openConfirm &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PlusOutlined</span>, <span class="title class_">DeleteOutlined</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/icons&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ActionType</span>, <span class="title class_">PageContainer</span>, <span class="title class_">ProColumns</span>, <span class="title class_">ProTable</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/pro-components&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Button</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRef, useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">InputDialog</span> <span class="keyword">from</span> <span class="string">&#x27;./InputDialog&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> refAction = useRef&lt;<span class="title class_">ActionType</span>&gt;(<span class="literal">null</span>);</span><br><span class="line">  <span class="comment">//声明两个常量，变量名为selectedRowKeys，改变变量值的方法为selectRow</span></span><br><span class="line">  <span class="keyword">const</span> [selectedRowKeys, selectRow] = useState&lt;<span class="built_in">number</span>[]&gt;([]);</span><br><span class="line">  <span class="comment">//声明页面级状态变量，将变量传递给对话框，&lt;&gt;内表示是什么类型的数据，()为空表示不对其初始化</span></span><br><span class="line">  <span class="keyword">const</span> [book, setBook] = useState&lt;<span class="variable constant_">API</span>.<span class="property">BookVO</span>&gt;();</span><br><span class="line">  <span class="keyword">const</span> [visible, setVisible] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="comment">//定义一个Delete的回调函数</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleDelete</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (!selectedRowKeys?.<span class="property">length</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title function_">openConfirm</span>(<span class="string">`您确定删除<span class="subst">$&#123;selectedRowKeys.length&#125;</span>条记录吗`</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="comment">// await deleteBook(selectedRowKeys);</span></span><br><span class="line">      refAction.<span class="property">current</span>?.<span class="title function_">reload</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">columns</span>: <span class="title class_">ProColumns</span>&lt;<span class="variable constant_">API</span>.<span class="property">BookVO</span>&gt;[] = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;ID&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookId&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;书名&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookName&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">render</span>: <span class="function">(<span class="params">dom, record</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">          <span class="language-xml"><span class="tag">&lt;<span class="name">a</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">              setBook(record);</span></span><br><span class="line"><span class="language-xml">              setVisible(true);</span></span><br><span class="line"><span class="language-xml">            &#125;&#125;</span></span><br><span class="line"><span class="language-xml">          &gt;</span></span><br><span class="line"><span class="language-xml">            &#123;dom&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">        );</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;ISBN&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;isbn&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;分类号&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookType&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;作者&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookAuthor&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;出版社&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookPublish&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;出版时间&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookPubtime&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;价格&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookPrice&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;购买时间&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookBoutime&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">PageContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &lt;ProTable<span class="tag">&lt;<span class="name">API.BookVO</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        actionRef=&#123;refAction&#125;</span></span><br><span class="line"><span class="language-xml">        rowKey=&quot;id&quot;</span></span><br><span class="line"><span class="language-xml">        //params为分页信息，protable自动将params传递给listBook，</span></span><br><span class="line"><span class="language-xml">        //数据由convertPageData转换为antd protable的数据格式</span></span><br><span class="line"><span class="language-xml">        request=&#123;async (params = &#123;&#125;) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          return convertPageData(await listBook(params));</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        toolBarRender=&#123;() =&gt; [</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">key</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">              setBook(undefined);</span></span><br><span class="line"><span class="language-xml">              setVisible(true);</span></span><br><span class="line"><span class="language-xml">            &#125;&#125;</span></span><br><span class="line"><span class="language-xml">          &gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">PlusOutlined</span> /&gt;</span> 新建</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Button</span>&gt;</span>,</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">key</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">danger</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onClick</span>=<span class="string">&#123;handleDelete&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">disabled</span>=<span class="string">&#123;!selectedRowKeys?.length&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">DeleteOutlined</span> /&gt;</span> 删除</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Button</span>&gt;</span>,</span></span><br><span class="line"><span class="language-xml">        ]&#125;</span></span><br><span class="line"><span class="language-xml">        columns=&#123;columns&#125;</span></span><br><span class="line"><span class="language-xml">        rowSelection=&#123;&#123;</span></span><br><span class="line"><span class="language-xml">          onChange: (rowKeys) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">            selectRow(rowKeys as number[]);</span></span><br><span class="line"><span class="language-xml">          &#125;,</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      /&gt;</span></span><br><span class="line"><span class="language-xml">      //通过visible控制状态框是否显示</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputDialog</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">detailData</span>=<span class="string">&#123;book&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClose</span>=<span class="string">&#123;(result)</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">          setVisible(false);</span></span><br><span class="line"><span class="language-xml">          result &amp;&amp; refAction.current?.reload();</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        visible=&#123;visible&#125;</span></span><br><span class="line"><span class="language-xml">      /&gt;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">PageContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  );</span></span><br><span class="line"><span class="language-xml">&#125;;</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="完成基本页面显示"><a href="#完成基本页面显示" class="headerlink" title="完成基本页面显示"></a>完成基本页面显示</h5></li></ul><p><img src="E:\Files\Projects\CXCollege\software\Image\6.png" alt="5"></p><hr><h3 id="为Book增加功能"><a href="#为Book增加功能" class="headerlink" title="为Book增加功能"></a>为Book增加功能</h3><h4 id="后端-1"><a href="#后端-1" class="headerlink" title="后端"></a>后端</h4><h5 id="1-addBook"><a href="#1-addBook" class="headerlink" title="1.addBook"></a>1.addBook</h5><ul><li><h5 id="增加接口-1"><a href="#增加接口-1" class="headerlink" title="增加接口"></a>增加接口</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer <span class="title function_">addBook</span><span class="params">(BookDTO bookDTO)</span>;</span><br></pre></td></tr></table></figure><ul><li><h5 id="BookController-java中添加-1"><a href="#BookController-java中添加-1" class="headerlink" title="BookController.java中添加"></a>BookController.java中添加</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;addBook&quot;)</span></span><br><span class="line"><span class="meta">@NeedNoPrivilege</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addBook</span><span class="params">(<span class="meta">@RequestBody</span> BookDTO bookDTO)</span>&#123;</span><br><span class="line">    bookService.addBook(bookDTO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="添加BookQueryDTO-java"><a href="#添加BookQueryDTO-java" class="headerlink" title="添加BookQueryDTO.java"></a>添加BookQueryDTO.java</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.dto.query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookQueryDTO</span> <span class="keyword">extends</span> <span class="title class_">PageQueryDTO</span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 书籍名称，模糊匹配</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    <span class="keyword">private</span> String bookName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="完善Impl实现"><a href="#完善Impl实现" class="headerlink" title="完善Impl实现"></a>完善Impl实现</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">addBook</span><span class="params">(BookDTO bookDTO)</span>&#123;</span><br><span class="line">    <span class="comment">// 校验输入数据正确性</span></span><br><span class="line">    BookUtils.validateBook(bookDTO);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 此处后续可以增加条件</span></span><br><span class="line"><span class="comment">             *   相同名称的书籍可能可以共存（不同ISBN）</span></span><br><span class="line"><span class="comment">             * */</span></span><br><span class="line">    <span class="comment">//        Assert.isNull(bookMapper.getByName(bookDTO.getBook_name()),&quot;书籍已经存在&quot;);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建实体对象，用以保存到数据库</span></span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Book</span>();</span><br><span class="line">    <span class="comment">// 将输入的字段全部复制到实体对象中</span></span><br><span class="line">    BeanUtils.copyProperties(bookDTO, book);</span><br><span class="line">    <span class="comment">// 调用DAO方法保存到数据库表</span></span><br><span class="line">    bookMapper.insert(book);</span><br><span class="line">    <span class="keyword">return</span> book.getBookId();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h6><p>接口地址：book&#x2F;addBook</p><p>请求方法: POST</p><p>入参：</p><table><thead><tr><th>参数名</th><th>参数描述</th><th>数据类型</th><th>必填</th><th>示例&#x2F;备注</th></tr></thead><tbody><tr><td>bookName</td><td>名称</td><td>String</td><td>M</td><td>书名</td></tr><tr><td>isbn</td><td>ISBN</td><td>String</td><td>M</td><td>1234567891234</td></tr><tr><td>bookAuthor</td><td>作者</td><td>String</td><td>M</td><td>作者</td></tr><tr><td>bookPublish</td><td>出版社</td><td>String</td><td>M</td><td>山大</td></tr><tr><td>bookPrice</td><td>价格</td><td>Double</td><td>O</td><td>23.13</td></tr><tr><td>bookPubtime</td><td>出版时间</td><td>String</td><td>O</td><td>2021-08-09</td></tr><tr><td>bookBoutime</td><td>购买时间</td><td>String</td><td>O</td><td>2021-08-09</td></tr><tr><td>bookType</td><td>分类号</td><td>String</td><td>O</td><td>GV943</td></tr></tbody></table><p><strong>出参：</strong>无</p><p>示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span><span class="attr">&quot;success&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>接口描述：</p><p>1、 校验必填项不能为空</p><p>2、 将入参保存至book表各对应字段</p><h6 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h6><p>成功新增信号与系统</p><p><img src="E:\Files\Projects\CXCollege\software\Image\12.png" alt="12"></p><p><img src="E:\Files\Projects\CXCollege\software\Image\13.png" alt="13"></p><h5 id="2-updateBook"><a href="#2-updateBook" class="headerlink" title="2.updateBook"></a>2.updateBook</h5><ul><li><h5 id="增加接口-2"><a href="#增加接口-2" class="headerlink" title="增加接口"></a>增加接口</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer <span class="title function_">updateBook</span><span class="params">(BookDTO bookDTO)</span>;</span><br></pre></td></tr></table></figure><ul><li><h5 id="BookController-java中添加-2"><a href="#BookController-java中添加-2" class="headerlink" title="BookController.java中添加"></a>BookController.java中添加</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;updateBook&quot;)</span></span><br><span class="line"><span class="meta">@Privilege(&quot;update&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">updateBook</span><span class="params">(<span class="meta">@RequestBody</span> BookDTO bookDTO)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> bookService.updateBook(bookDTO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="完善Impl实现-1"><a href="#完善Impl实现-1" class="headerlink" title="完善Impl实现"></a>完善Impl实现</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">updateBook</span><span class="params">(BookDTO bookDTO)</span> &#123;</span><br><span class="line">    <span class="comment">// 校验输入数据正确性</span></span><br><span class="line">    <span class="type">Token</span> <span class="variable">token</span> <span class="operator">=</span> ThreadContextHolder.getToken();</span><br><span class="line">    BookUtils.validateBook(bookDTO);</span><br><span class="line">    Assert.notNull(bookDTO.getBookId(), <span class="string">&quot;书籍id不能为空&quot;</span>);</span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> bookMapper.selectByPrimaryKey(bookDTO.getBookId());</span><br><span class="line">    Assert.notNull(book, <span class="string">&quot;没有找到书籍，Id为：&quot;</span> + bookDTO.getBookId());</span><br><span class="line"></span><br><span class="line">    BeanUtils.copyProperties(bookDTO, book);</span><br><span class="line">    bookMapper.updateByPrimaryKey(book);</span><br><span class="line">    <span class="keyword">return</span> book.getBookId();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h6><p>接口地址：book&#x2F;updateBook</p><p>请求方法: POST</p><p>入参：书籍id</p><table><thead><tr><th>参数名</th><th>参数描述</th><th>数据类型</th><th>必填</th><th>示例&#x2F;备注</th></tr></thead><tbody><tr><td>bookName</td><td>名称</td><td>String</td><td>M</td><td>书名</td></tr><tr><td>isbn</td><td>ISBN</td><td>String</td><td>M</td><td>1234567891234</td></tr><tr><td>bookAuthor</td><td>作者</td><td>String</td><td>M</td><td>作者</td></tr><tr><td>bookPublish</td><td>出版社</td><td>String</td><td>M</td><td>山大</td></tr><tr><td>bookPrice</td><td>价格</td><td>Double</td><td>O</td><td>23.13</td></tr><tr><td>bookPubtime</td><td>出版时间</td><td>String</td><td>O</td><td>2021-08-09</td></tr><tr><td>bookBoutime</td><td>购买时间</td><td>String</td><td>O</td><td>2021-08-09</td></tr><tr><td>bookType</td><td>分类号</td><td>String</td><td>O</td><td>GV943</td></tr></tbody></table><p><strong>出参：</strong>无</p><p>示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span><span class="attr">&quot;success&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>接口描述：</p><p>1、 校验必填项不能为空</p><h6 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h6><p>山大—&gt;科学出版社，成功修改</p><p><img src="E:\Files\Projects\CXCollege\software\Image\9.png" alt="9"></p><p><img src="E:\Files\Projects\CXCollege\software\Image\10.png" alt="10"></p><p><img src="E:\Files\Projects\CXCollege\software\Image\11.png" alt="11"></p><h5 id="3-deleteByCodes"><a href="#3-deleteByCodes" class="headerlink" title="3.deleteByCodes"></a>3.deleteByCodes</h5><ul><li><h5 id="增加接口-3"><a href="#增加接口-3" class="headerlink" title="增加接口"></a>增加接口</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">deleteByCodes</span><span class="params">(List&lt;Integer&gt; ids)</span>;</span><br></pre></td></tr></table></figure><ul><li><h5 id="BookController-java中添加-3"><a href="#BookController-java中添加-3" class="headerlink" title="BookController.java中添加"></a>BookController.java中添加</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;deleteBook&quot;)</span></span><br><span class="line"><span class="meta">@Privilege(&quot;delete&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteBook</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Integer&gt; ids)</span> &#123;</span><br><span class="line">    bookService.deleteByCodes(ids);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="完善Impl实现-2"><a href="#完善Impl实现-2" class="headerlink" title="完善Impl实现"></a>完善Impl实现</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">updateBook</span><span class="params">(BookDTO bookDTO)</span> &#123;</span><br><span class="line">    <span class="comment">// 校验输入数据正确性</span></span><br><span class="line">    <span class="type">Token</span> <span class="variable">token</span> <span class="operator">=</span> ThreadContextHolder.getToken();</span><br><span class="line">    BookUtils.validateBook(bookDTO);</span><br><span class="line">    Assert.notNull(bookDTO.getBookId(), <span class="string">&quot;书籍id不能为空&quot;</span>);</span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> bookMapper.selectByPrimaryKey(bookDTO.getBookId());</span><br><span class="line">    Assert.notNull(book, <span class="string">&quot;没有找到书籍，Id为：&quot;</span> + bookDTO.getBookId());</span><br><span class="line"></span><br><span class="line">    BeanUtils.copyProperties(bookDTO, book);</span><br><span class="line">    bookMapper.updateByPrimaryKey(book);</span><br><span class="line">    <span class="keyword">return</span> book.getBookId();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="添加BookMapper-java"><a href="#添加BookMapper-java" class="headerlink" title="添加BookMapper.java"></a>添加BookMapper.java</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">deleteByCodes</span><span class="params">(<span class="meta">@Param(&quot;codeList&quot;)</span> List&lt;Integer&gt; codeList)</span>;</span><br></pre></td></tr></table></figure><ul><li><h5 id="添加BookMapper-xml"><a href="#添加BookMapper-xml" class="headerlink" title="添加BookMapper.xml"></a>添加BookMapper.xml</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 批量删除 --&gt;</span><br><span class="line">  &lt;update id=&quot;deleteByCodes&quot;&gt;</span><br><span class="line">    delete from book</span><br><span class="line">    where book_id in</span><br><span class="line">    &lt;foreach item=&quot;item&quot; index=&quot;index&quot; collection=&quot;codeList&quot; open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</span><br><span class="line">      #&#123;item&#125;</span><br><span class="line">    &lt;/foreach&gt;</span><br></pre></td></tr></table></figure><h6 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h6><p>接口地址：book&#x2F;deleteBook</p><p>请求方法: POST</p><p>入参：</p><table><thead><tr><th>参数名</th><th>参数描述</th><th>数据类型</th><th>必填</th><th>示例&#x2F;备注</th></tr></thead><tbody><tr><td>0</td><td>书籍ID</td><td>Integer</td><td>M</td><td>0: 57</td></tr></tbody></table><p><strong>出参：</strong>无</p><p>示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span><span class="attr">&quot;success&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>接口描述：暂无</p><h6 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h6><p>成功删除《马原》</p><p><img src="E:\Files\Projects\CXCollege\software\Image\14.png" alt="14"></p><p><img src="E:\Files\Projects\CXCollege\software\Image\15.png" alt="15"></p><h5 id="4-多种模糊查询"><a href="#4-多种模糊查询" class="headerlink" title="4.多种模糊查询"></a>4.多种模糊查询</h5><ul><li><h5 id="BookQueryDTO-java"><a href="#BookQueryDTO-java" class="headerlink" title="BookQueryDTO.java"></a>BookQueryDTO.java</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String isbn;</span><br><span class="line"><span class="keyword">private</span> String author;</span><br><span class="line"><span class="keyword">private</span> String publisher;</span><br><span class="line"><span class="keyword">private</span> String category;</span><br><span class="line"><span class="keyword">private</span> String status;</span><br></pre></td></tr></table></figure><ul><li><h5 id="完善Impl实现-3"><a href="#完善Impl实现-3" class="headerlink" title="完善Impl实现"></a>完善Impl实现</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">queryDTO.setName(FormatUtils.makeFuzzySearchTerm(queryDTO.getName()));</span><br><span class="line">queryDTO.setIsbn(FormatUtils.makeFuzzySearchTerm(queryDTO.getIsbn()));</span><br><span class="line">queryDTO.setAuthor(FormatUtils.makeFuzzySearchTerm(queryDTO.getAuthor()));</span><br><span class="line">queryDTO.setPublisher(FormatUtils.makeFuzzySearchTerm(queryDTO.getPublisher()));</span><br><span class="line">queryDTO.setCategory(FormatUtils.makeFuzzySearchTerm(queryDTO.getCategory()));</span><br><span class="line">queryDTO.setStatus(FormatUtils.makeFuzzySearchTerm(queryDTO.getStatus()));</span><br></pre></td></tr></table></figure><ul><li><h5 id="添加BookMapper-xml-1"><a href="#添加BookMapper-xml-1" class="headerlink" title="添加BookMapper.xml"></a>添加BookMapper.xml</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;list&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">    select</span><br><span class="line">    &lt;include refid=&quot;Base_Column_List&quot;/&gt;</span><br><span class="line">    from book</span><br><span class="line">    &lt;where&gt;</span><br><span class="line">      &lt;if test=&quot;queryDTO.name != null&quot;&gt;</span><br><span class="line">        name like #&#123;queryDTO.name&#125;</span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test=&quot;queryDTO.isbn != null&quot;&gt;</span><br><span class="line">        isbn like #&#123;queryDTO.isbn&#125;</span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test=&quot;queryDTO.author != null&quot;&gt;</span><br><span class="line">        author like #&#123;queryDTO.author&#125;</span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test=&quot;queryDTO.publisher != null&quot;&gt;</span><br><span class="line">        publisher like #&#123;queryDTO.publisher&#125;</span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test=&quot;queryDTO.category != null&quot;&gt;</span><br><span class="line">        category like #&#123;queryDTO.category&#125;</span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test=&quot;queryDTO.status != null&quot;&gt;</span><br><span class="line">        status like #&#123;queryDTO.status&#125;</span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">    &lt;/where&gt;</span><br><span class="line">    limit #&#123;offset&#125;, #&#123;limit&#125;</span><br><span class="line">  &lt;/select&gt;</span><br></pre></td></tr></table></figure><h4 id="前端-1"><a href="#前端-1" class="headerlink" title="前端"></a>前端</h4><p>修改 src\pages\base\book\InputDialog\index.tsx 文件</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ModalForm</span>, <span class="title class_">ProForm</span>, <span class="title class_">ProFormInstance</span>, <span class="title class_">ProFormText</span>, <span class="title class_">ProFormDatePicker</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/pro-components&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; message &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useEffect, useRef &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; waitTime &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; addBook, updateBook &#125; <span class="keyword">from</span> <span class="string">&#x27;@/services/api/book&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">&#x27;dayjs&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">InputDialogProps</span> &#123;</span><br><span class="line">  detailData?: <span class="variable constant_">API</span>.<span class="property">BookDTO</span>;</span><br><span class="line">  <span class="attr">visible</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">onClose</span>: <span class="function">(<span class="params">result: <span class="built_in">boolean</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">InputDialog</span>(<span class="params">props: InputDialogProps</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> form = useRef&lt;<span class="title class_">ProFormInstance</span>&gt;(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">waitTime</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">setFieldsValue</span>(props.<span class="property">detailData</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">resetFields</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, [props.<span class="property">detailData</span>, props.<span class="property">visible</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onFinish</span> = <span class="keyword">async</span> (<span class="params">values: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; bookName, isbn, bookAuthor, bookPublish, bookPrice, bookType, bookBoutime, bookPubtime &#125; = values;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">data</span>: <span class="variable constant_">API</span>.<span class="property">BookDTO</span> = &#123;</span><br><span class="line">      <span class="attr">bookId</span>: props.<span class="property">detailData</span>?.<span class="property">bookId</span>,</span><br><span class="line">      bookName,</span><br><span class="line">      isbn,</span><br><span class="line">      bookAuthor,</span><br><span class="line">      bookPublish,</span><br><span class="line">      bookPrice,</span><br><span class="line">      bookType,</span><br><span class="line">      bookBoutime,</span><br><span class="line">      bookPubtime,</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateBook</span>(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">addBook</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    message.<span class="title function_">success</span>(<span class="string">&#x27;保存成功&#x27;</span>);</span><br><span class="line">    props.<span class="title function_">onClose</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="comment">//返回一个模态对话框</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ModalForm</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">width</span>=<span class="string">&#123;600&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onFinish</span>=<span class="string">&#123;onFinish&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">formRef</span>=<span class="string">&#123;form&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">modalProps</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">destroyOnClose:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onCancel:</span> () =&gt;</span> props.onClose(false),</span></span><br><span class="line"><span class="language-xml">      &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      title=&#123;props.detailData ? &#x27;修改书籍&#x27; : &#x27;新增书籍&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">      open=&#123;props.visible&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;bookName&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;书籍名称&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">rules</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">请输入书籍名称</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;isbn&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;ISBN&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">rules</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">请输入ISBN号</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;bookPublish&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;出版社&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">rules</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">请输入出版社名称</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;bookAuthor&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;作者&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">rules</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">请输入作者名称</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;bookPrice&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;书籍价格&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;bookType&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;分类号&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormDatePicker</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;bookBoutime&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;购买时间&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width</span>=<span class="string">&#123;200&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">initialValue</span>=<span class="string">&#123;moment(</span>&#x27;<span class="attr">2021-08-09</span>&#x27;)&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormDatePicker</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;bookPubtime&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;出版时间&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width</span>=<span class="string">&#123;200&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">initialValue</span>=<span class="string">&#123;moment(</span>&#x27;<span class="attr">2021-08-09</span>&#x27;)&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ModalForm</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除 search&#x3D;false 实现多种模糊查询</p><h3 id="借阅日志"><a href="#借阅日志" class="headerlink" title="借阅日志"></a>借阅日志</h3><h4 id="借阅日志表"><a href="#借阅日志表" class="headerlink" title="借阅日志表"></a>借阅日志表</h4><p>借阅日志表 <em>book_log</em></p><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">索引</th><th align="center">样例</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">id</td><td align="center">int(11)</td><td align="center">Primary Key</td><td align="center">1234</td><td align="center">自增id主键</td></tr><tr><td align="center">reader_name</td><td align="center">char(255)</td><td align="center"></td><td align="center">张三</td><td align="center">借阅人</td></tr><tr><td align="center">book_id</td><td align="center">int(11)</td><td align="center"></td><td align="center">23</td><td align="center">书籍ID</td></tr><tr><td align="center">book_name</td><td align="center">char(255)</td><td align="center"></td><td align="center">信号与系统</td><td align="center">书名</td></tr><tr><td align="center">book_isbn</td><td align="center">char(255)</td><td align="center"></td><td align="center">1234567891234</td><td align="center">书籍ISBN，必须为13位</td></tr><tr><td align="center">borrowed_time</td><td align="center">date</td><td align="center"></td><td align="center">2023-04-01</td><td align="center">借阅时间</td></tr><tr><td align="center">return_time</td><td align="center">date</td><td align="center"></td><td align="center">TX001</td><td align="center">还书时间，可以为NULL</td></tr></tbody></table><h4 id="接口设计"><a href="#接口设计" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="1-展示页面"><a href="#1-展示页面" class="headerlink" title="1.展示页面"></a>1.展示页面</h5><p><strong>接口地址</strong>：bookLog&#x2F;listBookLog</p><p><strong>请求方法</strong>: POST</p><p><strong>入参</strong></p><table><thead><tr><th align="left">参数名</th><th align="left">参数描述</th><th align="left">数据类型</th><th align="left">必填</th><th align="left">示例&#x2F;备注</th></tr></thead><tbody><tr><td align="left">current</td><td align="left">当前页面</td><td align="left">Integer</td><td align="left">M</td><td align="left">1</td></tr><tr><td align="left">pageSize</td><td align="left">页面大小</td><td align="left">Integer</td><td align="left">M</td><td align="left">1</td></tr></tbody></table><p><strong>出参：</strong></p><table><thead><tr><th>参数名</th><th>参数描述</th><th>数据类型</th><th>必填</th><th>示例&#x2F;备注</th></tr></thead><tbody><tr><td>data</td><td>返回数据</td><td>List  of Object</td><td>M</td><td></td></tr><tr><td>├─  current</td><td>当前页面</td><td>Integer</td><td>M</td><td>过滤条件</td></tr><tr><td>├─  list</td><td>返回列表</td><td>List  of Object</td><td>O</td><td></td></tr><tr><td>├──  bookId</td><td>书籍id</td><td>Integer</td><td>O</td><td></td></tr><tr><td>├── bookIsbn</td><td>书籍isbn</td><td>String</td><td>O</td><td></td></tr><tr><td>├── bookName</td><td>书名</td><td>String</td><td>O</td><td></td></tr><tr><td>├── borrowedTime</td><td>借阅时间</td><td>date</td><td>O</td><td></td></tr><tr><td>├── id</td><td>id</td><td>Integer</td><td>O</td><td>主键</td></tr><tr><td>├── readerName</td><td>借阅人姓名</td><td>String</td><td>O</td><td></td></tr><tr><td>├── returnTime</td><td>归还时间</td><td>date</td><td>O</td><td></td></tr><tr><td>├─  pageSize</td><td>页面大小</td><td>Integer</td><td>M</td><td>过滤条件</td></tr><tr><td>├─  total</td><td>总命中数</td><td>Integer</td><td>M</td><td></td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pageSize&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isbn&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1234314234323&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;publisher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">321</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;boughtTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-04-01&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;publishedTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-04-01&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;借出&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;classification&quot;</span><span class="punctuation">:</span> <span class="string">&quot;漫画&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;success&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>接口描述：</strong></p><p> 查询MySQL中book_log表数据。</p><h4 id="1-实现基础功能，分页，更新，删除、增加"><a href="#1-实现基础功能，分页，更新，删除、增加" class="headerlink" title="1.实现基础功能，分页，更新，删除、增加"></a>1.实现基础功能，分页，更新，删除、增加</h4><h5 id="后端-2"><a href="#后端-2" class="headerlink" title="后端"></a>后端</h5><p>BookLogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.service.impl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dao.BookLogMapper;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dao.BookMapper;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.BookDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.BookLogDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.query.BookLogQueryDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.query.BookQueryDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.Book;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.BookLog;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.Page;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.AdminService;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.BookLogService;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.utils.BookLogUtils;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.utils.BookUtils;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.utils.FormatUtils;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.utils.PageUtils;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.vo.BookLogVO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.vo.BookVO;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookLogServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookLogService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookLogMapper bookLogMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AdminService adminService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">addBookLog</span><span class="params">(BookLogDTO bookLogDTO)</span>&#123;</span><br><span class="line">        <span class="comment">// 校验输入数据正确性</span></span><br><span class="line">        BookLogUtils.validateBookLog(bookLogDTO);</span><br><span class="line">        <span class="comment">// 创建实体对象，用以保存到数据库</span></span><br><span class="line">        <span class="type">BookLog</span> <span class="variable">bookLog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookLog</span>();</span><br><span class="line">        <span class="comment">// 将输入的字段全部复制到实体对象中</span></span><br><span class="line">        BeanUtils.copyProperties(bookLogDTO, bookLog);</span><br><span class="line">        <span class="comment">// 调用DAO方法保存到数据库表</span></span><br><span class="line">        bookLogMapper.insert(bookLog);</span><br><span class="line">        <span class="keyword">return</span> bookLog.getId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">updateBookLog</span><span class="params">(BookLogDTO bookLogDTO)</span> &#123;</span><br><span class="line">        <span class="comment">// 校验输入数据正确性</span></span><br><span class="line">        BookLogUtils.validateBookLog(bookLogDTO);</span><br><span class="line">        Assert.notNull(bookLogDTO.getBookId(), <span class="string">&quot;书籍id不能为空&quot;</span>);</span><br><span class="line">        <span class="type">BookLog</span> <span class="variable">bookLog</span> <span class="operator">=</span> bookLogMapper.selectByPrimaryKey(bookLogDTO.getBookId());</span><br><span class="line">        Assert.notNull(bookLog, <span class="string">&quot;没有找到书籍，Id为：&quot;</span> + bookLogDTO.getBookId());</span><br><span class="line"></span><br><span class="line">        BeanUtils.copyProperties(bookLogDTO, bookLog);</span><br><span class="line">        bookLogMapper.updateByPrimaryKey(bookLog);</span><br><span class="line">        <span class="keyword">return</span> bookLog.getId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Page&lt;BookLogVO&gt; <span class="title function_">listByPage</span><span class="params">(BookLogQueryDTO queryDTO)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (queryDTO == <span class="literal">null</span>) &#123;</span><br><span class="line">            queryDTO = <span class="keyword">new</span> <span class="title class_">BookLogQueryDTO</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//模糊查询</span></span><br><span class="line">        queryDTO.setBookName(FormatUtils.makeFuzzySearchTerm(queryDTO.getBookName()));</span><br><span class="line">        queryDTO.setOrderBy(FormatUtils.formatOrderBy(queryDTO.getOrderBy()));</span><br><span class="line">        <span class="comment">//将查询条件发送给dao接口，先查询命中个数</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">size</span> <span class="operator">=</span> bookLogMapper.count(queryDTO);</span><br><span class="line">        <span class="type">PageUtils</span> <span class="variable">pageUtils</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(queryDTO.getCurrent(), queryDTO.getPageSize(), size);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 没有命中，则返回空数据。</span></span><br><span class="line">            <span class="keyword">return</span> pageUtils.getNullPage();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;BookLog&gt; list = bookLogMapper.list(queryDTO, pageUtils.getOffset(), pageUtils.getLimit());</span><br><span class="line"></span><br><span class="line">        List&lt;BookLogVO&gt; voList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (BookLog bookLog : list) &#123;</span><br><span class="line">            <span class="type">BookLogVO</span> <span class="variable">vo</span> <span class="operator">=</span> BookLogUtils.convertToVO(bookLog);</span><br><span class="line">            voList.add(vo);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(pageUtils.getCurrent(), pageUtils.getPageSize(), pageUtils.getTotal(), voList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteByCodes</span><span class="params">(List&lt;Integer&gt; ids)</span> &#123;</span><br><span class="line">        Assert.notEmpty(ids, <span class="string">&quot;书籍id列表不能为空&quot;</span>);</span><br><span class="line">        bookLogMapper.deleteByCodes(ids);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookLogService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.BookLogDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.query.BookLogQueryDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.Page;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.vo.BookLogVO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookLogService</span> &#123;</span><br><span class="line">    Integer <span class="title function_">addBookLog</span><span class="params">(BookLogDTO bookLogDTO)</span>;</span><br><span class="line"></span><br><span class="line">    Page&lt;BookLogVO&gt; <span class="title function_">listByPage</span><span class="params">(BookLogQueryDTO queryDTO)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新部门数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bookLogDTO 部门输入对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 部门编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Integer <span class="title function_">updateBookLog</span><span class="params">(BookLogDTO bookLogDTO)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据编码列表，批量删除书籍</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ids 编码列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteByCodes</span><span class="params">(List&lt;Integer&gt; ids)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookLogMapper.xml添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 获取名字个数(分页) --&gt;</span><br><span class="line">&lt;select id=&quot;count&quot; resultType=&quot;integer&quot;&gt;</span><br><span class="line">  select count(*)</span><br><span class="line">  from book_log</span><br><span class="line">  &lt;where&gt;</span><br><span class="line">    &lt;if test=&quot;bookName != null&quot;&gt;</span><br><span class="line">      book_name like #&#123;bookName&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">  &lt;/where&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 获取书籍(分页) --&gt;</span><br><span class="line">&lt;select id=&quot;list&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">  select</span><br><span class="line">  &lt;include refid=&quot;Base_Column_List&quot;/&gt;</span><br><span class="line">  from book_log</span><br><span class="line">  &lt;where&gt;</span><br><span class="line">    &lt;if test=&quot;queryDTO.readerName != null&quot;&gt;</span><br><span class="line">      and reader_name like #&#123;queryDTO.readerName&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;queryDTO.bookIsbn != null&quot;&gt;</span><br><span class="line">      and book_isbn like #&#123;queryDTO.bookIsbn&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;queryDTO.bookId != null&quot;&gt;</span><br><span class="line">      and book_id like #&#123;queryDTO.bookId&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;queryDTO.bookName != null&quot;&gt;</span><br><span class="line">      and book_name like #&#123;queryDTO.bookName&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">  &lt;/where&gt;</span><br><span class="line">  &lt;if test=&quot;queryDTO.orderBy != null&quot;&gt;</span><br><span class="line">    order by $&#123;queryDTO.orderBy&#125;</span><br><span class="line">  &lt;/if&gt;</span><br><span class="line">  &lt;if test=&quot;queryDTO.orderBy == null&quot;&gt;</span><br><span class="line">    order by id desc</span><br><span class="line">  &lt;/if&gt;</span><br><span class="line">  limit #&#123;offset&#125;, #&#123;limit&#125;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 批量删除 --&gt;</span><br><span class="line">&lt;update id=&quot;deleteByCodes&quot;&gt;</span><br><span class="line">  delete from book_log</span><br><span class="line">  where id in</span><br><span class="line">  &lt;foreach item=&quot;item&quot; index=&quot;index&quot; collection=&quot;codeList&quot; open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</span><br><span class="line">    #&#123;item&#125;</span><br><span class="line">  &lt;/foreach&gt;</span><br><span class="line">&lt;/update&gt;</span><br></pre></td></tr></table></figure><p>BookLogMapper.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.query.BookLogQueryDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.BookLog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookLogMapper</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteByPrimaryKey</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insert</span><span class="params">(BookLog record)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insertSelective</span><span class="params">(BookLog record)</span>;</span><br><span class="line"></span><br><span class="line">    BookLog <span class="title function_">selectByPrimaryKey</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateByPrimaryKeySelective</span><span class="params">(BookLog record)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateByPrimaryKey</span><span class="params">(BookLog record)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    List&lt;BookLog&gt; <span class="title function_">list</span><span class="params">(<span class="meta">@Param(&quot;queryDTO&quot;)</span> BookLogQueryDTO queryDTO,</span></span><br><span class="line"><span class="params">                       <span class="meta">@Param(&quot;offset&quot;)</span> Integer offset,</span></span><br><span class="line"><span class="params">                       <span class="meta">@Param(&quot;limit&quot;)</span> Integer limit)</span>;</span><br><span class="line"></span><br><span class="line">    Integer <span class="title function_">count</span><span class="params">(BookLogQueryDTO queryDTO)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据代码列表批量删除书籍</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> codeList id列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteByCodes</span><span class="params">(<span class="meta">@Param(&quot;codeList&quot;)</span> List&lt;Integer&gt; codeList)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookLogController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.annotation.BackendModule;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.annotation.NeedNoPrivilege;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.annotation.Privilege;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.BookDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.BookLogDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.query.BookLogQueryDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.dto.query.BookQueryDTO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.Page;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.BookLogService;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.service.BookService;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.vo.BookLogVO;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.vo.BookVO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/bookLog&quot;)</span></span><br><span class="line"><span class="meta">@BackendModule(&#123;&quot;page:页面&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookLogController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookLogService bookLogService;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;addBookLog&quot;)</span></span><br><span class="line">    <span class="meta">@NeedNoPrivilege</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addBookLog</span><span class="params">(<span class="meta">@RequestBody</span> BookLogDTO bookLogDTO)</span>&#123;</span><br><span class="line">        bookLogService.addBookLog(bookLogDTO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;listBookLog&quot;)</span></span><br><span class="line"><span class="comment">//    @Privilege(&quot;page&quot;)</span></span><br><span class="line">    <span class="meta">@NeedNoPrivilege</span></span><br><span class="line">    <span class="keyword">public</span> Page&lt;BookLogVO&gt; <span class="title function_">listBookLog</span><span class="params">(<span class="meta">@RequestBody</span> BookLogQueryDTO queryDTO)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bookLogService.listByPage(queryDTO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;updateBookLog&quot;)</span></span><br><span class="line">    <span class="meta">@Privilege(&quot;update&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">updateBookLog</span><span class="params">(<span class="meta">@RequestBody</span> BookLogDTO bookLogDTO)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bookLogService.updateBookLog(bookLogDTO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;deleteBookLog&quot;)</span></span><br><span class="line">    <span class="meta">@Privilege(&quot;delete&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteBookLog</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Integer&gt; ids)</span> &#123;</span><br><span class="line">        bookLogService.deleteByCodes(ids);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookLogQueryDTO.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.dto.query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> bsgbs</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookLogQueryDTO</span> <span class="keyword">extends</span> <span class="title class_">PageQueryDTO</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer readerId;</span><br><span class="line">    <span class="keyword">private</span> String readerName;</span><br><span class="line">    <span class="keyword">private</span> Integer bookId;</span><br><span class="line">    <span class="keyword">private</span> String bookIsbn;</span><br><span class="line">    <span class="keyword">private</span> String bookName;</span><br><span class="line">    <span class="keyword">private</span> String orderBy;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookLogDTO.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookLogDTO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String readerName;</span><br><span class="line">    <span class="keyword">private</span> Integer bookId;</span><br><span class="line">    <span class="keyword">private</span> String bookName;</span><br><span class="line">    <span class="keyword">private</span> String bookIsbn;</span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date borrowedTime;</span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date returnTime;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookLogVO.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.vo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> redlib.backend.model.BookLog;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> bsgbs</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookLogVO</span> <span class="keyword">extends</span> <span class="title class_">BookLog</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="前端-2"><a href="#前端-2" class="headerlink" title="前端"></a>前端</h5><h6 id="index主页面"><a href="#index主页面" class="headerlink" title="index主页面"></a>index主页面</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;  deleteBookLog,listBookLog &#125; <span class="keyword">from</span> <span class="string">&#x27;@/services/api/bookLog&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; convertPageData,orderBy &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; openConfirm &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PlusOutlined</span>, <span class="title class_">DeleteOutlined</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/icons&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ActionType</span>, <span class="title class_">PageContainer</span>, <span class="title class_">ProColumns</span>, <span class="title class_">ProTable</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/pro-components&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Button</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRef, useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">InputDialog</span> <span class="keyword">from</span> <span class="string">&#x27;./InputDialog&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> refAction = useRef&lt;<span class="title class_">ActionType</span>&gt;(<span class="literal">null</span>);</span><br><span class="line">  <span class="comment">//声明两个常量，变量名为selectedRowKeys，改变变量值的方法为selectRow</span></span><br><span class="line">  <span class="keyword">const</span> [selectedRowKeys, selectRow] = useState&lt;<span class="built_in">number</span>[]&gt;([]);</span><br><span class="line">  <span class="comment">//声明页面级状态变量，将变量传递给对话框，&lt;&gt;内表示是什么类型的数据，()为空表示不对其初始化</span></span><br><span class="line">  <span class="keyword">const</span> [book, setBook] = useState&lt;<span class="variable constant_">API</span>.<span class="property">BookLogVO</span>&gt;();</span><br><span class="line">  <span class="keyword">const</span> [visible, setVisible] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> <span class="attr">columns</span>: <span class="title class_">ProColumns</span>&lt;<span class="variable constant_">API</span>.<span class="property">BookLogVO</span>&gt;[] = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;书籍ID&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookId&#x27;</span>,</span><br><span class="line">      <span class="attr">sorter</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">fixed</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">50</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;书名&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookName&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;借阅人&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;readerName&#x27;</span>,</span><br><span class="line">      <span class="attr">fixed</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;ISBN&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;bookIsbn&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;借阅日期&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">sorter</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;borrowedTime&#x27;</span>,</span><br><span class="line">      <span class="attr">valueType</span>: <span class="string">&#x27;date&#x27;</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;还书日期&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;returnTime&#x27;</span>,</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&#x27;returnTime&#x27;</span>,</span><br><span class="line">      <span class="attr">valueType</span>: <span class="string">&#x27;date&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">PageContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &lt;ProTable<span class="tag">&lt;<span class="name">API.BookLogVO</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        actionRef=&#123;refAction&#125;</span></span><br><span class="line"><span class="language-xml">        rowKey=&quot;id&quot;</span></span><br><span class="line"><span class="language-xml">        pagination=&#123;&#123;</span></span><br><span class="line"><span class="language-xml">          defaultPageSize: 10,</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        search=&#123;&#123;</span></span><br><span class="line"><span class="language-xml">          labelWidth: 120,</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        scroll=&#123;&#123; x: 100 &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        request=&#123;async (params = &#123;&#125;, sort) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          console.log(sort);</span></span><br><span class="line"><span class="language-xml">          return convertPageData(await listBookLog(&#123; ...params, orderBy: orderBy(sort) &#125;));</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        columns=&#123;columns&#125;</span></span><br><span class="line"><span class="language-xml">      /&gt;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">PageContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  );</span></span><br><span class="line"><span class="language-xml">&#125;;</span></span><br></pre></td></tr></table></figure><h6 id="inputdialog页面"><a href="#inputdialog页面" class="headerlink" title="inputdialog页面"></a>inputdialog页面</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ModalForm</span>, <span class="title class_">ProForm</span>, <span class="title class_">ProFormInstance</span>, <span class="title class_">ProFormSelect</span>, <span class="title class_">ProFormText</span>, <span class="title class_">ProFormDatePicker</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/pro-components&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; message, <span class="title class_">Switch</span>, <span class="title class_">Tooltip</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useEffect, useRef, useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; waitTime &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; addBook, updateBook &#125; <span class="keyword">from</span> <span class="string">&#x27;@/services/api/book&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">&#x27;dayjs&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">InputDialogProps</span> &#123;</span><br><span class="line">  detailData?: <span class="variable constant_">API</span>.<span class="property">BookDTO</span>;</span><br><span class="line">  <span class="attr">visible</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">onClose</span>: <span class="function">(<span class="params">result: <span class="built_in">boolean</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">InputDialog</span>(<span class="params">props: InputDialogProps</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> form = useRef&lt;<span class="title class_">ProFormInstance</span>&gt;(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">const</span> [<span class="keyword">readonly</span>, setReadonly] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">waitTime</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">setFieldsValue</span>(props.<span class="property">detailData</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">resetFields</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, [props.<span class="property">detailData</span>, props.<span class="property">visible</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onFinish</span> = <span class="keyword">async</span> (<span class="params">values: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; name, isbn, author, publisher, price, category, boughtTime, publishedTime, status &#125; = values;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">data</span>: <span class="variable constant_">API</span>.<span class="property">BookDTO</span> = &#123;</span><br><span class="line">      <span class="attr">id</span>: props.<span class="property">detailData</span>?.<span class="property">id</span>,</span><br><span class="line">      name,</span><br><span class="line">      isbn,</span><br><span class="line">      author,</span><br><span class="line">      publisher,</span><br><span class="line">      price,</span><br><span class="line">      category,</span><br><span class="line">      boughtTime,</span><br><span class="line">      publishedTime,</span><br><span class="line">      status,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateBook</span>(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">addBook</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    message.<span class="title function_">success</span>(<span class="string">&#x27;保存成功&#x27;</span>);</span><br><span class="line">    props.<span class="title function_">onClose</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="comment">//返回一个模态对话框</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ModalForm</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">width</span>=<span class="string">&#123;600&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onFinish</span>=<span class="string">&#123;onFinish&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">formRef</span>=<span class="string">&#123;form&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">modalProps</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">destroyOnClose:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onCancel:</span> () =&gt;</span> props.onClose(false),</span></span><br><span class="line"><span class="language-xml">      &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      title=&#123;props.detailData ? &#x27;修改书籍&#x27; : &#x27;新增书籍&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">      open=&#123;props.visible&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;name&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;书籍名称&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">rules</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">请输入书籍名称</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;isbn&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;ISBN&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">tooltip</span>=<span class="string">&quot;输入必须为13位&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">rules</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">请输入ISBN号</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              // <span class="attr">此处设为false可以解决填写后退格导致两种报错的问题</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">false</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">ISBN格式不符合要求</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">max:</span> <span class="attr">13</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">min:</span> <span class="attr">13</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;publisher&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;出版社&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">rules</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">请输入出版社名称</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;author&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;作者&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">rules</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">请输入作者名称</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;price&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;书籍价格&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;category&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;分类号&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormDatePicker</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;boughtTime&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;购买时间&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">initialValue</span>=<span class="string">&#123;moment()&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormDatePicker</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;publishedTime&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;出版时间&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">initialValue</span>=<span class="string">&#123;moment()&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormSelect</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;status&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">options</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">在架</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">在架</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">借出</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">借出</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &lt;/ModalForm &gt;</span></span><br><span class="line"><span class="language-xml">  );</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="2-序号及借阅日期排序"><a href="#2-序号及借阅日期排序" class="headerlink" title="2.序号及借阅日期排序"></a>2.序号及借阅日期排序</h4><h5 id="前端-3"><a href="#前端-3" class="headerlink" title="前端"></a>前端</h5><p>return中添加</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">ProTable</span>&lt;<span class="variable constant_">API</span>.<span class="property">BookLogVO</span>&gt;</span><br><span class="line">        actionRef=&#123;refAction&#125;</span><br><span class="line">        rowKey=<span class="string">&quot;id&quot;</span></span><br><span class="line">        pagination=&#123;&#123;</span><br><span class="line">          <span class="attr">defaultPageSize</span>: <span class="number">10</span>,</span><br><span class="line">        &#125;&#125;</span><br><span class="line">        search=&#123;&#123;</span><br><span class="line">          <span class="attr">labelWidth</span>: <span class="number">120</span>,</span><br><span class="line">        &#125;&#125;</span><br><span class="line">        scroll=&#123;&#123; <span class="attr">x</span>: <span class="number">100</span> &#125;&#125;</span><br><span class="line">        request=&#123;<span class="keyword">async</span> (params = &#123;&#125;, sort) =&gt; &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(sort);</span><br><span class="line">          <span class="keyword">return</span> <span class="title function_">convertPageData</span>(<span class="keyword">await</span> <span class="title function_">listBookLog</span>(&#123; ...params, <span class="attr">orderBy</span>: <span class="title function_">orderBy</span>(sort) &#125;));</span><br><span class="line">        &#125;&#125;</span><br><span class="line">        columns=&#123;columns&#125;</span><br><span class="line">      /&gt;</span><br></pre></td></tr></table></figure><h5 id="后端-3"><a href="#后端-3" class="headerlink" title="后端"></a>后端</h5><p>BookLogServiceImpl.java中添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">queryDTO.setOrderBy(FormatUtils.formatOrderBy(queryDTO.getOrderBy()));</span><br></pre></td></tr></table></figure><p>BookLogQueryDTO.java中添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String orderBy;</span><br></pre></td></tr></table></figure><p>xml中</where>后添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;if test=&quot;queryDTO.orderBy != null&quot;&gt;</span><br><span class="line">      order by $&#123;queryDTO.orderBy&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;queryDTO.orderBy == null&quot;&gt;</span><br><span class="line">      order by id desc</span><br><span class="line">    &lt;/if&gt;</span><br></pre></td></tr></table></figure><h5 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h5><p>点击书籍ID排序如下</p><p><img src="E:\Files\Projects\CXCollege\software\Image\19.png" alt="19"></p><p><img src="E:\Files\Projects\CXCollege\software\Image\20.png" alt="20"></p><h3 id="借书"><a href="#借书" class="headerlink" title="借书"></a>借书</h3><h4 id="接口设计-1"><a href="#接口设计-1" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="借书-1"><a href="#借书-1" class="headerlink" title="借书"></a>借书</h5><p><strong>接口地址</strong>：book&#x2F;lendBook</p><p><strong>请求方法</strong>: POST</p><p><strong>入参</strong></p><table><thead><tr><th>参数名</th><th>参数描述</th><th>数据类型</th><th>必填</th><th>示例&#x2F;备注</th></tr></thead><tbody><tr><td>bookDTO</td><td>BookDTO数据</td><td>List  of Object</td><td>M</td><td></td></tr><tr><td>├─ id</td><td>书籍id</td><td>Integer</td><td>M</td><td>主键</td></tr><tr><td>├─ name</td><td>书名</td><td>List  of Object</td><td>O</td><td></td></tr><tr><td>├─ isbn</td><td>书籍isbn</td><td>String</td><td>O</td><td></td></tr><tr><td>├─ author</td><td>书籍作者</td><td>String</td><td>O</td><td></td></tr><tr><td>├─ publisher</td><td>出版社</td><td>String</td><td>O</td><td></td></tr><tr><td>├─ price</td><td>书籍价格</td><td>Double</td><td>O</td><td></td></tr><tr><td>├─ category</td><td>书籍分类号</td><td>Integer</td><td>O</td><td></td></tr><tr><td>├─ boughtTime</td><td>书籍购买时间</td><td>date</td><td>O</td><td></td></tr><tr><td>├─ publishedTime</td><td>书籍出版时间</td><td>date</td><td>O</td><td></td></tr><tr><td>├─  status</td><td>书籍状态</td><td>String</td><td>O</td><td>过滤条件</td></tr><tr><td>├─  classification</td><td>书籍分类</td><td>String</td><td>O</td><td></td></tr><tr><td>bookLogDTO</td><td>LogDTO数据</td><td>List  of Object</td><td>M</td><td></td></tr><tr><td>├─ readerName</td><td>当前页面</td><td>String</td><td>M</td><td></td></tr><tr><td>├─ borrowedTime</td><td>返回列表</td><td>date</td><td>O</td><td></td></tr></tbody></table><p><strong>出参：</strong>无</p><p><strong>示例：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span><span class="attr">&quot;success&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>接口描述：</strong></p><p>1.前端向后端发送选中书籍信息和借阅信息，后端将借阅日志所需的信息从书籍信息中复制进来。</p><p>2.后端根据书籍id检索，自动更新书籍状态为“借出”，并且增加一条借阅日志。</p><h4 id="1-实现借书功能"><a href="#1-实现借书功能" class="headerlink" title="1.实现借书功能"></a>1.实现借书功能</h4><h5 id="后端-4"><a href="#后端-4" class="headerlink" title="后端"></a>后端</h5><p>参考Department的写法，之前在添加部门中使用insert函数添加，理论上只要添加适当的函数即可在借还书籍时同时为log中添加记录</p><p><img src="E:\Files\Projects\CXCollege\software\Image\16.png" alt="16"></p><p>添加BookAndLogDTO类用于接收前端传递的参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookAndLogDTO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> BookDTO bookDTO;</span><br><span class="line">    <span class="keyword">private</span> BookLogDTO bookLogDTO;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookService.java添加接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer <span class="title function_">lendBook</span><span class="params">(BookAndLogDTO bookAndLogDTO)</span>;</span><br></pre></td></tr></table></figure><p>Impl.java中完善</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">lendBook</span><span class="params">(BookAndLogDTO bookAndLogDTO)</span>&#123;</span><br><span class="line">    <span class="comment">// 校验输入数据正确性</span></span><br><span class="line">    BookLogUtils.validateBookLog(bookAndLogDTO.getBookLogDTO());</span><br><span class="line">    BookUtils.validateBook(bookAndLogDTO.getBookDTO());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建实体对象，用以保存到数据库</span></span><br><span class="line">    <span class="type">BookLog</span> <span class="variable">log</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookLog</span>();</span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Book</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改书籍状态为借出</span></span><br><span class="line">    bookAndLogDTO.getBookDTO().setStatus(<span class="string">&quot;借出&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将输入的字段全部复制到实体对象中</span></span><br><span class="line">    <span class="comment">//将两个DTO中的数据传递到log中，便于使用bookLogMapper中的insert函数</span></span><br><span class="line">    BeanUtils.copyProperties(BookLogUtils.convertToDTO(bookAndLogDTO),log);</span><br><span class="line">    <span class="comment">//将bookAndLogDTO类中的BookDTO()数据传入book中用于更新状态为借出</span></span><br><span class="line">    BeanUtils.copyProperties(bookAndLogDTO.getBookDTO(), book);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用DAO方法保存到数据库表</span></span><br><span class="line">    bookLogMapper.insert(log);</span><br><span class="line">    <span class="comment">// 更新书籍状态</span></span><br><span class="line">    bookMapper.updateByPrimaryKey(book);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> log.getId();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;lendBook&quot;)</span></span><br><span class="line"><span class="meta">@Privilege(&quot;lend&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">lendBook</span><span class="params">(<span class="meta">@RequestBody</span> BookAndLogDTO bookAndLogDTO)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> bookService.lendBook(bookAndLogDTO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookLogUtils.java中添加格式转换函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    将两个DTO中的数据传递到log中，便于使用bookLogMapper中的insert函数</span></span><br><span class="line"><span class="comment">    接收BookAndLogDTO类型，复制内容并输出为bookLogDTO类型</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> BookLogDTO <span class="title function_">convertToDTO</span><span class="params">(BookAndLogDTO bookAndLogDTO)</span> &#123;</span><br><span class="line">    <span class="type">BookLogDTO</span> <span class="variable">bookLogDTO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookLogDTO</span>();</span><br><span class="line">    <span class="comment">//此处无法直接Copy，因为需要把两个不同的DTO中的数据传递到bookLogDTO中</span></span><br><span class="line">    bookLogDTO.setBookId(bookAndLogDTO.getBookDTO().getId());</span><br><span class="line">    bookLogDTO.setBookName(bookAndLogDTO.getBookDTO().getName());</span><br><span class="line">    bookLogDTO.setBookIsbn(bookAndLogDTO.getBookDTO().getIsbn());</span><br><span class="line"></span><br><span class="line">    bookLogDTO.setBorrowedTime(bookAndLogDTO.getBookLogDTO().getBorrowedTime());</span><br><span class="line">    bookLogDTO.setReturnTime(bookAndLogDTO.getBookLogDTO().getReturnTime());</span><br><span class="line">    bookLogDTO.setReaderName(bookAndLogDTO.getBookLogDTO().getReaderName());</span><br><span class="line">    <span class="keyword">return</span> bookLogDTO;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="前端-4"><a href="#前端-4" class="headerlink" title="前端"></a>前端</h5><h6 id="主页面添加借书对话框"><a href="#主页面添加借书对话框" class="headerlink" title="主页面添加借书对话框"></a>主页面添加借书对话框</h6><p>导入对话框组件</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">InputDialog2</span> <span class="keyword">from</span> <span class="string">&#x27;./InputDialog2&#x27;</span>;</span><br></pre></td></tr></table></figure><p>定义变量</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [bookLog, setBookLog] = useState&lt;<span class="variable constant_">API</span>.<span class="property">BookVO</span>&gt;();</span><br><span class="line"><span class="keyword">const</span> [lendVisible, setLendVisible] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br></pre></td></tr></table></figure><p>实现对话框交互</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">InputDialog2</span></span><br><span class="line">detailData=&#123;bookLog&#125;</span><br><span class="line">onClose=&#123;<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setLendVisible</span>(<span class="literal">false</span>);</span><br><span class="line">    result &amp;&amp; refAction.<span class="property">current</span>?.<span class="title function_">reload</span>();</span><br><span class="line">&#125;&#125;</span><br><span class="line">visible=&#123;lendVisible&#125;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p>对话框实现按钮</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Button</span></span><br><span class="line"><span class="keyword">type</span>=<span class="string">&quot;primary&quot;</span></span><br><span class="line">key=<span class="string">&quot;primary&quot;</span></span><br><span class="line">onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setLendVisible</span>(<span class="literal">true</span>);</span><br><span class="line">&#125;&#125;</span><br><span class="line">disabled=&#123;!selectedRowKeys?.<span class="property">length</span>&#125;</span><br><span class="line">&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">LogoutOutlined</span> /&gt;</span></span> 借出</span><br><span class="line">&lt;/<span class="title class_">Button</span>&gt;,</span><br></pre></td></tr></table></figure><h6 id="借书思路"><a href="#借书思路" class="headerlink" title="借书思路"></a><strong>借书思路</strong></h6><blockquote><ul><li>选择某一行，可以点击“借阅”按钮，实现借书</li><li>点击借书，对话框内显示书籍资料，手动填入借阅人信息</li><li>后续考虑扩展为选择多行书籍，同时借阅</li></ul></blockquote><p>通过查询选择行的代码，发现**onChange()**函数，可以自带两个参数</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onChange?: <span class="function">(<span class="params">selectedRowKeys: Key[], selectedRows: T[], info: &#123;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">type</span>: RowSelectMethod;</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;</span>) =&gt;</span> <span class="built_in">void</span>;</span><br></pre></td></tr></table></figure><p>其中第一个参数为选择行的主键（即ID），第二个参数为选择行的列表<strong>（此特性也为后续选择多行同时借阅提供可能）</strong></p><p>因此，实现借出一本书只需要传递records[0]到对话框即可，代码如下</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rowSelection=&#123;&#123;</span><br><span class="line">    <span class="attr">onChange</span>: <span class="function">(<span class="params">rowKeys, records</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="title function_">selectRow</span>(rowKeys <span class="keyword">as</span> <span class="built_in">number</span>[]);</span><br><span class="line">    <span class="title function_">setBookLog</span>(records[<span class="number">0</span>]);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><h6 id="inputdialog对话框"><a href="#inputdialog对话框" class="headerlink" title="inputdialog对话框"></a>inputdialog对话框</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ModalForm</span>, <span class="title class_">ProForm</span>, <span class="title class_">ProFormInstance</span>, <span class="title class_">ProFormSelect</span>, <span class="title class_">ProFormText</span>, <span class="title class_">ProFormDatePicker</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/pro-components&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; message, <span class="title class_">Switch</span>, <span class="title class_">Tooltip</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useEffect, useRef, useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; waitTime &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; addBook, updateBook, lendBook &#125; <span class="keyword">from</span> <span class="string">&#x27;@/services/api/book&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">&#x27;dayjs&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; addBookLog, updateBookLog &#125; <span class="keyword">from</span> <span class="string">&#x27;@/services/api/bookLog&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">InputDialogProps</span> &#123;</span><br><span class="line">  detailData?: <span class="variable constant_">API</span>.<span class="property">BookDTO</span>;</span><br><span class="line">  <span class="attr">visible</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">onClose</span>: <span class="function">(<span class="params">result: <span class="built_in">boolean</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">InputDialog</span>(<span class="params">props: InputDialogProps</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> form = useRef&lt;<span class="title class_">ProFormInstance</span>&gt;(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">const</span> [<span class="keyword">readonly</span>, setReadonly] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">waitTime</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">setFieldsValue</span>(props.<span class="property">detailData</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">resetFields</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, [props.<span class="property">detailData</span>, props.<span class="property">visible</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onFinish</span> = <span class="keyword">async</span> (<span class="params">values: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; name, isbn, author, publisher, price, category, boughtTime, publishedTime, status, classification,</span><br><span class="line">      readerName, bookId, bookName, bookIsbn, borrowedTime, returnTime &#125; = values;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">data</span>: <span class="variable constant_">API</span>.<span class="property">BookAndLogDTO</span> = &#123;</span><br><span class="line">      <span class="attr">bookDTO</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: props.<span class="property">detailData</span>?.<span class="property">id</span>,</span><br><span class="line">        name,</span><br><span class="line">        isbn,</span><br><span class="line">        author,</span><br><span class="line">        publisher,</span><br><span class="line">        price,</span><br><span class="line">        category,</span><br><span class="line">        boughtTime,</span><br><span class="line">        publishedTime,</span><br><span class="line">        status,</span><br><span class="line">        classification</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">bookLogDTO</span>: &#123;</span><br><span class="line">        readerName,</span><br><span class="line">        bookId,</span><br><span class="line">        bookName,</span><br><span class="line">        bookIsbn,</span><br><span class="line">        borrowedTime,</span><br><span class="line">        returnTime</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">lendBook</span>(data);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        message.<span class="title function_">success</span>(<span class="string">&#x27;借出成功&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    props.<span class="title function_">onClose</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="comment">//返回一个模态对话框</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ModalForm</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">width</span>=<span class="string">&#123;600&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onFinish</span>=<span class="string">&#123;onFinish&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">formRef</span>=<span class="string">&#123;form&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">modalProps</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">destroyOnClose:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onCancel:</span> () =&gt;</span> props.onClose(false),</span></span><br><span class="line"><span class="language-xml">      &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      title=&#123;props.detailData ? &#x27;借出&#x27; : &#x27;借出&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">      open=&#123;props.visible&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">name</span>=<span class="string">&quot;category&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label</span>=<span class="string">&quot;category&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">hidden</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">name</span>=<span class="string">&quot;boughtTime&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label</span>=<span class="string">&quot;boughtTime&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">hidden</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">name</span>=<span class="string">&quot;publishedTime&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label</span>=<span class="string">&quot;publishedTime&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">hidden</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">name</span>=<span class="string">&quot;classification&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label</span>=<span class="string">&quot;classification&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">hidden</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;name&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;书名&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;isbn&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;ISBN&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;publisher&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;出版社&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;author&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;作者&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;price&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;书籍价格&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;category&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;分类号&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormSelect</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;status&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">options</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">在架</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">在架</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">借出</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">借出</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;readerName&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;借阅人&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormDatePicker</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;borrowedTime&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;借出日期&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">initialValue</span>=<span class="string">&#123;moment()&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    &lt;/ModalForm &gt;</span></span><br><span class="line"><span class="language-xml">  );</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><h6 id="测试-4"><a href="#测试-4" class="headerlink" title="测试"></a>测试</h6><p>id为1的书籍目前在架</p><p><img src="E:\Files\Projects\CXCollege\software\Image\21.png" alt="21"></p><p>选择借出，并添加借阅人</p><p><img src="E:\Files\Projects\CXCollege\software\Image\22.png" alt="22"></p><p>书籍状态变为借出，并且借阅记录表格中新增一条记录</p><p><img src="E:\Files\Projects\CXCollege\software\Image\23.png" alt="23"></p><p><img src="E:\Files\Projects\CXCollege\software\Image\24.png" alt="24"></p><h4 id="2-判断借书不合理的操作"><a href="#2-判断借书不合理的操作" class="headerlink" title="2.判断借书不合理的操作"></a>2.判断借书不合理的操作</h4><h5 id="后端-5"><a href="#后端-5" class="headerlink" title="后端"></a>后端</h5><p>BookServiceImpl.java中的LendBook()函数开头添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 校验输入数据正确性</span></span><br><span class="line">BookLogUtils.validateBookLog(bookAndLogDTO.getBookLogDTO());</span><br><span class="line"><span class="comment">//书籍状态不是“在架”，则不能借出此书</span></span><br><span class="line">Assert.isTrue(bookAndLogDTO.getBookDTO().getStatus()!=<span class="string">&quot;在架&quot;</span>, <span class="string">&quot;书籍不在架&quot;</span>);</span><br><span class="line">BookUtils.validateBook(bookAndLogDTO.getBookDTO());</span><br></pre></td></tr></table></figure><p>BookLogUtils.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">validateBookLog</span><span class="params">(BookLogDTO bookLogDTO)</span> &#123;</span><br><span class="line">    FormatUtils.trimFieldToNull(bookLogDTO);</span><br><span class="line">    Assert.hasText(bookLogDTO.getReaderName(), <span class="string">&quot;借阅人不能为空&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="前端-5"><a href="#前端-5" class="headerlink" title="前端"></a>前端</h5><p>前端若不做处理，虽然后端会assert断言错误，但是前端仍然会显示“借出成功”。此时，需要将其做以下修改</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">lendBook</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        message.<span class="title function_">success</span>(<span class="string">&#x27;借出成功&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-一次借多本书"><a href="#3-一次借多本书" class="headerlink" title="3.一次借多本书"></a>3.一次借多本书</h4><h5 id="前端-6"><a href="#前端-6" class="headerlink" title="前端"></a>前端</h5><p>主页面修改之前数组的第一个元素为所有数组</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setBookLog</span>(records);</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ModalForm</span>, <span class="title class_">ProForm</span>, <span class="title class_">ProFormInstance</span>, <span class="title class_">ProFormSelect</span>, <span class="title class_">ProFormText</span>, <span class="title class_">ProFormDatePicker</span>, <span class="title class_">ProTable</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/pro-components&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; message, <span class="title class_">Switch</span>, <span class="title class_">Tooltip</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useEffect, useRef, useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; waitTime &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; lendBooks &#125; <span class="keyword">from</span> <span class="string">&#x27;@/services/api/book&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">&#x27;dayjs&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">InputDialogProps</span> &#123;</span><br><span class="line">  detailData?: <span class="variable constant_">API</span>.<span class="property">BookDTO</span>[];</span><br><span class="line">  <span class="attr">visible</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">onClose</span>: <span class="function">(<span class="params">result: <span class="built_in">boolean</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">InputDialog</span>(<span class="params">props: InputDialogProps</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> form = useRef&lt;<span class="title class_">ProFormInstance</span>&gt;(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 222222222注意两dialog中有两种类型</span></span><br><span class="line">  <span class="comment">// 注意不同位置注释语法不同，不要被坑了</span></span><br><span class="line">  <span class="keyword">const</span> [formData, setFormData] = useState&lt;<span class="variable constant_">API</span>.<span class="property">BookDTO</span>[]&gt;([]);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;formData&quot;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(formData)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">waitTime</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">setFieldsValue</span>(props.<span class="property">detailData</span>);</span><br><span class="line">        <span class="title function_">setFormData</span>(props.<span class="property">detailData</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">resetFields</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, [props.<span class="property">detailData</span>, props.<span class="property">visible</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onFinish</span> = <span class="keyword">async</span> (<span class="params">values: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; readerName,borrowedTime,returnTime &#125; = values;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">bookDTOArray</span>: <span class="variable constant_">API</span>.<span class="property">BookDTO</span>[] = [];</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">bookLogDTOArray</span>: <span class="variable constant_">API</span>.<span class="property">BookLogDTO</span>[] = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用forEach()方法遍历formData数组，将每个元素转换为一个包含书籍信息的DTO对象（bookDTO），</span></span><br><span class="line"><span class="comment">     * 并将其添加到bookDTOArray数组中。</span></span><br><span class="line"><span class="comment">     * 还将每个元素的借阅日志信息转换为一个包含借阅日志的DTO对象（bookLogDTO），</span></span><br><span class="line"><span class="comment">     * 并将其添加到bookLogDTOArray数组中。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    formData.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//将一个包含书籍信息的DTO对象添加到bookDTOArray数组</span></span><br><span class="line">      bookDTOArray.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">id</span>: item.<span class="property">id</span>,</span><br><span class="line">        <span class="attr">name</span>: item.<span class="property">name</span>,</span><br><span class="line">        <span class="attr">isbn</span>: item.<span class="property">isbn</span>,</span><br><span class="line">        <span class="attr">author</span>: item.<span class="property">author</span>,</span><br><span class="line">        <span class="attr">publisher</span>: item.<span class="property">publisher</span>,</span><br><span class="line">        <span class="attr">price</span>: item.<span class="property">price</span>,</span><br><span class="line">        <span class="attr">category</span>: item.<span class="property">category</span>,</span><br><span class="line">        <span class="attr">boughtTime</span>: item.<span class="property">boughtTime</span>,</span><br><span class="line">        <span class="attr">publishedTime</span>: item.<span class="property">publishedTime</span>,</span><br><span class="line">        <span class="attr">status</span>: item.<span class="property">status</span>,</span><br><span class="line">        <span class="attr">classification</span>: item.<span class="property">classification</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      bookLogDTOArray.<span class="title function_">push</span>(&#123;</span><br><span class="line">        readerName,</span><br><span class="line">        <span class="attr">bookId</span>: item.<span class="property">id</span>,</span><br><span class="line">        <span class="attr">bookName</span>: item.<span class="property">name</span>,</span><br><span class="line">        <span class="attr">bookIsbn</span>: item.<span class="property">isbn</span>,</span><br><span class="line">        <span class="attr">borrowedTime</span>:borrowedTime,</span><br><span class="line">        <span class="attr">returnTime</span>: returnTime||<span class="literal">null</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * bookDTOArray和bookLogDTOArray数组中的元素一一对应，</span></span><br><span class="line"><span class="comment">     * 可以通过它们的索引值将它们组合成一个新的DTO对象（bookAndLogDTO）并返回给后端。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">const</span> <span class="attr">data</span>: <span class="variable constant_">API</span>.<span class="property">BookAndLogDTO</span>[] = bookDTOArray.<span class="title function_">map</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">bookDTO</span>: item,</span><br><span class="line">      <span class="attr">bookLogDTO</span>: bookLogDTOArray[index]</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;data&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">    <span class="comment">// 1111111111setFormData(props.detailData);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">lendBooks</span>(data);</span><br><span class="line">        <span class="comment">// setFormData([]);</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        message.<span class="title function_">error</span>(<span class="string">&#x27;借出失败&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    props.<span class="title function_">onClose</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ModalForm</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">width</span>=<span class="string">&#123;700&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onFinish</span>=<span class="string">&#123;onFinish&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">formRef</span>=<span class="string">&#123;form&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">modalProps</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">destroyOnClose:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onCancel:</span> () =&gt;</span> props.onClose(false),</span></span><br><span class="line"><span class="language-xml">      &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      title=&#123;props.detailData ? &#x27;借出&#x27; : &#x27;借出&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">      open=&#123;props.visible&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&#123;</span>`<span class="attr">readerName</span>`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;借阅人&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">rules</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">请输入借阅人姓名</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormDatePicker</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&#123;</span>`<span class="attr">borrowedTime</span>`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;借出日期&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">initialValue</span>=<span class="string">&#123;moment()&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProTable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">dataSource</span>=<span class="string">&#123;formData&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">columns</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#123; <span class="attr">title:</span> &#x27;<span class="attr">书名</span>&#x27;, <span class="attr">dataIndex:</span> &#x27;<span class="attr">name</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#123; <span class="attr">title:</span> &#x27;<span class="attr">出版社</span>&#x27;, <span class="attr">dataIndex:</span> &#x27;<span class="attr">publisher</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#123; <span class="attr">title:</span> &#x27;<span class="attr">作者</span>&#x27;, <span class="attr">dataIndex:</span> &#x27;<span class="attr">author</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#123; <span class="attr">title:</span> &#x27;<span class="attr">ISBN</span>&#x27;, <span class="attr">dataIndex:</span> &#x27;<span class="attr">isbn</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">options</span>=<span class="string">&#123;false&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">search</span>=<span class="string">&#123;false&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">cardBordered</span>=<span class="string">&#123;false&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ModalForm</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="后端-6"><a href="#后端-6" class="headerlink" title="后端"></a>后端</h5><p>修改lendBooks传入参数为一个数组，通过for循环遍历一次还书</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lendBooks</span><span class="params">(BookAndLogDTO[] bookAndLogDTO)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;bookAndLogDTO.length;i++)&#123;</span><br><span class="line">        <span class="type">BookAndLogDTO</span> <span class="variable">bookLogDTO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookAndLogDTO</span>();</span><br><span class="line">        BeanUtils.copyProperties(bookAndLogDTO[i], bookLogDTO);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//书籍状态不是“在架”，报错</span></span><br><span class="line">        Assert.isTrue(bookLogDTO.getBookDTO().getStatus().equals(<span class="string">&quot;在架&quot;</span>),<span class="string">&quot;书籍不在架&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建实体对象，用以保存到数据库</span></span><br><span class="line">        <span class="type">BookLog</span> <span class="variable">log</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookLog</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将输入的字段全部复制到实体对象中</span></span><br><span class="line">        <span class="comment">//将两个DTO中的数据传递到log中，便于使用bookLogMapper中的insert函数</span></span><br><span class="line">        BeanUtils.copyProperties(BookLogUtils.convertToDTO(bookLogDTO),log);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用DAO方法保存到数据库表</span></span><br><span class="line">        bookLogMapper.insert(log);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//修改书籍状态为借出</span></span><br><span class="line">        bookLogDTO.getBookDTO().setStatus(<span class="string">&quot;借出&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新书籍状态</span></span><br><span class="line">        updateBook(bookLogDTO.getBookDTO());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="还书"><a href="#还书" class="headerlink" title="还书"></a>还书</h3><p>实现了一次还多本书</p><h4 id="前端-7"><a href="#前端-7" class="headerlink" title="前端"></a>前端</h4><p>主页面index</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个一次还多本书的的回调函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">returnBooks</span> = <span class="keyword">async</span> (<span class="params">bookLog: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; bookLog.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="title function_">returnBook</span>(bookLog[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">selectRow</span>([]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个还书的回调函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleReturn</span> = <span class="keyword">async</span> (<span class="params">bookLog: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (!selectedRowKeys?.<span class="property">length</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title function_">openConfirm</span>(<span class="string">`您确定归还<span class="subst">$&#123;selectedRowKeys.length&#125;</span>本书吗`</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">returnBooks</span>(bookLog);</span><br><span class="line">        refAction.<span class="property">current</span>?.<span class="title function_">reload</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Button</span></span><br><span class="line"><span class="keyword">type</span>=<span class="string">&quot;primary&quot;</span></span><br><span class="line">key=<span class="string">&quot;primary&quot;</span></span><br><span class="line">onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">handleReturn</span>(bookLog);</span><br><span class="line">&#125;&#125;</span><br><span class="line">disabled=&#123;!selectedRowKeys?.<span class="property">length</span>&#125;</span><br><span class="line">&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">LoginOutlined</span> /&gt;</span></span>  还书</span><br><span class="line">&lt;/<span class="title class_">Button</span>&gt;,</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rowSelection=&#123;&#123;</span><br><span class="line">              <span class="attr">onChange</span>: <span class="function">(<span class="params">rowKeys, records</span>) =&gt;</span> &#123;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;records&quot;</span>);</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(records);</span><br><span class="line">                  <span class="title function_">setBookLog</span>(records);</span><br><span class="line">                  <span class="title function_">selectRow</span>(rowKeys <span class="keyword">as</span> <span class="built_in">number</span>[]);</span><br><span class="line">              &#125;,</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>InputDialog.tsx修改为如下</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ModalForm</span>, <span class="title class_">ProForm</span>, <span class="title class_">ProFormInstance</span>, <span class="title class_">ProFormSelect</span>, <span class="title class_">ProFormText</span>, <span class="title class_">ProFormDatePicker</span>, <span class="title class_">ProTable</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/pro-components&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; message, <span class="title class_">Switch</span>, <span class="title class_">Tooltip</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useEffect, useRef, useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; waitTime &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; lendBook, lendBooks &#125; <span class="keyword">from</span> <span class="string">&#x27;@/services/api/book&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">&#x27;dayjs&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">InputDialogProps</span> &#123;</span><br><span class="line">  detailData?: <span class="variable constant_">API</span>.<span class="property">BookDTO</span>[];</span><br><span class="line">  <span class="attr">visible</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">onClose</span>: <span class="function">(<span class="params">result: <span class="built_in">boolean</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">InputDialog</span>(<span class="params">props: InputDialogProps</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> form = useRef&lt;<span class="title class_">ProFormInstance</span>&gt;(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">const</span> [<span class="keyword">readonly</span>, setReadonly] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 222222222注意两dialog中有两种类型</span></span><br><span class="line">  <span class="comment">// 注意不同位置注释语法不同，不要被坑了</span></span><br><span class="line">  <span class="keyword">const</span> [formData, setFormData] = useState&lt;<span class="variable constant_">API</span>.<span class="property">BookDTO</span>[]&gt;([]);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;formData&quot;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(formData)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">waitTime</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">setFieldsValue</span>(props.<span class="property">detailData</span>);</span><br><span class="line">        <span class="title function_">setFormData</span>(props.<span class="property">detailData</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        form?.<span class="property">current</span>?.<span class="title function_">resetFields</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, [props.<span class="property">detailData</span>, props.<span class="property">visible</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onFinish</span> = <span class="keyword">async</span> (<span class="params">values: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; readerName,borrowedTime,returnTime &#125; = values;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">bookDTOArray</span>: <span class="variable constant_">API</span>.<span class="property">BookDTO</span>[] = [];</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">bookLogDTOArray</span>: <span class="variable constant_">API</span>.<span class="property">BookLogDTO</span>[] = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用forEach()方法遍历formData数组，将每个元素转换为一个包含书籍信息的DTO对象（bookDTO），</span></span><br><span class="line"><span class="comment">     * 并将其添加到bookDTOArray数组中。</span></span><br><span class="line"><span class="comment">     * 还将每个元素的借阅日志信息转换为一个包含借阅日志的DTO对象（bookLogDTO），</span></span><br><span class="line"><span class="comment">     * 并将其添加到bookLogDTOArray数组中。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    formData.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//将一个包含书籍信息的DTO对象添加到bookDTOArray数组</span></span><br><span class="line">      bookDTOArray.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">id</span>: item.<span class="property">id</span>,</span><br><span class="line">        <span class="attr">name</span>: item.<span class="property">name</span>,</span><br><span class="line">        <span class="attr">isbn</span>: item.<span class="property">isbn</span>,</span><br><span class="line">        <span class="attr">author</span>: item.<span class="property">author</span>,</span><br><span class="line">        <span class="attr">publisher</span>: item.<span class="property">publisher</span>,</span><br><span class="line">        <span class="attr">price</span>: item.<span class="property">price</span>,</span><br><span class="line">        <span class="attr">category</span>: item.<span class="property">category</span>,</span><br><span class="line">        <span class="attr">boughtTime</span>: item.<span class="property">boughtTime</span>,</span><br><span class="line">        <span class="attr">publishedTime</span>: item.<span class="property">publishedTime</span>,</span><br><span class="line">        <span class="attr">status</span>: item.<span class="property">status</span>,</span><br><span class="line">        <span class="attr">classification</span>: item.<span class="property">classification</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      bookLogDTOArray.<span class="title function_">push</span>(&#123;</span><br><span class="line">        readerName,</span><br><span class="line">        <span class="attr">bookId</span>: item.<span class="property">id</span>,</span><br><span class="line">        <span class="attr">bookName</span>: item.<span class="property">name</span>,</span><br><span class="line">        <span class="attr">bookIsbn</span>: item.<span class="property">isbn</span>,</span><br><span class="line">        <span class="attr">borrowedTime</span>:borrowedTime,</span><br><span class="line">        <span class="attr">returnTime</span>: returnTime||<span class="literal">null</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * bookDTOArray和bookLogDTOArray数组中的元素一一对应，</span></span><br><span class="line"><span class="comment">     * 可以通过它们的索引值将它们组合成一个新的DTO对象（bookAndLogDTO）并返回给后端。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">const</span> <span class="attr">data</span>: <span class="variable constant_">API</span>.<span class="property">BookAndLogDTO</span>[] = bookDTOArray.<span class="title function_">map</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">bookDTO</span>: item,</span><br><span class="line">      <span class="attr">bookLogDTO</span>: bookLogDTOArray[index]</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;data&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">    <span class="comment">// 1111111111setFormData(props.detailData);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">lendBooks</span>(data);</span><br><span class="line">        <span class="comment">// setFormData([]);</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        message.<span class="title function_">error</span>(<span class="string">&#x27;借出失败&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    props.<span class="title function_">onClose</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ModalForm</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">width</span>=<span class="string">&#123;700&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onFinish</span>=<span class="string">&#123;onFinish&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">formRef</span>=<span class="string">&#123;form&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">modalProps</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">destroyOnClose:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onCancel:</span> () =&gt;</span> props.onClose(false),</span></span><br><span class="line"><span class="language-xml">      &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      title=&#123;props.detailData ? &#x27;借出&#x27; : &#x27;借出&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">      open=&#123;props.visible&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProForm.Group</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormText</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&#123;</span>`<span class="attr">readerName</span>`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;借阅人&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">rules</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">required:</span> <span class="attr">true</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message:</span> &#x27;<span class="attr">请输入借阅人姓名</span>！&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProFormDatePicker</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&#123;</span>`<span class="attr">borrowedTime</span>`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;借出日期&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">initialValue</span>=<span class="string">&#123;moment()&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProForm.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProTable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">dataSource</span>=<span class="string">&#123;formData&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">columns</span>=<span class="string">&#123;[</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#123; <span class="attr">title:</span> &#x27;<span class="attr">书名</span>&#x27;, <span class="attr">dataIndex:</span> &#x27;<span class="attr">name</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#123; <span class="attr">title:</span> &#x27;<span class="attr">出版社</span>&#x27;, <span class="attr">dataIndex:</span> &#x27;<span class="attr">publisher</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#123; <span class="attr">title:</span> &#x27;<span class="attr">作者</span>&#x27;, <span class="attr">dataIndex:</span> &#x27;<span class="attr">author</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#123; <span class="attr">title:</span> &#x27;<span class="attr">ISBN</span>&#x27;, <span class="attr">dataIndex:</span> &#x27;<span class="attr">isbn</span>&#x27; &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        ]&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">options</span>=<span class="string">&#123;false&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">search</span>=<span class="string">&#123;false&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">cardBordered</span>=<span class="string">&#123;false&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ModalForm</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="后端-7"><a href="#后端-7" class="headerlink" title="后端"></a>后端</h4><p>BookService.java添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">lendBook</span><span class="params">(BookAndLogDTO bookAndLogDTO)</span>;</span><br></pre></td></tr></table></figure><p>Impl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">returnBook</span><span class="params">(BookDTO bookDTO)</span>&#123;</span><br><span class="line">    <span class="comment">//只有书籍状态不是“借出”，则报错</span></span><br><span class="line">    Assert.isTrue(bookDTO.getStatus().equals(<span class="string">&quot;借出&quot;</span>), <span class="string">&quot;书籍未借出&quot;</span>);</span><br><span class="line">    <span class="comment">//修改书籍状态为借出</span></span><br><span class="line">    bookDTO.setStatus(<span class="string">&quot;在架&quot;</span>);</span><br><span class="line">    <span class="comment">//更新书籍状态</span></span><br><span class="line">    updateBook(bookDTO);</span><br><span class="line">    <span class="comment">//补充对应借阅日志的还书日期</span></span><br><span class="line">    bookLogMapper.insertTime(bookDTO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookController.java添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;returnBook&quot;)</span></span><br><span class="line"><span class="meta">@Privilege(&quot;return&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">returnBook</span><span class="params">(<span class="meta">@RequestBody</span> BookDTO bookDTO)</span> &#123;</span><br><span class="line">    bookService.returnBook(bookDTO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookLogMapper.xml中添加对应语句，实现自动为匹配的最新的对应书籍添加还书日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 获取对应借出书籍的日志记录 --&gt;</span><br><span class="line">&lt;update id=&quot;insertTime&quot; parameterType=&quot;java.lang.Integer&quot;&gt;</span><br><span class="line">  update book_log</span><br><span class="line">  set return_time = now()</span><br><span class="line">  where book_id = #&#123;id,jdbcType=INTEGER&#125;</span><br><span class="line">  order by id desc</span><br><span class="line">  limit 1</span><br><span class="line">&lt;/update&gt;</span><br></pre></td></tr></table></figure><p>BookLogMapper.java中添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新部门数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bookDTO 部门输入对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 部门编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">Integer <span class="title function_">insertTime</span><span class="params">(BookDTO bookDTO)</span>;</span><br></pre></td></tr></table></figure><h3 id="图表展示"><a href="#图表展示" class="headerlink" title="图表展示"></a>图表展示</h3><p>ts直接连接mysql表格</p><h2 id="5-问题"><a href="#5-问题" class="headerlink" title="5.问题"></a>5.问题</h2><h3 id="1-分页查询后端xml修改错误"><a href="#1-分页查询后端xml修改错误" class="headerlink" title="1.分页查询后端xml修改错误"></a>1.<del>分页查询后端xml修改错误</del></h3><p>照着课程视频跑分页查询的时候出现了如图报错，后端刚开始就会停止执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 获取名字 --&gt;</span><br><span class="line">    &lt;select id=&quot;getByName&quot; resultType=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">        select  *</span><br><span class="line">        from department</span><br><span class="line">        where department_name = *&#123;name&#125;</span><br><span class="line">    &lt;/select&gt;</span><br></pre></td></tr></table></figure><p><img src="E:\Files\Projects\CXCollege\software\Image\8.png" alt="8"></p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ul><li><h5 id="使用reultMap-时可以用-“BaseResultMap”"><a href="#使用reultMap-时可以用-“BaseResultMap”" class="headerlink" title="使用reultMap 时可以用 “BaseResultMap”"></a>使用reultMap 时可以用 “BaseResultMap”</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reultMap =&quot;BaseResultMap&quot;</span><br></pre></td></tr></table></figure><ul><li><h5 id="或使用-resultType-要写类的全名（包含包名）"><a href="#或使用-resultType-要写类的全名（包含包名）" class="headerlink" title="或使用 resultType 要写类的全名（包含包名）"></a>或使用 resultType 要写类的全名（包含包名）</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resultType=&quot;redlib.backend.model.Book&quot;</span><br></pre></td></tr></table></figure><h3 id="2-时间格式不正确"><a href="#2-时间格式不正确" class="headerlink" title="2.时间格式不正确"></a>2.<del>时间格式不正确</del></h3><p>使用以下方法添加注解的时候，Swagger中会出现多条时间的json信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Date BookBoutime;</span><br></pre></td></tr></table></figure><img src="E:\Files\Projects\CXCollege\software\Image\4.png" alt="4" style="zoom:125%;" /><p>此外，在前端生成DTO类时也发现会生成多条时间</p><img src="E:\Files\Projects\CXCollege\software\Image\7.png" alt="7"  /><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>后端DTO命名不规范</p><h4 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h4><p>将变量命名使用驼峰结构，与Book.java同步之后解决问题（以上所有代码适当微调）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redlib.backend.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDTO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String isbn;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">private</span> String publisher;</span><br><span class="line">    <span class="keyword">private</span> Double price;</span><br><span class="line">    <span class="keyword">private</span> String category;</span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date boughtTime;</span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date publishedTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-selectedRowKeys删除问题"><a href="#3-selectedRowKeys删除问题" class="headerlink" title="3.selectedRowKeys删除问题"></a>3.<del>selectedRowKeys删除问题</del></h3><p>测试前端时发现删除某一行时会选中所有图书</p><h4 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h4><p>由于在 InputDialog\index.tsx 中修改为</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">data</span>: <span class="variable constant_">API</span>.<span class="property">BookDTO</span> = &#123;</span><br><span class="line">    <span class="attr">bookId</span>: props.<span class="property">detailData</span>?.<span class="property">bookId</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="解决方案-2"><a href="#解决方案-2" class="headerlink" title="解决方案"></a>解决方案</h4><p>需要修改 rowKey 如下</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">actionRef=&#123;refAction&#125;</span><br><span class="line">rowKey=<span class="string">&quot;bookId&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-价格使用Decimal无法显示"><a href="#4-价格使用Decimal无法显示" class="headerlink" title="4.价格使用Decimal无法显示"></a>4.<del>价格使用Decimal无法显示</del></h3><p>书籍价格使用Decimal类型的时候，前端新增正常，但是对某一本书修改参数时，无法显示价格</p><h4 id="解决方案-3"><a href="#解决方案-3" class="headerlink" title="解决方案"></a>解决方案</h4><p>原因未知，有两种修改方法</p><p>1.MySQL，前后端同时修改为Integer，尝试设置小数位数为2，可以解决显示问题，但无法显示小数。</p><p>2.MySQL，前后端同时修改为Double，同时设置小数位数为2，测试发现可以解决显示问题，并解决价格无法显示小数问题。</p><h3 id="5-Mysql设置主键自增，删除数据后，主键id依然从删除位置增加"><a href="#5-Mysql设置主键自增，删除数据后，主键id依然从删除位置增加" class="headerlink" title="5.Mysql设置主键自增，删除数据后，主键id依然从删除位置增加"></a>5.<del>Mysql设置主键自增，删除数据后，主键id依然从删除位置增加</del></h3><h4 id="不是问题，无需解决"><a href="#不是问题，无需解决" class="headerlink" title="不是问题，无需解决"></a>不是问题，无需解决</h4><h3 id="6-前端无法实现查询书籍"><a href="#6-前端无法实现查询书籍" class="headerlink" title="6.前端无法实现查询书籍"></a>6.<del>前端无法实现查询书籍</del></h3><h4 id="原因-2"><a href="#原因-2" class="headerlink" title="原因"></a>原因</h4><p>修改MySQL表格时，xml文件忘记同步更改，修改后成功实现查询</p><h4 id="解决方案-4"><a href="#解决方案-4" class="headerlink" title="解决方案"></a>解决方案</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 获取名字个数(分页) --&gt;</span><br><span class="line"> &lt;select id=&quot;count&quot; resultType=&quot;integer&quot;&gt;</span><br><span class="line">   select count(*)</span><br><span class="line">   from book</span><br><span class="line">   &lt;where&gt;</span><br><span class="line">     &lt;if test=&quot;name != null&quot;&gt;</span><br><span class="line">       name like #&#123;name&#125;</span><br><span class="line">     &lt;/if&gt;</span><br><span class="line">   &lt;/where&gt;</span><br><span class="line"> &lt;/select&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!-- 获取书籍(分页) --&gt;</span><br><span class="line"> &lt;select id=&quot;list&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">   select</span><br><span class="line">   &lt;include refid=&quot;Base_Column_List&quot;/&gt;</span><br><span class="line">   from book</span><br><span class="line">   &lt;where&gt;</span><br><span class="line">     &lt;if test=&quot;queryDTO.name != null&quot;&gt;</span><br><span class="line">       name like #&#123;queryDTO.name&#125;</span><br><span class="line">     &lt;/if&gt;</span><br><span class="line">   &lt;/where&gt;</span><br><span class="line">   limit #&#123;offset&#125;, #&#123;limit&#125;</span><br><span class="line"> &lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="7-BookLog中list方法执行时报错"><a href="#7-BookLog中list方法执行时报错" class="headerlink" title="7.BookLog中list方法执行时报错"></a>7.<del>BookLog中list方法执行时报错</del></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">There is no getter <span class="keyword">for</span> property named <span class="string">&#x27;book_id&#x27;</span> in <span class="string">&#x27;class redlib.backend.dto.query.BookLogQueryDTO</span></span><br></pre></td></tr></table></figure><h4 id="原因-3"><a href="#原因-3" class="headerlink" title="原因"></a>原因</h4><p>MySQL中分页查询参数设置错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 获取名字个数(分页) --&gt;</span><br><span class="line">&lt;select id=&quot;count&quot; resultType=&quot;integer&quot;&gt;</span><br><span class="line">  select count(*)</span><br><span class="line">  from book_log</span><br><span class="line">  &lt;where&gt;</span><br><span class="line">    &lt;if test=&quot;id != null&quot;&gt;</span><br><span class="line">      id like #&#123;id&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">  &lt;/where&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h4 id="解决方案-5"><a href="#解决方案-5" class="headerlink" title="解决方案"></a>解决方案</h4><p>修改为book_log列表中的id改为bookName字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 获取名字个数(分页) --&gt;</span><br><span class="line">&lt;select id=&quot;count&quot; resultType=&quot;integer&quot;&gt;</span><br><span class="line">  select count(*)</span><br><span class="line">  from book_log</span><br><span class="line">  &lt;where&gt;</span><br><span class="line">    &lt;if test=&quot;bookName != null&quot;&gt;</span><br><span class="line">      book_name like #&#123;bookName&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">  &lt;/where&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="8-swagger中测试删除booklog时报错"><a href="#8-swagger中测试删除booklog时报错" class="headerlink" title="8.swagger中测试删除booklog时报错"></a>8.<del>swagger中测试删除booklog时报错</del></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invalid bound <span class="title function_">statement</span> <span class="params">(not found)</span>: redlib.backend.dao.BookLogMapper.deleteByCodes</span><br></pre></td></tr></table></figure><h4 id="原因-4"><a href="#原因-4" class="headerlink" title="原因"></a>原因</h4><p>xml文件中忘记添加MySQL语句</p><h4 id="解决方案-6"><a href="#解决方案-6" class="headerlink" title="解决方案"></a>解决方案</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 批量删除 --&gt;</span><br><span class="line">&lt;update id=&quot;deleteByCodes&quot;&gt;</span><br><span class="line">  delete from book</span><br><span class="line">  where id in</span><br><span class="line">  &lt;foreach item=&quot;item&quot; index=&quot;index&quot; collection=&quot;codeList&quot; open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</span><br><span class="line">    #&#123;item&#125;</span><br><span class="line">  &lt;/foreach&gt;</span><br><span class="line">&lt;/update&gt;</span><br></pre></td></tr></table></figure><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>此函数在日志记录中不太需要，后续考虑删除</p><h3 id="9-分页查询，多种条件同时查找时没找到对象会报错"><a href="#9-分页查询，多种条件同时查找时没找到对象会报错" class="headerlink" title="9.分页查询，多种条件同时查找时没找到对象会报错"></a>9.<del>分页查询，多种条件同时查找时没找到对象会报错</del></h3><h4 id="原因-5"><a href="#原因-5" class="headerlink" title="原因"></a>原因</h4><p>sql语句中，当两个if 都不等于null的时候，两个sql语句由于没有东西连接起来，会产生报错</p><h4 id="解决方案-7"><a href="#解决方案-7" class="headerlink" title="解决方案"></a>解决方案</h4><p>在每个检索的 sql 语句前添加使用 and 连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;list&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">  select</span><br><span class="line">  &lt;include refid=&quot;Base_Column_List&quot;/&gt;</span><br><span class="line">  from book_log</span><br><span class="line">  &lt;where&gt;</span><br><span class="line">    &lt;if test=&quot;queryDTO.readerName != null&quot;&gt;</span><br><span class="line">      and reader_name like #&#123;queryDTO.readerName&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;queryDTO.bookIsbn != null&quot;&gt;</span><br><span class="line">      and book_isbn like #&#123;queryDTO.bookIsbn&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;queryDTO.bookId != null&quot;&gt;</span><br><span class="line">      and book_id like #&#123;queryDTO.bookId&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;queryDTO.bookName != null&quot;&gt;</span><br><span class="line">      and book_name like #&#123;queryDTO.bookName&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">  &lt;/where&gt;</span><br><span class="line">  &lt;if test=&quot;queryDTO.orderBy != null&quot;&gt;</span><br><span class="line">    order by $&#123;queryDTO.orderBy&#125;</span><br><span class="line">  &lt;/if&gt;</span><br><span class="line">  &lt;if test=&quot;queryDTO.orderBy == null&quot;&gt;</span><br><span class="line">    order by id desc</span><br><span class="line">  &lt;/if&gt;</span><br><span class="line">  limit #&#123;offset&#125;, #&#123;limit&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="10-书籍点借阅之后确定，发现两个表格中都会有字段丢失"><a href="#10-书籍点借阅之后确定，发现两个表格中都会有字段丢失" class="headerlink" title="10.书籍点借阅之后确定，发现两个表格中都会有字段丢失"></a>10.<del>书籍点借阅之后确定，发现两个表格中都会有字段丢失</del></h3><h4 id="原因-6"><a href="#原因-6" class="headerlink" title="原因"></a>原因</h4><p>前端代码底层为将选中行中的数据传递给对话框，然后对话框再传递给后端进行更新</p><h4 id="解决方案-8"><a href="#解决方案-8" class="headerlink" title="解决方案"></a>解决方案</h4><p>主页面向对话框中传递数据时传递全部数据，后端使用hidden属性，隐藏不需要的表格，即可实现传递数据又不显示</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">ProFormText</span></span><br><span class="line">name=<span class="string">&quot;classification&quot;</span></span><br><span class="line">label=<span class="string">&quot;classification&quot;</span></span><br><span class="line">hidden</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><h3 id="11-借书时无法向对话框传递参数"><a href="#11-借书时无法向对话框传递参数" class="headerlink" title="11.借书时无法向对话框传递参数"></a>11.<del>借书时无法向对话框传递参数</del></h3><h4 id="原因-7"><a href="#原因-7" class="headerlink" title="原因"></a>原因</h4><p>一开始将typescripts列表的起始下标与MySQL记混，以为也是从1开始，代码如下</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setBookLog</span>(records[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><h4 id="解决方案-9"><a href="#解决方案-9" class="headerlink" title="解决方案"></a>解决方案</h4><p>typescripts列表的起始下标从0开始，修改records下标为0（首个元素）</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setBookLog</span>(records[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h3 id="12-多余接口删除（暂未解决，后需考虑）"><a href="#12-多余接口删除（暂未解决，后需考虑）" class="headerlink" title="12.多余接口删除（暂未解决，后需考虑）"></a>12.<del>多余接口删除（暂未解决，后需考虑）</del></h3><p>由于BookLog后端框架为Book复制修改，许多没必要存在的接口后续考虑删除（此处就暂时未写接口文档）</p><h3 id="13-lendBook函数报错"><a href="#13-lendBook函数报错" class="headerlink" title="13.lendBook函数报错"></a>13.<del>lendBook函数报错</del></h3><p>报错如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.validation.BeanPropertyBindingResult<span class="punctuation">:</span> <span class="number">2</span> errors Field error in object &#x27;bookDTO&#x27; on field &#x27;boughtTime&#x27;<span class="punctuation">:</span> rejected value <span class="punctuation">[</span><span class="number">2023</span><span class="number">-04</span><span class="number">-01</span><span class="punctuation">]</span>; codes <span class="punctuation">[</span>typeMismatch.bookDTO.boughtTime<span class="punctuation">,</span>typeMismatch.boughtTime<span class="punctuation">,</span>typeMismatch.java.util.Date<span class="punctuation">,</span>typeMismatch<span class="punctuation">]</span>; arguments <span class="punctuation">[</span>org.springframework.context.support.DefaultMessageSourceResolvable<span class="punctuation">:</span> codes <span class="punctuation">[</span>bookDTO.boughtTime<span class="punctuation">,</span>boughtTime<span class="punctuation">]</span>; arguments <span class="punctuation">[</span><span class="punctuation">]</span>; default message <span class="punctuation">[</span>boughtTime<span class="punctuation">]</span><span class="punctuation">]</span>; default message <span class="punctuation">[</span>Failed to convert property value of type &#x27;java.lang.String&#x27; to required type &#x27;java.util.Date&#x27; for property &#x27;boughtTime&#x27;; Failed to convert from type <span class="punctuation">[</span>java.lang.String<span class="punctuation">]</span> to type <span class="punctuation">[</span>@com.fasterxml.jackson.annotation.JsonFormat java.util.Date<span class="punctuation">]</span> for value &#x27;<span class="number">2023</span><span class="number">-04</span><span class="number">-01</span>&#x27;<span class="punctuation">]</span> Field error in object &#x27;bookDTO&#x27; on field &#x27;publishedTime&#x27;<span class="punctuation">:</span> rejected value <span class="punctuation">[</span><span class="number">2023</span><span class="number">-04</span><span class="number">-01</span><span class="punctuation">]</span>; codes <span class="punctuation">[</span>typeMismatch.bookDTO.publishedTime<span class="punctuation">,</span>typeMismatch.publishedTime<span class="punctuation">,</span>typeMismatch.java.util.Date<span class="punctuation">,</span>typeMismatch<span class="punctuation">]</span>; arguments <span class="punctuation">[</span>org.springframework.context.support.DefaultMessageSourceResolvable<span class="punctuation">:</span> codes <span class="punctuation">[</span>bookDTO.publishedTime<span class="punctuation">,</span>publishedTime<span class="punctuation">]</span>; arguments <span class="punctuation">[</span><span class="punctuation">]</span>; default message <span class="punctuation">[</span>publishedTime<span class="punctuation">]</span><span class="punctuation">]</span>; default message <span class="punctuation">[</span>Failed to convert property value of type &#x27;java.lang.String&#x27; to required type &#x27;java.util.Date&#x27; for property &#x27;publishedTime&#x27;; Failed to convert from type <span class="punctuation">[</span>java.lang.String<span class="punctuation">]</span> to type <span class="punctuation">[</span>@com.fasterxml.jackson.annotation.JsonFormat java.util.Date<span class="punctuation">]</span> for value &#x27;<span class="number">2023</span><span class="number">-04</span><span class="number">-01</span>&#x27;<span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h4 id="原因-8"><a href="#原因-8" class="headerlink" title="原因"></a>原因</h4><p>controller对应函数中忘记添加注解@RequestBody </p><h4 id="解决方案-10"><a href="#解决方案-10" class="headerlink" title="解决方案"></a>解决方案</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">returnBook</span><span class="params">(<span class="meta">@RequestBody</span> BookDTO bookDTO)</span> &#123;</span><br><span class="line">    bookService.returnBook(bookDTO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14-借出、归还Assert仍然不符合逻辑"><a href="#14-借出、归还Assert仍然不符合逻辑" class="headerlink" title="14.借出、归还Assert仍然不符合逻辑"></a>14.<del>借出、归还Assert仍然不符合逻辑</del></h3><p>借出的书本，仍然可以借出。在在架的书本，仍然可以归还。</p><blockquote><p>点还书按钮的时候，前端把书籍信息传递给后端，后端接收后首先用Assert判断书籍状态是否符合逻辑，然后修改为书籍状态为“在架”。但是我尝试发现不管怎么修改Assert语法（尝试过&#x3D;&#x3D;和！&#x3D;等），但发现都达不到想要的效果</p></blockquote><h4 id="原因-9"><a href="#原因-9" class="headerlink" title="原因"></a>原因</h4><p>java比较字符串相等，不能用&#x3D;&#x3D;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Assert.isTrue(bookDTO.getStatus()!=<span class="string">&quot;借出&quot;</span>, <span class="string">&quot;书籍在架！&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="解决方案-11"><a href="#解决方案-11" class="headerlink" title="解决方案"></a>解决方案</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只有书籍状态不是“借出”，则报错</span></span><br><span class="line"><span class="comment">//即，前表达式不成立时报错</span></span><br><span class="line">Assert.isTrue(bookDTO.getStatus().equals(<span class="string">&quot;借出&quot;</span>), <span class="string">&quot;书籍在架&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="15-借出成功后没有提示"><a href="#15-借出成功后没有提示" class="headerlink" title="15.借出成功后没有提示"></a>15.<del>借出成功后没有提示</del></h3><h4 id="原因-10"><a href="#原因-10" class="headerlink" title="原因"></a>原因</h4><p>由于后端返回值为void，await lendBooks(data)的返回值可能一直为undefined，导致无法判断</p><p>可能原因</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">根据提供的代码，似乎 try-catch 块只捕获在 await lendBooks(data) 调用期间发生的错误。任何在后端代码中发生的错误，例如 Assert 错误，都不会被这个 try-catch 块捕获。</span><br><span class="line"></span><br><span class="line">如果后端代码发生错误导致请求失败，那么 await lendBooks(data) 调用可能会拒绝并抛出一个错误，导致 catch 块执行并显示 &#x27;借出失败&#x27; 消息。但是，如果后端代码返回成功的响应，但是包含一个错误消息表示操作失败，那么 await lendBooks(data) 调用仍可能成功解析，并显示 &#x27;借出成功&#x27; 消息。</span><br><span class="line"></span><br><span class="line">为确保后端代码中的错误得到正确处理，重要的是在后端代码中也包括错误处理，并确保它返回适当的响应以指示成功或失败。此外，前端代码应更新以正确处理这些响应，并向用户显示适当的消息。</span><br></pre></td></tr></table></figure><p>后端使用assert即使success为false前端也会显示正确，即无论如何都会执行到，都会弹出此框</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">lendBooks</span>(data);</span><br><span class="line">    message.<span class="title function_">success</span>(<span class="string">&#x27;借出成功&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    message.<span class="title function_">error</span>(<span class="string">&#x27;借出失败&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解决方案-12"><a href="#解决方案-12" class="headerlink" title="解决方案"></a>解决方案</h4><h5 id="1-第一种解决方案（实际采用此种方案实现显示的效果，但不规范）"><a href="#1-第一种解决方案（实际采用此种方案实现显示的效果，但不规范）" class="headerlink" title="1.第一种解决方案（实际采用此种方案实现显示的效果，但不规范）"></a>1.第一种解决方案（实际采用此种方案实现显示的效果，但不规范）</h5><p>前端通过遍历借还多本书，并且判断书籍状态（即通过前端模拟后端Assert功能）</p><p>借书</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(data[i].<span class="property">bookDTO</span>?.<span class="property">status</span>===<span class="string">&quot;在架&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">await</span> <span class="title function_">lendBooks</span>(data[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            sum = sum+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum!==<span class="number">0</span>)&#123;</span><br><span class="line">        message.<span class="title function_">error</span>(<span class="string">`共<span class="subst">$&#123;sum&#125;</span>本书借出失败`</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        message.<span class="title function_">success</span>(<span class="string">`借出成功`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还书</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个一次还多本书的的回调函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">returnBooks</span> = <span class="keyword">async</span> (<span class="params">bookLog: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; bookLog.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(bookLog[i].<span class="property">status</span> ===<span class="string">&quot;借出&quot;</span>)&#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">returnBook</span>(bookLog[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      sum = sum+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(sum!==<span class="number">0</span>)&#123;</span><br><span class="line">    message.<span class="title function_">error</span>(<span class="string">`共<span class="subst">$&#123;sum&#125;</span>本书归还失败,<span class="subst">$&#123;bookLog.length-sum&#125;</span>本书归还成功`</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    message.<span class="title function_">success</span>(<span class="string">`归还成功`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">selectRow</span>([]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个还书的回调函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleReturn</span> = <span class="keyword">async</span> (<span class="params">bookLog: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!selectedRowKeys?.<span class="property">length</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="title function_">openConfirm</span>(<span class="string">`您确定归还<span class="subst">$&#123;selectedRowKeys.length&#125;</span>本书吗`</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">returnBooks</span>(bookLog);</span><br><span class="line">    refAction.<span class="property">current</span>?.<span class="title function_">reload</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="2-第二种解决方案（更加推荐，规范，但不知道怎么实现显示效果）"><a href="#2-第二种解决方案（更加推荐，规范，但不知道怎么实现显示效果）" class="headerlink" title="2.第二种解决方案（更加推荐，规范，但不知道怎么实现显示效果）"></a>2.第二种解决方案（更加推荐，规范，但不知道怎么实现显示效果）</h4><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(props.<span class="property">detailsData</span>)&#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">updateDepartment</span>(date,&#123;<span class="attr">throwError</span>:<span class="literal">true</span>&#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        pass</span><br><span class="line">    &#125;<span class="keyword">catch</span>(ex)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//表示报错不执行任何操作</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以下为不报错时顺序执行的代码</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="16-对话框传递参数不同步的问题"><a href="#16-对话框传递参数不同步的问题" class="headerlink" title="16.对话框传递参数不同步的问题"></a>16.<del>对话框传递参数不同步的问题</del></h3><p>借出，还书的对话框显示状态与主页面相对有延时，两者不同步，如何修改？</p><p>即选中一栏之后，首次借出正常，若不取消勾选，第一次成功之后仍然可以成功借书（状态并未更新到借书状态框中），只有取消勾选，再次勾选，才能够在借书对话框中刷新状态。</p><h4 id="原因-11"><a href="#原因-11" class="headerlink" title="原因"></a>原因</h4><p>初步判断为rowselect中的列表参数首个元素添加参数未改变的问题</p><p><img src="E:\Files\Projects\CXCollege\software\Image\27.png" alt="27"></p><p>测试发现，书籍状态在选择行时向对话框传递过一次，但是在借出完书之后，选择行并未改变，并未重新写入，此时records中保存的仍然是修改之前的消息</p><h4 id="解决方案-13"><a href="#解决方案-13" class="headerlink" title="解决方案"></a>解决方案</h4><p>通过在借书、还书成功之后添加，取消勾选</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">selectRow</span>([]);</span><br></pre></td></tr></table></figure><h3 id="17-还多本书时，log页面显示参数缺失"><a href="#17-还多本书时，log页面显示参数缺失" class="headerlink" title="17.还多本书时，log页面显示参数缺失"></a>17.<del>还多本书时，log页面显示参数缺失</del></h3><h4 id="原因-12"><a href="#原因-12" class="headerlink" title="原因"></a>原因</h4><p>一开始以为是后端copy数据出现问题，通过F12查看发现是前端向后端传递的数据缺失</p><h4 id="解决方案-14"><a href="#解决方案-14" class="headerlink" title="解决方案"></a>解决方案</h4><p>values中添加borrowedTime，returnTime变量，bookDTOArray中添加id: item.id，修改bookLogDTOArray中的最后两行为  </p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">borrowedTime</span>:borrowedTime,</span><br><span class="line"><span class="attr">returnTime</span>: returnTime||<span class="literal">null</span></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; readerName,borrowedTime,returnTime &#125; = values;</span><br><span class="line"></span><br><span class="line">formData.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//将一个包含书籍信息的DTO对象添加到bookDTOArray数组</span></span><br><span class="line">    bookDTOArray.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">id</span>: item.<span class="property">id</span>,</span><br><span class="line">        <span class="attr">name</span>: item.<span class="property">name</span>,</span><br><span class="line">        <span class="attr">isbn</span>: item.<span class="property">isbn</span>,</span><br><span class="line">        <span class="attr">author</span>: item.<span class="property">author</span>,</span><br><span class="line">        <span class="attr">publisher</span>: item.<span class="property">publisher</span>,</span><br><span class="line">        <span class="attr">price</span>: item.<span class="property">price</span>,</span><br><span class="line">        <span class="attr">category</span>: item.<span class="property">category</span>,</span><br><span class="line">        <span class="attr">boughtTime</span>: item.<span class="property">boughtTime</span>,</span><br><span class="line">        <span class="attr">publishedTime</span>: item.<span class="property">publishedTime</span>,</span><br><span class="line">        <span class="attr">status</span>: item.<span class="property">status</span>,</span><br><span class="line">        <span class="attr">classification</span>: item.<span class="property">classification</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    bookLogDTOArray.<span class="title function_">push</span>(&#123;</span><br><span class="line">        readerName,</span><br><span class="line">        <span class="attr">bookId</span>: item.<span class="property">id</span>,</span><br><span class="line">        <span class="attr">bookName</span>: item.<span class="property">name</span>,</span><br><span class="line">        <span class="attr">bookIsbn</span>: item.<span class="property">isbn</span>,</span><br><span class="line">        <span class="attr">borrowedTime</span>:borrowedTime,</span><br><span class="line">        <span class="attr">returnTime</span>: returnTime||<span class="literal">null</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="18-无法将主页面向对话框传递的数据暂存给formData"><a href="#18-无法将主页面向对话框传递的数据暂存给formData" class="headerlink" title="18.无法将主页面向对话框传递的数据暂存给formData"></a>18.<del>无法将主页面向对话框传递的数据暂存给formData</del></h3><h4 id="原因-13"><a href="#原因-13" class="headerlink" title="原因"></a>原因</h4><p>setFormData函数调用位置错误</p><p>之前在data下方调用此函数，网页控制台查看发现其一直为空</p><h4 id="解决方案-15"><a href="#解决方案-15" class="headerlink" title="解决方案"></a>解决方案</h4><p>在钩子函数中调用setFormData(props.detailData);</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">waitTime</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (props.<span class="property">detailData</span>) &#123;</span><br><span class="line">            form?.<span class="property">current</span>?.<span class="title function_">setFieldsValue</span>(props.<span class="property">detailData</span>);</span><br><span class="line">            <span class="title function_">setFormData</span>(props.<span class="property">detailData</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            form?.<span class="property">current</span>?.<span class="title function_">resetFields</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;, [props.<span class="property">detailData</span>, props.<span class="property">visible</span>]);</span><br></pre></td></tr></table></figure><h3 id="19-图像显示不正常"><a href="#19-图像显示不正常" class="headerlink" title="19.图像显示不正常"></a>19.<del>图像显示不正常</del></h3><p>bug21修改成功后此处也解决</p><h3 id="20-Navicat与后端执行MySQL语句结果不一致"><a href="#20-Navicat与后端执行MySQL语句结果不一致" class="headerlink" title="20.Navicat与后端执行MySQL语句结果不一致"></a>20.<del>Navicat与后端执行MySQL语句结果不一致</del></h3><h4 id="原因-14"><a href="#原因-14" class="headerlink" title="原因"></a>原因</h4><p>1.resultMap与resultType用错</p><p>2.语句放错xml文件导致BaseResultMap不同无法对应</p><h3 id="解决方案-16"><a href="#解决方案-16" class="headerlink" title="解决方案"></a>解决方案</h3><p>1.修改resultMap为BaseResultMap</p><p>BaseResultMap将取得的数据库字段与VO类做映射</p><p>2.将mysql语句从移动到借还记录的xml文件中</p><h3 id="21-时间乱序"><a href="#21-时间乱序" class="headerlink" title="21.时间乱序"></a>21.<del>时间乱序</del></h3><h4 id="原因-15"><a href="#原因-15" class="headerlink" title="原因"></a>原因</h4><p>MySQL表格中测试数据忘记删除，使用数组的contact函数导致乱序</p><p>其余可能原因</p><blockquote><p>归还时间为null的问题<br>contact的问题（可能性不大）</p></blockquote><h4 id="解决方案-17"><a href="#解决方案-17" class="headerlink" title="解决方案"></a>解决方案</h4><p>删除多余测试数据</p><h3 id="22-ts中的引号"><a href="#22-ts中的引号" class="headerlink" title="22.ts中的引号"></a>22.<del>ts中的引号</del></h3><p>以下为正确用法</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">message.<span class="title function_">error</span>(<span class="string">`共<span class="subst">$&#123;sum&#125;</span>本书借出失败`</span>);</span><br></pre></td></tr></table></figure><p>以下为错误用法</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">message.<span class="title function_">error</span>(<span class="string">&#x27;共$&#123;sum&#125;本书借出失败&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="23-setXXX异步更新问题"><a href="#23-setXXX异步更新问题" class="headerlink" title="23. setXXX异步更新问题"></a>23. <del>setXXX异步更新问题</del></h3><blockquote><p>它会将新的状态值加入到一个队列中，并在稍后的时间点异步地批量更新组件的状态。这意味着，调用 setXXX 并不会立即更新组件的状态值，而是等待 React 系统在适当的时机进行批量&gt;更新。</p></blockquote><h4 id="解决方案-18"><a href="#解决方案-18" class="headerlink" title="解决方案"></a>解决方案</h4><p>使用useEffect钩子函数，在检测到变量被，更新后再设置innerHTML</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchJinrishici</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> jinrishici = <span class="built_in">require</span>(<span class="string">&#x27;jinrishici&#x27;</span>);</span><br><span class="line">    <span class="keyword">await</span> jinrishici.<span class="title function_">load</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;诗词内容&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>.<span class="property">content</span>);</span><br><span class="line">      <span class="title function_">setPoem</span>(result.<span class="property">data</span>.<span class="property">content</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;使用setPoem之后,poem变量&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(poem);</span><br><span class="line">      <span class="title function_">setInfo</span>(<span class="string">&quot;——&quot;</span> + result.<span class="property">data</span>.<span class="property">origin</span>.<span class="property">author</span> + <span class="string">&quot;《&quot;</span> + result.<span class="property">data</span>.<span class="property">origin</span>.<span class="property">title</span> + <span class="string">&quot;》&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">fetchJinrishici</span>();</span><br><span class="line">&#125;, []);</span><br><span class="line"></span><br><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;poem&quot;</span>)) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;1123&quot;</span>)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;poem&quot;</span>).<span class="property">innerHTML</span> = poem;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;info&quot;</span>)) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;info&quot;</span>).<span class="property">innerHTML</span> = info;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, [poem, info]);</span><br></pre></td></tr></table></figure><h3 id="24-注释问题"><a href="#24-注释问题" class="headerlink" title="24.注释问题"></a>24.<del>注释问题</del></h3><p>typescripts不同位置注释格式不同的问题，使用ctrl+？能更方便的注释，避免错误</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-选题与要求&quot;&gt;&lt;a href=&quot;#1-选题与要求&quot; class=&quot;headerlink&quot; title=&quot;1.选题与要求&quot;&gt;&lt;/a&gt;1.选题与要求&lt;/h2&gt;&lt;h3 id=&quot;个人图书馆&quot;&gt;&lt;a href=&quot;#个人图书馆&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/05/06/hello-world/"/>
    <id>http://example.com/2023/05/06/hello-world/</id>
    <published>2023-05-06T12:11:18.042Z</published>
    <updated>2023-05-06T12:01:06.831Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
